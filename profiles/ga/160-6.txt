         5451138629 function calls (5451016590 primitive calls) in 3158.846 seconds
        1   22.841   22.841 3157.771 3157.771 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    8.883    0.001 3134.851    0.310 GerrymanderingMCMC.py:235(recombination_of_districts)
   317319    3.556    0.000 1685.530    0.005 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1269276    2.450    0.000 1188.306    0.001 GerrymanderingMCMC.py:190(__district_size)
267183636  238.366    0.000  970.766    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   17.831    0.002  556.172    0.055 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.088    0.000  114.872    0.006 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.081    0.000  112.423    0.006 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   37.858    0.002  112.253    0.006 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.139    0.000   69.051    0.007 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    3.741    0.000   25.828    0.003 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.147    0.000    3.628    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.486    0.000    1.493    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.996    0.996 GerrymanderingMCMC.py:1(<module>)
        1    0.001    0.001    0.083    0.083 GerrymanderingMCMC.py:21(__init__)
        1    0.015    0.015    0.082    0.082 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.018    0.018 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
