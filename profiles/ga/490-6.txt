         5515348142 function calls (5515226103 primitive calls) in 3231.532 seconds
        1   23.394   23.394 3230.408 3230.408 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    9.095    0.001 3206.932    0.318 GerrymanderingMCMC.py:235(recombination_of_districts)
   323002    3.667    0.000 1745.988    0.005 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1292008    2.525    0.000 1231.006    0.001 GerrymanderingMCMC.py:190(__district_size)
273054540  242.009    0.000 1004.373    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   18.392    0.002  561.832    0.056 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.064    0.000  116.635    0.006 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.097    0.000  114.183    0.006 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   39.047    0.002  113.977    0.006 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.143    0.000   70.147    0.007 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    3.865    0.000   26.083    0.003 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.142    0.000    3.749    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.499    0.000    1.500    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    1.039    1.039 GerrymanderingMCMC.py:1(<module>)
        1    0.001    0.001    0.088    0.088 GerrymanderingMCMC.py:21(__init__)
        1    0.017    0.017    0.087    0.087 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.018    0.018 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
