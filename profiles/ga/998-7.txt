         5262182890 function calls (5262060851 primitive calls) in 2023.072 seconds
        1   22.504   22.504 2022.272 2022.272 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.460    0.001 1999.684    0.198 GerrymanderingMCMC.py:235(recombination_of_districts)
   301948    2.227    0.000 1021.266    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1207792    1.525    0.000  720.732    0.001 GerrymanderingMCMC.py:190(__district_size)
251107090  145.218    0.000  586.383    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   12.612    0.001  366.925    0.036 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.050    0.000   77.751    0.004 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.070    0.000   75.916    0.004 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   27.230    0.001   75.764    0.004 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.105    0.000   46.444    0.005 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.597    0.000   16.658    0.002 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.119    0.000    2.611    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.371    0.000    1.037    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.740    0.740 GerrymanderingMCMC.py:1(<module>)
        1    0.001    0.001    0.055    0.055 GerrymanderingMCMC.py:21(__init__)
        1    0.010    0.010    0.054    0.054 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.012    0.012 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
