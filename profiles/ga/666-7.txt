         5245749802 function calls (5245627763 primitive calls) in 2008.515 seconds
        1   22.360   22.360 2007.720 2007.720 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.434    0.001 1984.990    0.197 GerrymanderingMCMC.py:235(recombination_of_districts)
   299725    2.177    0.000 1014.617    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1198900    1.454    0.000  714.878    0.001 GerrymanderingMCMC.py:190(__district_size)
249789010  143.851    0.000  585.134    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   12.636    0.001  364.897    0.036 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.054    0.000   78.774    0.004 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.080    0.000   76.866    0.004 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   28.098    0.001   76.701    0.004 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.116    0.000   46.829    0.005 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.596    0.000   16.858    0.002 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.124    0.000    2.747    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.349    0.000    0.975    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.728    0.728 GerrymanderingMCMC.py:1(<module>)
        1    0.001    0.001    0.055    0.055 GerrymanderingMCMC.py:21(__init__)
        1    0.010    0.010    0.054    0.054 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.012    0.012 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
