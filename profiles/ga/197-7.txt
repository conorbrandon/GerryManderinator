         5193432676 function calls (5193310637 primitive calls) in 1972.586 seconds
        1   21.251   21.251 1971.852 1971.852 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.239    0.001 1950.490    0.193 GerrymanderingMCMC.py:235(recombination_of_districts)
   288450    2.099    0.000  989.408    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1153800    1.428    0.000  701.134    0.001 GerrymanderingMCMC.py:190(__district_size)
244967594  140.883    0.000  574.089    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   12.389    0.001  363.399    0.036 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.050    0.000   77.328    0.004 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.069    0.000   75.505    0.004 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   27.142    0.001   75.359    0.004 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.114    0.000   46.043    0.005 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.650    0.000   16.765    0.002 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.126    0.000    2.604    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.348    0.000    0.989    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.675    0.675 GerrymanderingMCMC.py:1(<module>)
        1    0.001    0.001    0.055    0.055 GerrymanderingMCMC.py:21(__init__)
        1    0.010    0.010    0.054    0.054 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.012    0.012 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
