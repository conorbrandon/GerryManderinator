         5334601183 function calls (5334479144 primitive calls) in 2042.712 seconds
        1   21.364   21.364 2041.976 2041.976 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.545    0.001 2020.558    0.200 GerrymanderingMCMC.py:235(recombination_of_districts)
   304885    2.258    0.000 1049.151    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1219540    1.457    0.000  740.615    0.001 GerrymanderingMCMC.py:190(__district_size)
256815538  146.796    0.000  606.105    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   12.507    0.001  367.168    0.036 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.061    0.000   78.208    0.004 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.068    0.000   76.375    0.004 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   27.569    0.001   76.234    0.004 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.106    0.000   46.577    0.005 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.556    0.000   16.789    0.002 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.111    0.000    2.626    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.363    0.000    1.026    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.677    0.677 GerrymanderingMCMC.py:1(<module>)
        1    0.001    0.001    0.055    0.055 GerrymanderingMCMC.py:21(__init__)
        1    0.010    0.010    0.054    0.054 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.012    0.012 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
