         5673775154 function calls (5673653115 primitive calls) in 2164.158 seconds
        1   23.402   23.402 2163.419 2163.419 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    6.106    0.001 2139.953    0.212 GerrymanderingMCMC.py:235(recombination_of_districts)
   332307    2.469    0.000 1159.929    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1329228    1.619    0.000  816.772    0.001 GerrymanderingMCMC.py:190(__district_size)
286505766  162.691    0.000  669.427    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   12.890    0.001  368.145    0.036 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.066    0.000   78.930    0.004 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.089    0.000   76.981    0.004 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   28.154    0.001   76.809    0.004 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.123    0.000   46.689    0.005 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.656    0.000   16.739    0.002 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.128    0.000    2.775    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.379    0.000    1.011    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.678    0.678 GerrymanderingMCMC.py:1(<module>)
        1    0.001    0.001    0.055    0.055 GerrymanderingMCMC.py:21(__init__)
        1    0.010    0.010    0.055    0.055 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.012    0.012 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
