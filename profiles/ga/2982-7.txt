         5219311375 function calls (5219189336 primitive calls) in 1995.575 seconds
        1   21.785   21.785 1994.783 1994.783 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.380    0.001 1972.923    0.195 GerrymanderingMCMC.py:235(recombination_of_districts)
   296260    2.150    0.000 1001.059    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1185040    1.460    0.000  706.932    0.001 GerrymanderingMCMC.py:190(__district_size)
247487486  138.030    0.000  577.395    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   12.588    0.001  365.266    0.036 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.050    0.000   78.270    0.004 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.070    0.000   76.449    0.004 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   27.720    0.001   76.304    0.004 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.115    0.000   46.413    0.005 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.572    0.000   16.607    0.002 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.129    0.000    2.621    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.347    0.000    0.971    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.727    0.727 GerrymanderingMCMC.py:1(<module>)
        1    0.001    0.001    0.055    0.055 GerrymanderingMCMC.py:21(__init__)
        1    0.010    0.010    0.055    0.055 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.012    0.012 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
