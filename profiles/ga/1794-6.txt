         5676779774 function calls (5676657735 primitive calls) in 3285.560 seconds
        1   23.225   23.225 3284.416 3284.416 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    9.392    0.001 3261.102    0.323 GerrymanderingMCMC.py:235(recombination_of_districts)
   337449    3.810    0.000 1803.029    0.005 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1349796    2.530    0.000 1271.563    0.001 GerrymanderingMCMC.py:190(__district_size)
286481870  251.838    0.000 1042.652    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   18.489    0.002  562.775    0.056 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.060    0.000  116.269    0.006 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.097    0.000  113.714    0.006 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   38.963    0.002  113.521    0.006 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.145    0.000   69.692    0.007 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    3.801    0.000   25.673    0.003 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.139    0.000    3.739    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.513    0.000    1.552    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    1.050    1.050 GerrymanderingMCMC.py:1(<module>)
        1    0.001    0.001    0.087    0.087 GerrymanderingMCMC.py:21(__init__)
        1    0.016    0.016    0.086    0.086 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.019    0.019 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
