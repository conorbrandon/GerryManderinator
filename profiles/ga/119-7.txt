         5450236467 function calls (5450114428 primitive calls) in 2075.170 seconds
        1   21.250   21.250 2074.339 2074.339 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.858    0.001 2052.980    0.203 GerrymanderingMCMC.py:235(recombination_of_districts)
   316902    2.366    0.000 1090.846    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1267608    1.608    0.000  768.852    0.001 GerrymanderingMCMC.py:190(__district_size)
267401726  154.590    0.000  630.582    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   12.493    0.001  363.633    0.036 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.049    0.000   77.926    0.004 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.071    0.000   76.128    0.004 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   27.445    0.001   75.972    0.004 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.103    0.000   46.700    0.005 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.597    0.000   16.843    0.002 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.114    0.000    2.618    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.347    0.000    0.988    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.778    0.778 GerrymanderingMCMC.py:1(<module>)
        1    0.001    0.001    0.055    0.055 GerrymanderingMCMC.py:21(__init__)
        1    0.010    0.010    0.055    0.055 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.012    0.012 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
