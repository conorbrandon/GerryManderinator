         5677681253 function calls (5677559214 primitive calls) in 2168.155 seconds
        1   21.240   21.240 2167.360 2167.360 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    6.113    0.001 2146.048    0.212 GerrymanderingMCMC.py:235(recombination_of_districts)
   334815    2.519    0.000 1173.733    0.004 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1339260    1.667    0.000  830.027    0.001 GerrymanderingMCMC.py:190(__district_size)
286314308  166.692    0.000  678.386    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   12.640    0.001  367.977    0.036 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.049    0.000   78.067    0.004 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.070    0.000   76.234    0.004 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   27.058    0.001   76.071    0.004 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.109    0.000   46.721    0.005 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.555    0.000   16.882    0.002 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.117    0.000    2.722    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.354    0.000    1.024    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.735    0.735 GerrymanderingMCMC.py:1(<module>)
        1    0.001    0.001    0.055    0.055 GerrymanderingMCMC.py:21(__init__)
        1    0.010    0.010    0.055    0.055 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.012    0.012 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
