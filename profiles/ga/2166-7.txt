         5481163548 function calls (5481041509 primitive calls) in 2097.351 seconds
        1   22.110   22.110 2096.553 2096.553 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.884    0.001 2074.386    0.205 GerrymanderingMCMC.py:235(recombination_of_districts)
   316857    2.343    0.000 1102.417    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1267428    1.594    0.000  777.441    0.001 GerrymanderingMCMC.py:190(__district_size)
270377836  154.623    0.000  637.131    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   12.584    0.001  364.936    0.036 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.064    0.000   79.051    0.004 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.070    0.000   77.205    0.004 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   28.256    0.001   77.060    0.004 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.118    0.000   46.994    0.005 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.646    0.000   16.806    0.002 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.110    0.000    2.616    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.359    0.000    0.987    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.740    0.740 GerrymanderingMCMC.py:1(<module>)
        1    0.001    0.001    0.055    0.055 GerrymanderingMCMC.py:21(__init__)
        1    0.010    0.010    0.054    0.054 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.012    0.012 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
