         5346147931 function calls (5346025892 primitive calls) in 2021.445 seconds
        1   21.152   21.152 2020.559 2020.559 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.534    0.001 1999.213    0.198 GerrymanderingMCMC.py:235(recombination_of_districts)
   302089    2.180    0.000 1031.940    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1208356    1.497    0.000  727.417    0.001 GerrymanderingMCMC.py:190(__district_size)
258171036  146.213    0.000  595.509    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   12.511    0.001  363.902    0.036 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.056    0.000   76.722    0.004 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.070    0.000   74.922    0.004 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   26.640    0.001   74.777    0.004 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.103    0.000   45.796    0.005 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.541    0.000   16.619    0.002 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.112    0.000    2.603    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.390    0.000    1.031    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.806    0.806 GerrymanderingMCMC.py:1(<module>)
        1    0.001    0.001    0.074    0.074 GerrymanderingMCMC.py:21(__init__)
        1    0.010    0.010    0.073    0.073 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.026    0.026 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
