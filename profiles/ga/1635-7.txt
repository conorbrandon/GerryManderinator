         5409906368 function calls (5409784329 primitive calls) in 2071.642 seconds
        1   22.426   22.426 2070.884 2070.884 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.554    0.001 2048.351    0.203 GerrymanderingMCMC.py:235(recombination_of_districts)
   309584    2.261    0.000 1073.344    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1238336    1.482    0.000  755.394    0.001 GerrymanderingMCMC.py:190(__district_size)
263041682  150.648    0.000  616.304    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   12.860    0.001  371.508    0.037 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.053    0.000   78.049    0.004 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.081    0.000   76.152    0.004 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   27.131    0.001   75.992    0.004 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.106    0.000   46.427    0.005 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.660    0.000   16.952    0.002 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.111    0.000    2.630    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.358    0.000    0.993    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.696    0.696 GerrymanderingMCMC.py:1(<module>)
        1    0.001    0.001    0.055    0.055 GerrymanderingMCMC.py:21(__init__)
        1    0.010    0.010    0.054    0.054 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.012    0.012 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
