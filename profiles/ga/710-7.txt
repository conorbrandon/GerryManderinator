         5279394094 function calls (5279272055 primitive calls) in 2025.438 seconds
        1   21.693   21.693 2024.659 2024.659 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.473    0.001 2002.900    0.198 GerrymanderingMCMC.py:235(recombination_of_districts)
   303278    2.208    0.000 1032.545    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1213112    1.487    0.000  729.516    0.001 GerrymanderingMCMC.py:190(__district_size)
252332314  147.135    0.000  594.794    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   12.616    0.001  366.269    0.036 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.049    0.000   78.632    0.004 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.068    0.000   76.806    0.004 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   27.641    0.001   76.663    0.004 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.108    0.000   46.878    0.005 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.646    0.000   16.911    0.002 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.114    0.000    2.676    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.414    0.000    1.071    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.705    0.705 GerrymanderingMCMC.py:1(<module>)
        1    0.001    0.001    0.068    0.068 GerrymanderingMCMC.py:21(__init__)
        1    0.011    0.011    0.068    0.068 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.012    0.012 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
