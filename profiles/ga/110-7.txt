         5262794483 function calls (5262672444 primitive calls) in 1973.884 seconds
        1   21.532   21.532 1973.125 1973.125 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.397    0.001 1951.452    0.193 GerrymanderingMCMC.py:235(recombination_of_districts)
   297390    2.162    0.000  999.739    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1189560    1.504    0.000  704.132    0.001 GerrymanderingMCMC.py:190(__district_size)
250793044  143.996    0.000  576.777    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   12.494    0.001  360.642    0.036 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.050    0.000   77.054    0.004 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.079    0.000   75.234    0.004 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   27.429    0.001   75.077    0.004 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.104    0.000   45.852    0.005 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.588    0.000   16.542    0.002 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.117    0.000    2.697    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.340    0.000    0.964    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.700    0.700 GerrymanderingMCMC.py:1(<module>)
        1    0.001    0.001    0.054    0.054 GerrymanderingMCMC.py:21(__init__)
        1    0.010    0.010    0.054    0.054 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.012    0.012 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
