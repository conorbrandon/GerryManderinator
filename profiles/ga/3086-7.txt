         5231341926 function calls (5231219887 primitive calls) in 1999.745 seconds
        1   21.841   21.841 1998.889 1998.889 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.308    0.001 1976.977    0.196 GerrymanderingMCMC.py:235(recombination_of_districts)
   294461    2.186    0.000 1005.843    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1177844    1.427    0.000  709.910    0.001 GerrymanderingMCMC.py:190(__district_size)
247973300  140.086    0.000  580.996    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   12.454    0.001  365.952    0.036 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.050    0.000   78.770    0.004 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.074    0.000   76.908    0.004 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   27.336    0.001   76.757    0.004 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.109    0.000   47.022    0.005 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.610    0.000   16.869    0.002 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.115    0.000    2.651    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.347    0.000    0.983    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.788    0.788 GerrymanderingMCMC.py:1(<module>)
        1    0.001    0.001    0.056    0.056 GerrymanderingMCMC.py:21(__init__)
        1    0.010    0.010    0.055    0.055 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.012    0.012 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
