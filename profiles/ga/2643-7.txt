         5437740014 function calls (5437617975 primitive calls) in 2072.789 seconds
        1   22.206   22.206 2071.993 2071.993 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.793    0.001 2049.729    0.203 GerrymanderingMCMC.py:235(recombination_of_districts)
   320377    2.318    0.000 1081.216    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1281508    1.544    0.000  759.866    0.001 GerrymanderingMCMC.py:190(__district_size)
266358442  150.535    0.000  620.973    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   12.853    0.001  364.293    0.036 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.063    0.000   78.310    0.004 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.071    0.000   76.433    0.004 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   27.769    0.001   76.281    0.004 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.119    0.000   46.537    0.005 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.610    0.000   16.726    0.002 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.117    0.000    2.656    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.350    0.000    0.990    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.737    0.737 GerrymanderingMCMC.py:1(<module>)
        1    0.001    0.001    0.055    0.055 GerrymanderingMCMC.py:21(__init__)
        1    0.010    0.010    0.054    0.054 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.012    0.012 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
