         5327645162 function calls (5327523123 primitive calls) in 2018.673 seconds
        1   21.553   21.553 2017.540 2017.540 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.453    0.001 1995.916    0.198 GerrymanderingMCMC.py:235(recombination_of_districts)
   302695    2.189    0.000 1030.316    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1210780    1.477    0.000  725.858    0.001 GerrymanderingMCMC.py:190(__district_size)
255901282  145.798    0.000  593.118    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   12.548    0.001  365.876    0.036 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.049    0.000   76.503    0.004 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.074    0.000   74.655    0.004 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   26.246    0.001   74.501    0.004 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.119    0.000   45.747    0.005 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.589    0.000   16.795    0.002 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.114    0.000    2.695    0.000 GerrymanderingMCMC.py:157(__random_district_label)
        1    0.000    0.000    1.074    1.074 GerrymanderingMCMC.py:1(<module>)
    10100    0.343    0.000    0.982    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.001    0.001    0.055    0.055 GerrymanderingMCMC.py:21(__init__)
        1    0.010    0.010    0.054    0.054 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.012    0.012 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
