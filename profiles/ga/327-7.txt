         5059526069 function calls (5059404030 primitive calls) in 1942.759 seconds
        1   22.000   22.000 1941.998 1941.998 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.128    0.001 1919.939    0.190 GerrymanderingMCMC.py:235(recombination_of_districts)
   283844    2.079    0.000  957.583    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1135376    1.475    0.000  673.191    0.001 GerrymanderingMCMC.py:190(__district_size)
234289776  136.640    0.000  549.839    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   12.325    0.001  360.662    0.036 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.081    0.000   77.379    0.004 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.070    0.000   75.530    0.004 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   27.271    0.001   75.388    0.004 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.104    0.000   45.938    0.005 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.534    0.000   16.665    0.002 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.132    0.000    2.740    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.351    0.000    0.984    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.701    0.701 GerrymanderingMCMC.py:1(<module>)
        1    0.001    0.001    0.055    0.055 GerrymanderingMCMC.py:21(__init__)
        1    0.010    0.010    0.054    0.054 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.012    0.012 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
