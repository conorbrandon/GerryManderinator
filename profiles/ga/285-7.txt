         5574974568 function calls (5574852529 primitive calls) in 2143.744 seconds
        1   21.745   21.745 2143.002 2143.002 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.918    0.001 2121.121    0.210 GerrymanderingMCMC.py:235(recombination_of_districts)
   324034    2.433    0.000 1136.261    0.004 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1296136    1.700    0.000  801.330    0.001 GerrymanderingMCMC.py:190(__district_size)
277341838  162.665    0.000  651.367    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   12.611    0.001  370.476    0.037 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.062    0.000   78.802    0.004 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.089    0.000   76.853    0.004 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   27.628    0.001   76.673    0.004 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.121    0.000   47.053    0.005 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.620    0.000   17.137    0.002 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.132    0.000    2.783    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.345    0.000    0.973    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.680    0.680 GerrymanderingMCMC.py:1(<module>)
        1    0.001    0.001    0.056    0.056 GerrymanderingMCMC.py:21(__init__)
        1    0.010    0.010    0.055    0.055 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.012    0.012 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
