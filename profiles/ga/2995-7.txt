         5784256180 function calls (5784134141 primitive calls) in 2201.859 seconds
        1   22.062   22.062 2201.032 2201.032 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    6.202    0.001 2178.901    0.216 GerrymanderingMCMC.py:235(recombination_of_districts)
   345104    2.648    0.000 1202.116    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1380416    1.677    0.000  845.877    0.001 GerrymanderingMCMC.py:190(__district_size)
296023338  169.799    0.000  694.031    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   12.678    0.001  364.409    0.036 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.061    0.000   77.653    0.004 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.072    0.000   75.809    0.004 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   27.087    0.001   75.648    0.004 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.106    0.000   46.308    0.005 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.605    0.000   16.873    0.002 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.118    0.000    2.781    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.359    0.000    1.015    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.768    0.768 GerrymanderingMCMC.py:1(<module>)
        1    0.001    0.001    0.055    0.055 GerrymanderingMCMC.py:21(__init__)
        1    0.010    0.010    0.054    0.054 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.012    0.012 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
