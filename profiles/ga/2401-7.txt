         5263094153 function calls (5262972114 primitive calls) in 2010.221 seconds
        1   21.661   21.661 2009.426 2009.426 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.364    0.001 1987.690    0.197 GerrymanderingMCMC.py:235(recombination_of_districts)
   303286    2.129    0.000 1017.713    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1213144    1.458    0.000  717.109    0.001 GerrymanderingMCMC.py:190(__district_size)
250941142  142.324    0.000  585.971    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   12.618    0.001  366.004    0.036 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.050    0.000   78.451    0.004 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.068    0.000   76.561    0.004 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   27.404    0.001   76.411    0.004 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.108    0.000   46.633    0.005 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.617    0.000   16.758    0.002 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.108    0.000    2.664    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.345    0.000    0.971    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.736    0.736 GerrymanderingMCMC.py:1(<module>)
        1    0.001    0.001    0.055    0.055 GerrymanderingMCMC.py:21(__init__)
        1    0.010    0.010    0.054    0.054 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.012    0.012 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
