         5677988701 function calls (5677866662 primitive calls) in 2174.801 seconds
        1   23.094   23.094 2173.950 2173.950 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    6.079    0.001 2150.797    0.213 GerrymanderingMCMC.py:235(recombination_of_districts)
   335099    2.384    0.000 1169.006    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1340396    1.644    0.000  826.317    0.001 GerrymanderingMCMC.py:190(__district_size)
286290670  164.741    0.000  677.191    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   12.888    0.001  370.521    0.037 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.054    0.000   80.126    0.004 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.080    0.000   78.305    0.004 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   28.447    0.001   78.149    0.004 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.108    0.000   47.603    0.005 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.723    0.000   16.928    0.002 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.114    0.000    2.702    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.380    0.000    1.026    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.738    0.738 GerrymanderingMCMC.py:1(<module>)
        1    0.001    0.001    0.108    0.108 GerrymanderingMCMC.py:21(__init__)
        1    0.023    0.023    0.107    0.107 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.025    0.025 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
