         5627431640 function calls (5627309601 primitive calls) in 2133.444 seconds
        1   21.131   21.131 2132.592 2132.592 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    6.075    0.001 2111.401    0.209 GerrymanderingMCMC.py:235(recombination_of_districts)
   332580    2.460    0.000 1144.549    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1330320    1.648    0.000  802.970    0.001 GerrymanderingMCMC.py:190(__district_size)
282477874  162.067    0.000  655.811    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   12.526    0.001  367.076    0.036 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.051    0.000   77.529    0.004 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.070    0.000   75.716    0.004 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   27.105    0.001   75.566    0.004 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.105    0.000   46.346    0.005 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.526    0.000   16.788    0.002 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.114    0.000    2.761    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.342    0.000    1.019    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.789    0.789 GerrymanderingMCMC.py:1(<module>)
        1    0.001    0.001    0.055    0.055 GerrymanderingMCMC.py:21(__init__)
        1    0.010    0.010    0.054    0.054 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.012    0.012 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
