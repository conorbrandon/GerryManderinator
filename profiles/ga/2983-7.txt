         5465184305 function calls (5465062266 primitive calls) in 2073.636 seconds
        1   20.960   20.960 2072.868 2072.868 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.750    0.001 2051.838    0.203 GerrymanderingMCMC.py:235(recombination_of_districts)
   311914    2.297    0.000 1082.572    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1247656    1.531    0.000  763.449    0.001 GerrymanderingMCMC.py:190(__district_size)
267905240  151.082    0.000  625.020    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   12.605    0.001  367.350    0.036 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.050    0.000   77.372    0.004 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.066    0.000   75.535    0.004 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   26.656    0.001   75.398    0.004 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.128    0.000   46.280    0.005 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.612    0.000   16.884    0.002 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.120    0.000    2.636    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.341    0.000    1.021    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.719    0.719 GerrymanderingMCMC.py:1(<module>)
        1    0.001    0.001    0.054    0.054 GerrymanderingMCMC.py:21(__init__)
        1    0.010    0.010    0.054    0.054 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.012    0.012 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
