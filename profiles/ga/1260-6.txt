         5700088503 function calls (5699966464 primitive calls) in 3412.006 seconds
        1   23.260   23.260 3410.933 3410.933 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    9.721    0.001 3387.579    0.335 GerrymanderingMCMC.py:235(recombination_of_districts)
   337916    3.902    0.000 1888.212    0.006 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1351664    2.644    0.000 1330.488    0.001 GerrymanderingMCMC.py:190(__district_size)
288006742  263.770    0.000 1089.807    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   19.060    0.002  583.522    0.058 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.067    0.000  119.973    0.006 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.100    0.000  117.429    0.006 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   40.292    0.002  117.219    0.006 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.144    0.000   72.275    0.007 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    4.063    0.000   27.032    0.003 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.151    0.000    3.820    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.531    0.000    1.573    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.982    0.982 GerrymanderingMCMC.py:1(<module>)
        1    0.001    0.001    0.084    0.084 GerrymanderingMCMC.py:21(__init__)
        1    0.016    0.016    0.083    0.083 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.018    0.018 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
