         5489749484 function calls (5489627445 primitive calls) in 2083.009 seconds
        1   21.195   21.195 2082.218 2082.218 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.865    0.001 2060.965    0.204 GerrymanderingMCMC.py:235(recombination_of_districts)
   314948    2.429    0.000 1093.325    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1259792    1.593    0.000  769.126    0.001 GerrymanderingMCMC.py:190(__district_size)
270340966  152.412    0.000  629.442    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   12.570    0.001  363.852    0.036 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.049    0.000   77.981    0.004 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.089    0.000   76.221    0.004 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   27.174    0.001   76.055    0.004 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.106    0.000   46.197    0.005 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.622    0.000   16.836    0.002 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.109    0.000    2.578    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.358    0.000    0.995    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.731    0.731 GerrymanderingMCMC.py:1(<module>)
        1    0.001    0.001    0.055    0.055 GerrymanderingMCMC.py:21(__init__)
        1    0.010    0.010    0.054    0.054 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.012    0.012 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
