         5497571587 function calls (5497449548 primitive calls) in 2101.523 seconds
        1   22.093   22.093 2100.778 2100.778 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.859    0.001 2078.626    0.206 GerrymanderingMCMC.py:235(recombination_of_districts)
   319690    2.356    0.000 1103.421    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1278760    1.570    0.000  781.360    0.001 GerrymanderingMCMC.py:190(__district_size)
271024544  158.529    0.000  640.905    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   12.681    0.001  368.088    0.036 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.053    0.000   78.627    0.004 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.126    0.000   76.728    0.004 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   27.184    0.001   76.515    0.004 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.109    0.000   46.610    0.005 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.662    0.000   16.784    0.002 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.137    0.000    2.771    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.364    0.000    1.020    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.684    0.684 GerrymanderingMCMC.py:1(<module>)
        1    0.001    0.001    0.056    0.056 GerrymanderingMCMC.py:21(__init__)
        1    0.010    0.010    0.055    0.055 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.012    0.012 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
