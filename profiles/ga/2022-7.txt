         5197110665 function calls (5196988626 primitive calls) in 1979.678 seconds
        1   21.537   21.537 1978.852 1978.852 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.369    0.001 1957.259    0.194 GerrymanderingMCMC.py:235(recombination_of_districts)
   297065    2.252    0.000  989.437    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1188260    1.405    0.000  696.831    0.001 GerrymanderingMCMC.py:190(__district_size)
245140480  142.785    0.000  570.412    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   12.908    0.001  369.677    0.037 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.052    0.000   77.396    0.004 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.069    0.000   75.575    0.004 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   27.259    0.001   75.427    0.004 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.107    0.000   46.270    0.005 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.637    0.000   16.628    0.002 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.117    0.000    2.768    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.360    0.000    1.005    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.766    0.766 GerrymanderingMCMC.py:1(<module>)
        1    0.001    0.001    0.055    0.055 GerrymanderingMCMC.py:21(__init__)
        1    0.010    0.010    0.055    0.055 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.012    0.012 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
