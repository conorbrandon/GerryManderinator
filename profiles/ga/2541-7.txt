         5206194888 function calls (5206072849 primitive calls) in 1987.199 seconds
        1   21.599   21.599 1986.444 1986.444 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.354    0.001 1964.759    0.195 GerrymanderingMCMC.py:235(recombination_of_districts)
   293754    2.175    0.000  994.624    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1175016    1.433    0.000  701.678    0.001 GerrymanderingMCMC.py:190(__district_size)
245975404  139.104    0.000  571.718    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   12.514    0.001  365.945    0.036 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.051    0.000   78.234    0.004 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.070    0.000   76.382    0.004 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   27.275    0.001   76.211    0.004 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.106    0.000   46.649    0.005 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.573    0.000   16.832    0.002 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.115    0.000    2.774    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.340    0.000    1.008    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.695    0.695 GerrymanderingMCMC.py:1(<module>)
        1    0.001    0.001    0.055    0.055 GerrymanderingMCMC.py:21(__init__)
        1    0.010    0.010    0.054    0.054 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.012    0.012 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
