         5435245443 function calls (5435123404 primitive calls) in 2060.250 seconds
        1   21.492   21.492 2059.521 2059.521 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.647    0.001 2037.903    0.202 GerrymanderingMCMC.py:235(recombination_of_districts)
   313882    2.337    0.000 1072.693    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1255528    1.576    0.000  756.116    0.001 GerrymanderingMCMC.py:190(__district_size)
265746558  151.773    0.000  619.467    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   12.599    0.001  365.681    0.036 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.051    0.000   76.998    0.004 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.073    0.000   75.122    0.004 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   26.819    0.001   74.970    0.004 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.106    0.000   46.147    0.005 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.610    0.000   16.721    0.002 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.118    0.000    2.797    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.359    0.000    1.014    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.670    0.670 GerrymanderingMCMC.py:1(<module>)
        1    0.001    0.001    0.055    0.055 GerrymanderingMCMC.py:21(__init__)
        1    0.010    0.010    0.054    0.054 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.012    0.012 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
