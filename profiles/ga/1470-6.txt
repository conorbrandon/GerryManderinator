         5488040309 function calls (5487918270 primitive calls) in 3184.568 seconds
        1   23.905   23.905 3183.492 3183.492 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    8.813    0.001 3159.470    0.313 GerrymanderingMCMC.py:235(recombination_of_districts)
   321295    3.627    0.000 1705.404    0.005 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1285180    2.453    0.000 1206.311    0.001 GerrymanderingMCMC.py:190(__district_size)
270339946  237.103    0.000  987.755    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   18.457    0.002  561.630    0.056 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.062    0.000  117.496    0.006 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.083    0.000  115.069    0.006 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   39.717    0.002  114.891    0.006 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.142    0.000   70.224    0.007 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    3.885    0.000   25.926    0.003 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.163    0.000    3.704    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.524    0.000    1.521    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.987    0.987 GerrymanderingMCMC.py:1(<module>)
        1    0.001    0.001    0.083    0.083 GerrymanderingMCMC.py:21(__init__)
        1    0.016    0.016    0.082    0.082 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.018    0.018 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
