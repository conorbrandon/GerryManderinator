         5270124726 function calls (5270002687 primitive calls) in 2012.818 seconds
        1   21.746   21.746 2011.972 2011.972 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.520    0.001 1990.169    0.197 GerrymanderingMCMC.py:235(recombination_of_districts)
   298993    2.213    0.000 1014.353    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1195972    1.466    0.000  710.693    0.001 GerrymanderingMCMC.py:190(__district_size)
251579030  143.548    0.000  581.396    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   12.939    0.001  368.045    0.036 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.050    0.000   76.987    0.004 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.070    0.000   75.163    0.004 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   27.029    0.001   75.016    0.004 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.122    0.000   45.858    0.005 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.624    0.000   16.801    0.002 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.113    0.000    2.627    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.345    0.000    0.960    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.786    0.786 GerrymanderingMCMC.py:1(<module>)
        1    0.001    0.001    0.056    0.056 GerrymanderingMCMC.py:21(__init__)
        1    0.010    0.010    0.055    0.055 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.012    0.012 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
