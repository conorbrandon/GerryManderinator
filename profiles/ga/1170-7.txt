         5310737309 function calls (5310615270 primitive calls) in 2016.257 seconds
        1   22.386   22.386 2015.460 2015.460 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.494    0.001 1992.991    0.197 GerrymanderingMCMC.py:235(recombination_of_districts)
   301814    2.195    0.000 1021.984    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1207256    1.548    0.000  720.771    0.001 GerrymanderingMCMC.py:190(__district_size)
254961616  143.733    0.000  589.294    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   12.838    0.001  366.965    0.036 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.052    0.000   77.701    0.004 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.077    0.000   75.802    0.004 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   27.217    0.001   75.647    0.004 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.107    0.000   46.221    0.005 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.603    0.000   16.587    0.002 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.113    0.000    2.629    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.341    0.000    0.966    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.738    0.738 GerrymanderingMCMC.py:1(<module>)
        1    0.001    0.001    0.055    0.055 GerrymanderingMCMC.py:21(__init__)
        1    0.010    0.010    0.054    0.054 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.012    0.012 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
