         5169248341 function calls (5169126302 primitive calls) in 3146.352 seconds
        1   23.070   23.070 3145.190 3145.190 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    8.571    0.001 3121.955    0.309 GerrymanderingMCMC.py:235(recombination_of_districts)
   289136    3.342    0.000 1615.086    0.006 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1156544    2.351    0.000 1144.090    0.001 GerrymanderingMCMC.py:190(__district_size)
243149740  235.093    0.000  938.471    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   19.229    0.002  584.033    0.058 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.060    0.000  120.285    0.006 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.084    0.000  117.721    0.006 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   39.370    0.002  117.545    0.006 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.147    0.000   72.598    0.007 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    4.038    0.000   27.162    0.003 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.155    0.000    3.828    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.528    0.000    1.561    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    1.069    1.069 GerrymanderingMCMC.py:1(<module>)
        1    0.001    0.001    0.087    0.087 GerrymanderingMCMC.py:21(__init__)
        1    0.016    0.016    0.086    0.086 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.019    0.019 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
