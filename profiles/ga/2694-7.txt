         5229500772 function calls (5229378733 primitive calls) in 1993.535 seconds
        1   21.317   21.317 1992.728 1992.728 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.495    0.001 1971.311    0.195 GerrymanderingMCMC.py:235(recombination_of_districts)
   297034    2.165    0.000 1006.422    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1188136    1.457    0.000  708.209    0.001 GerrymanderingMCMC.py:190(__district_size)
248484674  139.590    0.000  576.559    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   12.513    0.001  368.384    0.036 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.057    0.000   77.716    0.004 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.071    0.000   75.874    0.004 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   26.749    0.001   75.727    0.004 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.106    0.000   46.269    0.005 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.574    0.000   16.604    0.002 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.124    0.000    2.617    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.342    0.000    0.969    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.749    0.749 GerrymanderingMCMC.py:1(<module>)
        1    0.001    0.001    0.055    0.055 GerrymanderingMCMC.py:21(__init__)
        1    0.010    0.010    0.055    0.055 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.012    0.012 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
