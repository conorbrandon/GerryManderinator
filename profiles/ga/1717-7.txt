         5185781217 function calls (5185659178 primitive calls) in 1982.294 seconds
        1   21.774   21.774 1981.178 1981.178 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.270    0.001 1959.339    0.194 GerrymanderingMCMC.py:235(recombination_of_districts)
   290048    2.090    0.000  994.161    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1160192    1.438    0.000  700.560    0.001 GerrymanderingMCMC.py:190(__district_size)
245019630  137.978    0.000  573.768    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   12.542    0.001  363.008    0.036 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.068    0.000   77.636    0.004 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.072    0.000   75.769    0.004 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   27.202    0.001   75.616    0.004 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.107    0.000   46.195    0.005 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.554    0.000   16.668    0.002 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.124    0.000    2.742    0.000 GerrymanderingMCMC.py:157(__random_district_label)
        1    0.000    0.000    1.004    1.004 GerrymanderingMCMC.py:1(<module>)
    10100    0.344    0.000    0.990    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.001    0.001    0.107    0.107 GerrymanderingMCMC.py:21(__init__)
        1    0.010    0.010    0.107    0.107 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.025    0.025 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
