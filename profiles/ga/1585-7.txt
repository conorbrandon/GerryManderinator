         5004630431 function calls (5004508392 primitive calls) in 1914.397 seconds
        1   21.187   21.187 1913.556 1913.556 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    4.979    0.000 1892.244    0.187 GerrymanderingMCMC.py:235(recombination_of_districts)
   271689    2.076    0.000  924.683    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1086756    1.293    0.000  653.513    0.001 GerrymanderingMCMC.py:190(__district_size)
228536346  129.880    0.000  535.997    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   12.546    0.001  365.236    0.036 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.049    0.000   78.582    0.004 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.069    0.000   76.763    0.004 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   27.218    0.001   76.619    0.004 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.101    0.000   46.924    0.005 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.533    0.000   16.627    0.002 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.109    0.000    2.579    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.339    0.000    0.965    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.782    0.782 GerrymanderingMCMC.py:1(<module>)
        1    0.001    0.001    0.055    0.055 GerrymanderingMCMC.py:21(__init__)
        1    0.010    0.010    0.055    0.055 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.012    0.012 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
