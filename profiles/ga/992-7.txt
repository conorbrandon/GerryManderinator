         5179133910 function calls (5179011871 primitive calls) in 1979.844 seconds
        1   21.585   21.585 1979.001 1979.001 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.292    0.001 1957.339    0.194 GerrymanderingMCMC.py:235(recombination_of_districts)
   288059    2.055    0.000  985.772    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1152236    1.410    0.000  695.182    0.001 GerrymanderingMCMC.py:190(__district_size)
243575736  138.390    0.000  567.863    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   12.516    0.001  364.132    0.036 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.050    0.000   77.886    0.004 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.069    0.000   76.070    0.004 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   27.273    0.001   75.928    0.004 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.103    0.000   46.487    0.005 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.592    0.000   16.742    0.002 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.123    0.000    2.652    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.343    0.000    1.001    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.790    0.790 GerrymanderingMCMC.py:1(<module>)
        1    0.001    0.001    0.055    0.055 GerrymanderingMCMC.py:21(__init__)
        1    0.010    0.010    0.055    0.055 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.012    0.012 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
