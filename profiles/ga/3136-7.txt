         5483794605 function calls (5483672566 primitive calls) in 2091.799 seconds
        1   21.210   21.210 2091.076 2091.076 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.732    0.001 2069.805    0.205 GerrymanderingMCMC.py:235(recombination_of_districts)
   324774    2.331    0.000 1103.366    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1299096    1.581    0.000  780.575    0.001 GerrymanderingMCMC.py:190(__district_size)
270253124  151.320    0.000  637.890    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   12.318    0.001  363.502    0.036 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.060    0.000   78.515    0.004 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.068    0.000   76.727    0.004 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   26.775    0.001   76.585    0.004 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.101    0.000   46.721    0.005 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.520    0.000   16.668    0.002 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.109    0.000    2.580    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.339    0.000    1.004    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.664    0.664 GerrymanderingMCMC.py:1(<module>)
        1    0.001    0.001    0.055    0.055 GerrymanderingMCMC.py:21(__init__)
        1    0.010    0.010    0.054    0.054 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.012    0.012 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
