         5750071424 function calls (5749949385 primitive calls) in 2193.741 seconds
        1   21.338   21.338 2192.889 2192.889 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    6.241    0.001 2171.493    0.215 GerrymanderingMCMC.py:235(recombination_of_districts)
   337909    2.531    0.000 1199.598    0.004 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1351636    1.767    0.000  840.409    0.001 GerrymanderingMCMC.py:190(__district_size)
292360158  172.269    0.000  686.863    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   12.659    0.001  370.752    0.037 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.051    0.000   78.059    0.004 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.069    0.000   76.171    0.004 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   27.414    0.001   76.020    0.004 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.120    0.000   46.659    0.005 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.675    0.000   17.213    0.002 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.116    0.000    2.690    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.374    0.000    1.028    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.792    0.792 GerrymanderingMCMC.py:1(<module>)
        1    0.001    0.001    0.056    0.056 GerrymanderingMCMC.py:21(__init__)
        1    0.010    0.010    0.055    0.055 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.012    0.012 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
