         5665895122 function calls (5665773083 primitive calls) in 2209.413 seconds
        1   22.396   22.396 2208.605 2208.605 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    6.141    0.001 2186.133    0.216 GerrymanderingMCMC.py:235(recombination_of_districts)
   334708    2.533    0.000 1211.563    0.004 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1338832    1.635    0.000  869.694    0.001 GerrymanderingMCMC.py:190(__district_size)
285573820  175.288    0.000  721.310    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   12.648    0.001  366.271    0.036 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.055    0.000   78.340    0.004 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.075    0.000   76.424    0.004 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   27.617    0.001   76.258    0.004 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.106    0.000   46.727    0.005 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.675    0.000   16.986    0.002 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.124    0.000    2.669    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.373    0.000    1.019    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.749    0.749 GerrymanderingMCMC.py:1(<module>)
        1    0.001    0.001    0.055    0.055 GerrymanderingMCMC.py:21(__init__)
        1    0.010    0.010    0.054    0.054 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.012    0.012 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
