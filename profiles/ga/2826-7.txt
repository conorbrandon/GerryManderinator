         5623553983 function calls (5623431944 primitive calls) in 2137.805 seconds
        1   21.872   21.872 2136.946 2136.946 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.998    0.001 2115.017    0.209 GerrymanderingMCMC.py:235(recombination_of_districts)
   329810    2.488    0.000 1142.027    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1319240    1.601    0.000  806.046    0.001 GerrymanderingMCMC.py:190(__district_size)
281562510  160.220    0.000  659.671    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   12.482    0.001  368.214    0.036 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.050    0.000   77.663    0.004 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.072    0.000   75.856    0.004 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   27.362    0.001   75.707    0.004 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.104    0.000   46.373    0.005 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.728    0.000   16.963    0.002 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.127    0.000    2.742    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.348    0.000    0.998    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.799    0.799 GerrymanderingMCMC.py:1(<module>)
        1    0.001    0.001    0.056    0.056 GerrymanderingMCMC.py:21(__init__)
        1    0.010    0.010    0.055    0.055 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.012    0.012 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
