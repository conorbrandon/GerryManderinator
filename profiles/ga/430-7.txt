         5306757586 function calls (5306635547 primitive calls) in 2016.636 seconds
        1   21.591   21.591 2015.740 2015.740 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.439    0.001 1994.082    0.197 GerrymanderingMCMC.py:235(recombination_of_districts)
   306289    2.247    0.000 1030.387    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1225156    1.528    0.000  728.015    0.001 GerrymanderingMCMC.py:190(__district_size)
254422616  146.690    0.000  594.366    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   12.657    0.001  365.419    0.036 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.051    0.000   77.078    0.004 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.069    0.000   75.268    0.004 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   27.000    0.001   75.119    0.004 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.107    0.000   45.842    0.005 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.554    0.000   16.680    0.002 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.116    0.000    2.643    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.353    0.000    0.976    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.836    0.836 GerrymanderingMCMC.py:1(<module>)
        1    0.001    0.001    0.055    0.055 GerrymanderingMCMC.py:21(__init__)
        1    0.010    0.010    0.054    0.054 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.012    0.012 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
