         5659683888 function calls (5659561849 primitive calls) in 2146.780 seconds
        1   21.623   21.623 2146.025 2146.025 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.948    0.001 2124.343    0.210 GerrymanderingMCMC.py:235(recombination_of_districts)
   329685    2.464    0.000 1151.650    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1318740    1.604    0.000  812.478    0.001 GerrymanderingMCMC.py:190(__district_size)
284593900  162.161    0.000  666.154    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10101   12.751    0.001  369.066    0.037 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.057    0.000   77.490    0.004 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.071    0.000   75.625    0.004 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   27.164    0.001   75.475    0.004 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.113    0.000   46.183    0.005 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.659    0.000   16.924    0.002 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.120    0.000    2.717    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.346    0.000    0.968    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.696    0.696 GerrymanderingMCMC.py:1(<module>)
        1    0.001    0.001    0.055    0.055 GerrymanderingMCMC.py:21(__init__)
        1    0.010    0.010    0.054    0.054 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.012    0.012 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
