         5312918750 function calls (5312796711 primitive calls) in 2047.022 seconds
        1   23.260   23.260 2046.254 2046.254 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.684    0.001 2022.931    0.200 GerrymanderingMCMC.py:235(recombination_of_districts)
   305549    2.300    0.000 1042.037    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1222196    1.577    0.000  733.749    0.001 GerrymanderingMCMC.py:190(__district_size)
255576088  147.985    0.000  599.995    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   13.126    0.001  367.453    0.036 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.050    0.000   79.059    0.004 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.073    0.000   77.121    0.004 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   27.659    0.001   76.970    0.004 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.106    0.000   47.055    0.005 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.658    0.000   16.902    0.002 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.127    0.000    2.710    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.347    0.000    0.999    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.725    0.725 GerrymanderingMCMC.py:1(<module>)
        1    0.001    0.001    0.055    0.055 GerrymanderingMCMC.py:21(__init__)
        1    0.010    0.010    0.054    0.054 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.012    0.012 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
