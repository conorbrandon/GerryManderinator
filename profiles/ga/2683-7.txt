         5272735386 function calls (5272613347 primitive calls) in 2028.814 seconds
        1   22.103   22.103 2028.010 2028.010 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.366    0.001 2005.852    0.199 GerrymanderingMCMC.py:235(recombination_of_districts)
   301368    2.183    0.000 1033.137    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1205472    1.502    0.000  727.378    0.001 GerrymanderingMCMC.py:190(__district_size)
252586522  146.938    0.000  595.506    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   12.590    0.001  364.522    0.036 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.051    0.000   79.727    0.004 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.074    0.000   77.869    0.004 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   28.264    0.001   77.719    0.004 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.105    0.000   47.312    0.005 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.663    0.000   16.977    0.002 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.113    0.000    2.587    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.365    0.000    1.011    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.744    0.744 GerrymanderingMCMC.py:1(<module>)
        1    0.001    0.001    0.056    0.056 GerrymanderingMCMC.py:21(__init__)
        1    0.010    0.010    0.055    0.055 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.012    0.012 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
