         5522794435 function calls (5522672396 primitive calls) in 2117.634 seconds
        1   22.646   22.646 2116.542 2116.542 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.800    0.001 2093.832    0.207 GerrymanderingMCMC.py:235(recombination_of_districts)
   317717    2.327    0.000 1108.188    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1270868    1.561    0.000  781.895    0.001 GerrymanderingMCMC.py:190(__district_size)
273312112  154.502    0.000  640.989    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   13.065    0.001  368.581    0.036 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.051    0.000   80.036    0.004 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.073    0.000   78.135    0.004 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   27.905    0.001   77.986    0.004 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.108    0.000   47.523    0.005 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.676    0.000   16.950    0.002 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.118    0.000    2.662    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.372    0.000    1.041    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    1.030    1.030 GerrymanderingMCMC.py:1(<module>)
        1    0.001    0.001    0.055    0.055 GerrymanderingMCMC.py:21(__init__)
        1    0.010    0.010    0.055    0.055 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.012    0.012 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
