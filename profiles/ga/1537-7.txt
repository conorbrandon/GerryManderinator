         5744037164 function calls (5743915125 primitive calls) in 2173.243 seconds
        1   21.074   21.074 2172.444 2172.444 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    6.345    0.001 2151.276    0.213 GerrymanderingMCMC.py:235(recombination_of_districts)
   342036    2.585    0.000 1187.694    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1368144    1.672    0.000  836.616    0.001 GerrymanderingMCMC.py:190(__district_size)
292096348  169.494    0.000  686.464    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   12.467    0.001  366.181    0.036 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.049    0.000   78.098    0.004 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.084    0.000   76.289    0.004 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   27.436    0.001   76.132    0.004 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.102    0.000   46.540    0.005 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.644    0.000   16.783    0.002 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.112    0.000    2.580    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.376    0.000    1.017    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.738    0.738 GerrymanderingMCMC.py:1(<module>)
        1    0.001    0.001    0.055    0.055 GerrymanderingMCMC.py:21(__init__)
        1    0.010    0.010    0.055    0.055 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.012    0.012 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
