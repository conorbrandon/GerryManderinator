         5255714665 function calls (5255592626 primitive calls) in 2022.186 seconds
        1   22.350   22.350 2021.355 2021.355 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.338    0.001 1998.942    0.198 GerrymanderingMCMC.py:235(recombination_of_districts)
   298053    2.176    0.000 1023.492    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1192212    1.494    0.000  722.181    0.001 GerrymanderingMCMC.py:190(__district_size)
250139736  145.731    0.000  590.052    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   13.022    0.001  367.938    0.036 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.052    0.000   79.182    0.004 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.072    0.000   77.305    0.004 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   27.717    0.001   77.149    0.004 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.108    0.000   47.077    0.005 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.546    0.000   16.783    0.002 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.121    0.000    2.748    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.355    0.000    1.008    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.771    0.771 GerrymanderingMCMC.py:1(<module>)
        1    0.001    0.001    0.055    0.055 GerrymanderingMCMC.py:21(__init__)
        1    0.010    0.010    0.055    0.055 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.012    0.012 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
