         5333155684 function calls (5333033645 primitive calls) in 2044.831 seconds
        1   22.665   22.665 2044.072 2044.072 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.492    0.001 2021.350    0.200 GerrymanderingMCMC.py:235(recombination_of_districts)
   308516    2.280    0.000 1045.447    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1234064    1.499    0.000  738.835    0.001 GerrymanderingMCMC.py:190(__district_size)
256745252  150.184    0.000  604.646    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   12.812    0.001  368.837    0.037 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.052    0.000   78.697    0.004 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.072    0.000   76.811    0.004 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   27.939    0.001   76.660    0.004 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.114    0.000   46.955    0.005 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.610    0.000   16.871    0.002 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.119    0.000    2.741    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.375    0.000    1.016    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.700    0.700 GerrymanderingMCMC.py:1(<module>)
        1    0.001    0.001    0.055    0.055 GerrymanderingMCMC.py:21(__init__)
        1    0.010    0.010    0.054    0.054 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.012    0.012 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
