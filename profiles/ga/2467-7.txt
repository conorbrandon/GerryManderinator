         5304842550 function calls (5304720511 primitive calls) in 2049.809 seconds
        1   22.415   22.415 2049.009 2049.009 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.549    0.001 2026.501    0.201 GerrymanderingMCMC.py:235(recombination_of_districts)
   305896    2.289    0.000 1045.590    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1223584    1.555    0.000  738.793    0.001 GerrymanderingMCMC.py:190(__district_size)
254642788  149.351    0.000  604.338    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   13.096    0.001  368.485    0.036 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.054    0.000   78.997    0.004 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.101    0.000   77.087    0.004 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   27.714    0.001   76.904    0.004 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.124    0.000   46.881    0.005 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.666    0.000   16.833    0.002 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.121    0.000    2.765    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.348    0.000    0.973    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.740    0.740 GerrymanderingMCMC.py:1(<module>)
        1    0.001    0.001    0.055    0.055 GerrymanderingMCMC.py:21(__init__)
        1    0.010    0.010    0.054    0.054 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.012    0.012 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
