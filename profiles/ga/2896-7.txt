         5360233324 function calls (5360111285 primitive calls) in 2042.395 seconds
        1   21.260   21.260 2041.640 2041.640 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.519    0.001 2020.322    0.200 GerrymanderingMCMC.py:235(recombination_of_districts)
   306636    2.254    0.000 1051.764    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1226544    1.524    0.000  741.767    0.001 GerrymanderingMCMC.py:190(__district_size)
259557916  147.521    0.000  604.350    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   12.392    0.001  364.125    0.036 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.050    0.000   77.408    0.004 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.073    0.000   75.573    0.004 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   27.174    0.001   75.427    0.004 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.126    0.000   46.097    0.005 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.604    0.000   16.807    0.002 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.111    0.000    2.591    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.351    0.000    0.975    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.688    0.688 GerrymanderingMCMC.py:1(<module>)
        1    0.001    0.001    0.055    0.055 GerrymanderingMCMC.py:21(__init__)
        1    0.010    0.010    0.054    0.054 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.012    0.012 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
