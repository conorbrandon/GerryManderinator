         5240183565 function calls (5240061526 primitive calls) in 1980.823 seconds
        1   21.234   21.234 1980.117 1980.117 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.431    0.001 1958.828    0.194 GerrymanderingMCMC.py:235(recombination_of_districts)
   303425    2.212    0.000 1001.919    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1213700    1.522    0.000  705.924    0.001 GerrymanderingMCMC.py:190(__district_size)
249696482  141.981    0.000  576.978    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   12.523    0.001  361.761    0.036 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.075    0.000   77.195    0.004 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.069    0.000   75.389    0.004 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   27.005    0.001   75.247    0.004 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.111    0.000   45.848    0.005 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.580    0.000   16.523    0.002 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.122    0.000    2.579    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.347    0.000    0.988    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.647    0.647 GerrymanderingMCMC.py:1(<module>)
        1    0.001    0.001    0.055    0.055 GerrymanderingMCMC.py:21(__init__)
        1    0.010    0.010    0.055    0.055 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.012    0.012 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
