         5851555735 function calls (5851433696 primitive calls) in 2228.053 seconds
        1   21.780   21.780 2226.758 2226.758 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    6.331    0.001 2204.902    0.218 GerrymanderingMCMC.py:235(recombination_of_districts)
   347114    2.548    0.000 1228.565    0.004 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1388456    1.708    0.000  863.809    0.001 GerrymanderingMCMC.py:190(__district_size)
301940290  171.607    0.000  706.076    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   12.924    0.001  370.164    0.037 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.049    0.000   78.426    0.004 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.070    0.000   76.596    0.004 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   27.571    0.001   76.447    0.004 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.106    0.000   46.575    0.005 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.622    0.000   16.984    0.002 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.118    0.000    2.706    0.000 GerrymanderingMCMC.py:157(__random_district_label)
        1    0.000    0.000    1.200    1.200 GerrymanderingMCMC.py:1(<module>)
    10100    0.357    0.000    0.989    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.001    0.001    0.076    0.076 GerrymanderingMCMC.py:21(__init__)
        1    0.010    0.010    0.075    0.075 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.012    0.012 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
