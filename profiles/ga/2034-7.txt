         5646488318 function calls (5646366279 primitive calls) in 2158.259 seconds
        1   22.722   22.722 2157.364 2157.364 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    6.023    0.001 2134.568    0.211 GerrymanderingMCMC.py:235(recombination_of_districts)
   331169    2.448    0.000 1150.758    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1324676    1.633    0.000  812.709    0.001 GerrymanderingMCMC.py:190(__district_size)
283709076  162.657    0.000  666.672    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   12.978    0.001  370.003    0.037 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.051    0.000   80.581    0.004 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.071    0.000   78.696    0.004 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   28.673    0.001   78.532    0.004 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.107    0.000   47.842    0.005 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.637    0.000   16.874    0.002 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.117    0.000    2.755    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.353    0.000    0.987    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.835    0.835 GerrymanderingMCMC.py:1(<module>)
        1    0.001    0.001    0.055    0.055 GerrymanderingMCMC.py:21(__init__)
        1    0.010    0.010    0.054    0.054 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.012    0.012 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
