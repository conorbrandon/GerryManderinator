         5443285572 function calls (5443163533 primitive calls) in 2132.134 seconds
        1   22.692   22.692 2131.340 2131.340 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.703    0.001 2108.560    0.209 GerrymanderingMCMC.py:235(recombination_of_districts)
   314836    2.420    0.000 1136.740    0.004 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1259344    1.588    0.000  813.685    0.001 GerrymanderingMCMC.py:190(__district_size)
267192958  156.339    0.000  673.929    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   12.747    0.001  368.505    0.036 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.051    0.000   78.616    0.004 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.072    0.000   76.741    0.004 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   27.680    0.001   76.595    0.004 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.105    0.000   46.653    0.005 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.657    0.000   16.840    0.002 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.114    0.000    2.680    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.346    0.000    0.993    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.734    0.734 GerrymanderingMCMC.py:1(<module>)
        1    0.001    0.001    0.055    0.055 GerrymanderingMCMC.py:21(__init__)
        1    0.010    0.010    0.054    0.054 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.012    0.012 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
