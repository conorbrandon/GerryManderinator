         5393440643 function calls (5393318604 primitive calls) in 2050.178 seconds
        1   21.320   21.320 2049.399 2049.399 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.736    0.001 2028.014    0.201 GerrymanderingMCMC.py:235(recombination_of_districts)
   312024    2.296    0.000 1061.492    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1248096    1.550    0.000  749.405    0.001 GerrymanderingMCMC.py:190(__district_size)
262299574  151.261    0.000  613.239    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   12.630    0.001  365.307    0.036 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.050    0.000   77.420    0.004 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.068    0.000   75.621    0.004 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   27.146    0.001   75.480    0.004 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.104    0.000   46.078    0.005 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.586    0.000   16.642    0.002 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.111    0.000    2.594    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.346    0.000    0.996    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.720    0.720 GerrymanderingMCMC.py:1(<module>)
        1    0.001    0.001    0.055    0.055 GerrymanderingMCMC.py:21(__init__)
        1    0.010    0.010    0.054    0.054 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.012    0.012 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
