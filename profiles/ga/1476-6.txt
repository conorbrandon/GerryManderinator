         5901140182 function calls (5901018143 primitive calls) in 3413.301 seconds
        1   23.195   23.195 3412.167 3412.167 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    9.785    0.001 3388.885    0.336 GerrymanderingMCMC.py:235(recombination_of_districts)
   349096    3.979    0.000 1938.874    0.006 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1396384    2.772    0.000 1371.605    0.001 GerrymanderingMCMC.py:190(__district_size)
305486378  274.762    0.000 1120.328    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   18.210    0.002  563.688    0.056 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.062    0.000  115.104    0.006 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.095    0.000  112.522    0.006 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   37.940    0.002  112.333    0.006 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.145    0.000   69.438    0.007 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    3.849    0.000   25.979    0.003 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.140    0.000    3.786    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.524    0.000    1.568    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    1.041    1.041 GerrymanderingMCMC.py:1(<module>)
        1    0.001    0.001    0.087    0.087 GerrymanderingMCMC.py:21(__init__)
        1    0.016    0.016    0.086    0.086 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.019    0.019 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
