         5471012803 function calls (5470890764 primitive calls) in 2076.222 seconds
        1   21.028   21.028 2075.469 2075.469 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.747    0.001 2054.245    0.203 GerrymanderingMCMC.py:235(recombination_of_districts)
   318116    2.271    0.000 1090.706    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1272464    1.585    0.000  766.955    0.001 GerrymanderingMCMC.py:190(__district_size)
268823674  155.013    0.000  629.469    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   12.690    0.001  363.694    0.036 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.053    0.000   77.723    0.004 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.066    0.000   75.902    0.004 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   27.067    0.001   75.764    0.004 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.102    0.000   46.342    0.005 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.568    0.000   16.808    0.002 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.118    0.000    2.629    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.349    0.000    0.977    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.702    0.702 GerrymanderingMCMC.py:1(<module>)
        1    0.001    0.001    0.055    0.055 GerrymanderingMCMC.py:21(__init__)
        1    0.010    0.010    0.054    0.054 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.012    0.012 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
