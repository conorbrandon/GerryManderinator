         5255115667 function calls (5254993628 primitive calls) in 2020.306 seconds
        1   22.515   22.515 2019.376 2019.376 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.501    0.001 1996.806    0.198 GerrymanderingMCMC.py:235(recombination_of_districts)
   301731    2.187    0.000 1022.152    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1206924    1.499    0.000  720.786    0.001 GerrymanderingMCMC.py:190(__district_size)
250500018  143.475    0.000  589.251    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   12.717    0.001  367.626    0.036 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.051    0.000   79.646    0.004 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.071    0.000   77.767    0.004 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   28.189    0.001   77.618    0.004 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.110    0.000   47.374    0.005 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.621    0.000   16.710    0.002 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.120    0.000    2.677    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.399    0.000    1.039    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.870    0.870 GerrymanderingMCMC.py:1(<module>)
        1    0.001    0.001    0.055    0.055 GerrymanderingMCMC.py:21(__init__)
        1    0.010    0.010    0.054    0.054 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.012    0.012 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
