         5390402125 function calls (5390280086 primitive calls) in 2047.737 seconds
        1   21.117   21.117 2046.943 2046.943 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.558    0.001 2025.755    0.201 GerrymanderingMCMC.py:235(recombination_of_districts)
   305086    2.213    0.000 1064.699    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1220344    1.523    0.000  753.124    0.001 GerrymanderingMCMC.py:190(__district_size)
262378392  152.030    0.000  617.783    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   12.428    0.001  363.589    0.036 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.049    0.000   77.622    0.004 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.066    0.000   75.851    0.004 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   27.185    0.001   75.711    0.004 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.103    0.000   46.144    0.005 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.550    0.000   16.593    0.002 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.106    0.000    2.580    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.357    0.000    1.000    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.736    0.736 GerrymanderingMCMC.py:1(<module>)
        1    0.001    0.001    0.055    0.055 GerrymanderingMCMC.py:21(__init__)
        1    0.010    0.010    0.054    0.054 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.012    0.012 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
