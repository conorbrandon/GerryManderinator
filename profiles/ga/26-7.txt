         5436161539 function calls (5436039500 primitive calls) in 2023.194 seconds
        1   20.558   20.558 2021.768 2021.768 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.564    0.001 2001.097    0.198 GerrymanderingMCMC.py:235(recombination_of_districts)
   313118    2.258    0.000 1060.410    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1252472    1.511    0.000  749.309    0.001 GerrymanderingMCMC.py:190(__district_size)
265522836  149.888    0.000  613.868    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   12.574    0.001  359.374    0.036 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.050    0.000   75.345    0.004 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.069    0.000   73.567    0.004 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   26.485    0.001   73.427    0.004 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.102    0.000   44.972    0.004 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.566    0.000   16.507    0.002 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.106    0.000    2.561    0.000 GerrymanderingMCMC.py:157(__random_district_label)
        1    0.000    0.000    1.366    1.366 GerrymanderingMCMC.py:1(<module>)
    10100    0.339    0.000    0.957    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.001    0.001    0.053    0.053 GerrymanderingMCMC.py:21(__init__)
        1    0.010    0.010    0.053    0.053 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.012    0.012 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
