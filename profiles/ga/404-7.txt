         5383819264 function calls (5383697225 primitive calls) in 2057.111 seconds
        1   22.409   22.409 2056.373 2056.373 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.719    0.001 2033.903    0.201 GerrymanderingMCMC.py:235(recombination_of_districts)
   309172    2.315    0.000 1061.255    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1236688    1.534    0.000  748.747    0.001 GerrymanderingMCMC.py:190(__district_size)
261416464  149.855    0.000  612.384    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   12.798    0.001  365.507    0.036 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.051    0.000   78.296    0.004 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.070    0.000   76.483    0.004 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   27.546    0.001   76.336    0.004 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.104    0.000   46.500    0.005 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.660    0.000   16.853    0.002 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.119    0.000    2.663    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.364    0.000    1.000    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.678    0.678 GerrymanderingMCMC.py:1(<module>)
        1    0.001    0.001    0.055    0.055 GerrymanderingMCMC.py:21(__init__)
        1    0.010    0.010    0.054    0.054 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.012    0.012 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
