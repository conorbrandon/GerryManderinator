         5305131717 function calls (5305009678 primitive calls) in 2017.092 seconds
        1   21.304   21.304 2016.292 2016.292 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.514    0.001 1994.933    0.198 GerrymanderingMCMC.py:235(recombination_of_districts)
   306600    2.259    0.000 1025.763    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1226400    1.517    0.000  723.150    0.001 GerrymanderingMCMC.py:190(__district_size)
254318230  143.281    0.000  591.685    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   12.426    0.001  366.924    0.036 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.049    0.000   77.371    0.004 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.065    0.000   75.531    0.004 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   26.908    0.001   75.394    0.004 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.105    0.000   46.046    0.005 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.606    0.000   16.797    0.002 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.107    0.000    2.608    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.370    0.000    1.006    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.740    0.740 GerrymanderingMCMC.py:1(<module>)
        1    0.001    0.001    0.055    0.055 GerrymanderingMCMC.py:21(__init__)
        1    0.010    0.010    0.055    0.055 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.012    0.012 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
