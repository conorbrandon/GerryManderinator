         5101632787 function calls (5101510748 primitive calls) in 1974.565 seconds
        1   23.145   23.145 1973.831 1973.831 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.211    0.001 1950.629    0.193 GerrymanderingMCMC.py:235(recombination_of_districts)
   284470    2.147    0.000  966.860    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1137880    1.424    0.000  681.700    0.001 GerrymanderingMCMC.py:190(__district_size)
237218042  137.227    0.000  558.277    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   12.880    0.001  368.156    0.036 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.060    0.000   80.143    0.004 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.075    0.000   78.216    0.004 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   28.472    0.001   78.029    0.004 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.109    0.000   47.636    0.005 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.634    0.000   16.873    0.002 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.123    0.000    2.705    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.360    0.000    1.004    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.675    0.675 GerrymanderingMCMC.py:1(<module>)
        1    0.001    0.001    0.055    0.055 GerrymanderingMCMC.py:21(__init__)
        1    0.010    0.010    0.054    0.054 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.012    0.012 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
