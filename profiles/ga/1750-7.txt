         5343121174 function calls (5342999135 primitive calls) in 2057.051 seconds
        1   22.992   22.992 2056.211 2056.211 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.558    0.001 2033.155    0.201 GerrymanderingMCMC.py:235(recombination_of_districts)
   304657    2.240    0.000 1054.832    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1218628    1.514    0.000  745.778    0.001 GerrymanderingMCMC.py:190(__district_size)
258101066  150.356    0.000  611.831    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   12.778    0.001  367.352    0.036 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.051    0.000   79.526    0.004 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.072    0.000   77.663    0.004 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   28.379    0.001   77.504    0.004 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.113    0.000   47.289    0.005 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.697    0.000   16.901    0.002 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.116    0.000    2.681    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.359    0.000    1.015    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.778    0.778 GerrymanderingMCMC.py:1(<module>)
        1    0.001    0.001    0.056    0.056 GerrymanderingMCMC.py:21(__init__)
        1    0.010    0.010    0.056    0.056 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.013    0.013 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
