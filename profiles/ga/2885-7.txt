         5476442942 function calls (5476320903 primitive calls) in 2099.044 seconds
        1   21.835   21.835 2098.218 2098.218 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.811    0.001 2076.327    0.206 GerrymanderingMCMC.py:235(recombination_of_districts)
   322206    2.452    0.000 1106.340    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1288824    1.578    0.000  781.370    0.001 GerrymanderingMCMC.py:190(__district_size)
269565940  158.218    0.000  638.972    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   12.758    0.001  365.683    0.036 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.053    0.000   79.523    0.004 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.087    0.000   77.673    0.004 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   28.058    0.001   77.505    0.004 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.134    0.000   47.191    0.005 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.702    0.000   17.030    0.002 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.132    0.000    2.747    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.353    0.000    1.007    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.766    0.766 GerrymanderingMCMC.py:1(<module>)
        1    0.001    0.001    0.055    0.055 GerrymanderingMCMC.py:21(__init__)
        1    0.010    0.010    0.055    0.055 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.012    0.012 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
