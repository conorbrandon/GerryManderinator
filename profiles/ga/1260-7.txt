         5344181392 function calls (5344059353 primitive calls) in 2037.853 seconds
        1   22.130   22.130 2037.046 2037.046 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.594    0.001 2014.794    0.199 GerrymanderingMCMC.py:235(recombination_of_districts)
   304089    2.217    0.000 1044.878    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1216356    1.457    0.000  736.996    0.001 GerrymanderingMCMC.py:190(__district_size)
258118854  147.000    0.000  604.118    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   12.606    0.001  363.942    0.036 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.051    0.000   77.618    0.004 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.069    0.000   75.787    0.004 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   27.194    0.001   75.642    0.004 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.105    0.000   46.191    0.005 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.567    0.000   16.752    0.002 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.114    0.000    2.663    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.344    0.000    1.015    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.745    0.745 GerrymanderingMCMC.py:1(<module>)
        1    0.001    0.001    0.056    0.056 GerrymanderingMCMC.py:21(__init__)
        1    0.010    0.010    0.055    0.055 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.012    0.012 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
