         5593605910 function calls (5593483871 primitive calls) in 2168.925 seconds
        1   21.916   21.916 2168.064 2168.064 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.992    0.001 2146.088    0.212 GerrymanderingMCMC.py:235(recombination_of_districts)
   324942    2.423    0.000 1165.592    0.004 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1299768    1.653    0.000  828.559    0.001 GerrymanderingMCMC.py:190(__district_size)
279263014  165.300    0.000  677.403    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   12.978    0.001  374.501    0.037 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.052    0.000   79.085    0.004 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.069    0.000   77.214    0.004 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   27.862    0.001   77.066    0.004 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.104    0.000   46.996    0.005 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.630    0.000   16.898    0.002 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.114    0.000    2.604    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.404    0.000    1.037    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.801    0.801 GerrymanderingMCMC.py:1(<module>)
        1    0.001    0.001    0.055    0.055 GerrymanderingMCMC.py:21(__init__)
        1    0.010    0.010    0.055    0.055 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.012    0.012 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
