         5520561383 function calls (5520439344 primitive calls) in 2100.732 seconds
        1   21.362   21.362 2099.937 2099.937 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.864    0.001 2078.415    0.206 GerrymanderingMCMC.py:235(recombination_of_districts)
   322065    2.378    0.000 1114.480    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1288260    1.632    0.000  787.514    0.001 GerrymanderingMCMC.py:190(__district_size)
272990164  158.277    0.000  642.623    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   12.561    0.001  366.437    0.036 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.049    0.000   77.612    0.004 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.083    0.000   75.798    0.004 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   27.202    0.001   75.635    0.004 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.103    0.000   46.422    0.005 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.614    0.000   16.896    0.002 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.118    0.000    2.671    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.373    0.000    1.046    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.735    0.735 GerrymanderingMCMC.py:1(<module>)
        1    0.001    0.001    0.055    0.055 GerrymanderingMCMC.py:21(__init__)
        1    0.010    0.010    0.054    0.054 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.012    0.012 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
