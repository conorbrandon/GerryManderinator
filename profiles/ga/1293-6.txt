         5168906280 function calls (5168784241 primitive calls) in 3143.256 seconds
        1   22.774   22.774 3142.122 3142.122 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    8.551    0.001 3119.221    0.309 GerrymanderingMCMC.py:235(recombination_of_districts)
   290734    3.351    0.000 1600.404    0.006 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1162936    2.327    0.000 1130.410    0.001 GerrymanderingMCMC.py:190(__district_size)
243649830  226.860    0.000  925.391    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   19.162    0.002  581.650    0.058 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.061    0.000  121.240    0.006 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.086    0.000  118.690    0.006 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   40.050    0.002  118.505    0.006 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.151    0.000   73.135    0.007 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    3.955    0.000   26.792    0.003 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.142    0.000    3.896    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.545    0.000    1.581    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    1.043    1.043 GerrymanderingMCMC.py:1(<module>)
        1    0.001    0.001    0.088    0.088 GerrymanderingMCMC.py:21(__init__)
        1    0.016    0.016    0.087    0.087 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.019    0.019 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
