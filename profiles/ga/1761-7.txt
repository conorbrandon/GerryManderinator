         5247469325 function calls (5247347286 primitive calls) in 2033.466 seconds
        1   22.929   22.929 2032.714 2032.714 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.429    0.001 2009.724    0.199 GerrymanderingMCMC.py:235(recombination_of_districts)
   295257    2.223    0.000 1020.485    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1181028    1.498    0.000  720.679    0.001 GerrymanderingMCMC.py:190(__district_size)
249323632  144.708    0.000  586.698    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   12.739    0.001  371.505    0.037 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.051    0.000   79.042    0.004 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.083    0.000   77.184    0.004 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   27.989    0.001   77.009    0.004 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.124    0.000   46.949    0.005 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.672    0.000   17.015    0.002 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.118    0.000    2.835    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.351    0.000    1.019    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.693    0.693 GerrymanderingMCMC.py:1(<module>)
        1    0.001    0.001    0.055    0.055 GerrymanderingMCMC.py:21(__init__)
        1    0.010    0.010    0.054    0.054 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.012    0.012 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
