         5561310347 function calls (5561188308 primitive calls) in 2117.217 seconds
        1   21.488   21.488 2116.475 2116.475 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.887    0.001 2094.920    0.207 GerrymanderingMCMC.py:235(recombination_of_districts)
   323224    2.392    0.000 1123.952    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1292896    1.566    0.000  794.149    0.001 GerrymanderingMCMC.py:190(__district_size)
276289398  160.558    0.000  651.427    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   13.036    0.001  367.329    0.036 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.050    0.000   78.600    0.004 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.068    0.000   76.753    0.004 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   27.657    0.001   76.612    0.004 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.105    0.000   46.817    0.005 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.650    0.000   16.774    0.002 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.111    0.000    2.598    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.364    0.000    1.019    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.673    0.673 GerrymanderingMCMC.py:1(<module>)
        1    0.001    0.001    0.055    0.055 GerrymanderingMCMC.py:21(__init__)
        1    0.010    0.010    0.054    0.054 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.012    0.012 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
