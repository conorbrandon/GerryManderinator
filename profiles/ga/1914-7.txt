         5187637845 function calls (5187515806 primitive calls) in 2009.696 seconds
        1   23.873   23.873 2008.953 2008.953 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.332    0.001 1985.018    0.197 GerrymanderingMCMC.py:235(recombination_of_districts)
   293794    2.130    0.000  997.027    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1175176    1.502    0.000  704.957    0.001 GerrymanderingMCMC.py:190(__district_size)
244527486  140.365    0.000  576.009    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   12.916    0.001  366.862    0.036 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.053    0.000   79.348    0.004 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.074    0.000   77.452    0.004 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   28.137    0.001   77.295    0.004 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.109    0.000   47.164    0.005 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.673    0.000   17.087    0.002 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.120    0.000    2.674    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.359    0.000    1.010    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.683    0.683 GerrymanderingMCMC.py:1(<module>)
        1    0.001    0.001    0.055    0.055 GerrymanderingMCMC.py:21(__init__)
        1    0.010    0.010    0.054    0.054 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.012    0.012 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
