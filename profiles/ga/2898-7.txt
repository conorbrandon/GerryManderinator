         5382611093 function calls (5382489054 primitive calls) in 2029.386 seconds
        1   20.798   20.798 2028.605 2028.605 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.548    0.001 2007.749    0.199 GerrymanderingMCMC.py:235(recombination_of_districts)
   309818    2.214    0.000 1051.919    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1239272    1.487    0.000  741.575    0.001 GerrymanderingMCMC.py:190(__district_size)
261521928  148.736    0.000  604.670    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   12.417    0.001  361.848    0.036 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.049    0.000   76.564    0.004 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.070    0.000   74.754    0.004 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   26.638    0.001   74.597    0.004 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.103    0.000   45.685    0.005 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.575    0.000   16.559    0.002 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.108    0.000    2.594    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.362    0.000    1.003    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.722    0.722 GerrymanderingMCMC.py:1(<module>)
        1    0.001    0.001    0.054    0.054 GerrymanderingMCMC.py:21(__init__)
        1    0.010    0.010    0.054    0.054 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.012    0.012 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
