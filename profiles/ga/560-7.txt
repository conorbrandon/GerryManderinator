         5505428235 function calls (5505306196 primitive calls) in 2100.327 seconds
        1   22.557   22.557 2099.535 2099.535 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.902    0.001 2076.919    0.206 GerrymanderingMCMC.py:235(recombination_of_districts)
   325841    2.372    0.000 1104.035    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1303364    1.665    0.000  777.535    0.001 GerrymanderingMCMC.py:190(__district_size)
271915722  155.147    0.000  636.437    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   12.780    0.001  364.951    0.036 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.050    0.000   78.470    0.004 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.070    0.000   76.644    0.004 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   27.758    0.001   76.484    0.004 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.108    0.000   46.743    0.005 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.585    0.000   16.579    0.002 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.113    0.000    2.655    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.374    0.000    1.016    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.734    0.734 GerrymanderingMCMC.py:1(<module>)
        1    0.001    0.001    0.054    0.054 GerrymanderingMCMC.py:21(__init__)
        1    0.010    0.010    0.054    0.054 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.012    0.012 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
