         5104472219 function calls (5104350180 primitive calls) in 1951.703 seconds
        1   22.348   22.348 1950.834 1950.834 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.178    0.001 1928.431    0.191 GerrymanderingMCMC.py:235(recombination_of_districts)
   284119    2.091    0.000  954.709    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1136476    1.401    0.000  670.990    0.001 GerrymanderingMCMC.py:190(__district_size)
237597914  132.654    0.000  548.403    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   12.688    0.001  365.601    0.036 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.052    0.000   78.099    0.004 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.071    0.000   76.242    0.004 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   27.238    0.001   76.091    0.004 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.106    0.000   46.503    0.005 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.602    0.000   16.808    0.002 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.133    0.000    2.791    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.341    0.000    0.973    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.798    0.798 GerrymanderingMCMC.py:1(<module>)
        1    0.001    0.001    0.067    0.067 GerrymanderingMCMC.py:21(__init__)
        1    0.011    0.011    0.066    0.066 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.012    0.012 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
