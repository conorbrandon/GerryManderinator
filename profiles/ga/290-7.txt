         5670650116 function calls (5670528077 primitive calls) in 2179.293 seconds
        1   21.744   21.744 2178.498 2178.498 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    6.137    0.001 2156.699    0.214 GerrymanderingMCMC.py:235(recombination_of_districts)
   328812    2.445    0.000 1182.865    0.004 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1315248    1.680    0.000  830.574    0.001 GerrymanderingMCMC.py:190(__district_size)
285545594  166.355    0.000  679.926    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   12.580    0.001  368.176    0.036 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.052    0.000   78.493    0.004 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.083    0.000   76.644    0.004 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   27.277    0.001   76.470    0.004 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.109    0.000   46.801    0.005 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.594    0.000   17.176    0.002 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.121    0.000    2.779    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.349    0.000    1.007    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.735    0.735 GerrymanderingMCMC.py:1(<module>)
        1    0.001    0.001    0.056    0.056 GerrymanderingMCMC.py:21(__init__)
        1    0.010    0.010    0.055    0.055 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.012    0.012 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
