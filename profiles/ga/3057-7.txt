         5616609407 function calls (5616487368 primitive calls) in 2141.566 seconds
        1   21.900   21.900 2140.687 2140.687 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    6.077    0.001 2118.730    0.210 GerrymanderingMCMC.py:235(recombination_of_districts)
   329971    2.481    0.000 1143.746    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1319884    1.640    0.000  808.953    0.001 GerrymanderingMCMC.py:190(__district_size)
281413644  161.821    0.000  662.582    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   12.636    0.001  367.691    0.036 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.051    0.000   78.798    0.004 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.072    0.000   76.933    0.004 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   27.583    0.001   76.780    0.004 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.107    0.000   46.670    0.005 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.657    0.000   16.850    0.002 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.117    0.000    2.736    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.364    0.000    0.995    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.779    0.779 GerrymanderingMCMC.py:1(<module>)
        1    0.001    0.001    0.095    0.095 GerrymanderingMCMC.py:21(__init__)
        1    0.024    0.024    0.094    0.094 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.012    0.012 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
