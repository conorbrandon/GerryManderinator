         5516879307 function calls (5516757268 primitive calls) in 2081.578 seconds
        1   21.121   21.121 2080.713 2080.713 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.832    0.001 2059.535    0.204 GerrymanderingMCMC.py:235(recombination_of_districts)
   327927    2.443    0.000 1103.639    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1311708    1.594    0.000  778.184    0.001 GerrymanderingMCMC.py:190(__district_size)
273174408  155.715    0.000  634.014    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   12.391    0.001  361.343    0.036 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.061    0.000   76.655    0.004 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.066    0.000   74.789    0.004 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   26.854    0.001   74.647    0.004 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.103    0.000   45.915    0.005 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.558    0.000   16.627    0.002 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.113    0.000    2.647    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.367    0.000    1.023    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.805    0.805 GerrymanderingMCMC.py:1(<module>)
        1    0.001    0.001    0.055    0.055 GerrymanderingMCMC.py:21(__init__)
        1    0.010    0.010    0.055    0.055 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.012    0.012 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
