         5589481904 function calls (5589359865 primitive calls) in 2112.674 seconds
        1   20.914   20.914 2111.880 2111.880 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.992    0.001 2090.824    0.207 GerrymanderingMCMC.py:235(recombination_of_districts)
   324755    2.422    0.000 1133.623    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1299020    1.590    0.000  799.528    0.001 GerrymanderingMCMC.py:190(__district_size)
279440602  162.596    0.000  654.556    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   12.400    0.001  363.961    0.036 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.048    0.000   77.546    0.004 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.069    0.000   75.699    0.004 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   27.230    0.001   75.558    0.004 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.103    0.000   46.190    0.005 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.564    0.000   16.651    0.002 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.111    0.000    2.579    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.349    0.000    1.008    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.732    0.732 GerrymanderingMCMC.py:1(<module>)
        1    0.001    0.001    0.056    0.056 GerrymanderingMCMC.py:21(__init__)
        1    0.010    0.010    0.056    0.056 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.012    0.012 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
