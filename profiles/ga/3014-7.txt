         5745272927 function calls (5745150888 primitive calls) in 2178.014 seconds
        1   23.206   23.206 2177.237 2177.237 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    6.147    0.001 2153.970    0.213 GerrymanderingMCMC.py:235(recombination_of_districts)
   340152    2.543    0.000 1179.180    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1360608    1.669    0.000  829.324    0.001 GerrymanderingMCMC.py:190(__district_size)
292347592  164.977    0.000  679.251    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   12.807    0.001  365.603    0.036 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.051    0.000   78.548    0.004 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.074    0.000   76.716    0.004 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   27.688    0.001   76.565    0.004 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.117    0.000   46.812    0.005 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.629    0.000   16.831    0.002 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.116    0.000    2.693    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.358    0.000    1.006    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.716    0.716 GerrymanderingMCMC.py:1(<module>)
        1    0.001    0.001    0.054    0.054 GerrymanderingMCMC.py:21(__init__)
        1    0.010    0.010    0.054    0.054 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.012    0.012 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
