         5653344549 function calls (5653222510 primitive calls) in 3275.660 seconds
        1   22.349   22.349 3274.547 3274.547 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    9.265    0.001 3252.062    0.322 GerrymanderingMCMC.py:235(recombination_of_districts)
   329116    3.693    0.000 1805.913    0.005 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1316464    2.661    0.000 1282.251    0.001 GerrymanderingMCMC.py:190(__district_size)
284029632  256.694    0.000 1050.341    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   18.199    0.002  559.911    0.055 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.060    0.000  115.705    0.006 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.082    0.000  113.232    0.006 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   38.413    0.002  113.059    0.006 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.144    0.000   69.366    0.007 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    3.794    0.000   25.791    0.003 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.147    0.000    3.680    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.497    0.000    1.519    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    1.024    1.024 GerrymanderingMCMC.py:1(<module>)
        1    0.001    0.001    0.083    0.083 GerrymanderingMCMC.py:21(__init__)
        1    0.015    0.015    0.083    0.083 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.018    0.018 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
