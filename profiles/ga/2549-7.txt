         5764231465 function calls (5764109426 primitive calls) in 2207.533 seconds
        1   22.312   22.312 2206.675 2206.675 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    6.229    0.001 2184.307    0.216 GerrymanderingMCMC.py:235(recombination_of_districts)
   343557    2.617    0.000 1201.847    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1374228    1.698    0.000  849.078    0.001 GerrymanderingMCMC.py:190(__district_size)
293777632  170.974    0.000  694.955    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   13.030    0.001  370.437    0.037 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.051    0.000   79.423    0.004 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.071    0.000   77.536    0.004 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   28.477    0.001   77.386    0.004 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.113    0.000   47.327    0.005 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.630    0.000   17.143    0.002 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.114    0.000    2.684    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.367    0.000    1.025    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.798    0.798 GerrymanderingMCMC.py:1(<module>)
        1    0.001    0.001    0.055    0.055 GerrymanderingMCMC.py:21(__init__)
        1    0.010    0.010    0.055    0.055 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.012    0.012 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
