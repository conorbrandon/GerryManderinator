         5408164041 function calls (5408042002 primitive calls) in 3187.030 seconds
        1   23.299   23.299 3185.830 3185.830 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    8.785    0.001 3162.431    0.313 GerrymanderingMCMC.py:235(recombination_of_districts)
   315222    3.535    0.000 1690.683    0.005 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1260888    2.463    0.000 1187.089    0.001 GerrymanderingMCMC.py:190(__district_size)
263420828  233.710    0.000  972.849    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   18.638    0.002  569.383    0.056 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.065    0.000  117.735    0.006 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.086    0.000  115.195    0.006 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   39.543    0.002  115.000    0.006 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.147    0.000   70.745    0.007 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    3.945    0.000   26.465    0.003 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.143    0.000    3.784    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.506    0.000    1.499    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    1.097    1.097 GerrymanderingMCMC.py:1(<module>)
        1    0.001    0.001    0.097    0.097 GerrymanderingMCMC.py:21(__init__)
        1    0.016    0.016    0.096    0.096 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.018    0.018 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
