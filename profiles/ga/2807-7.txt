         5585588613 function calls (5585466574 primitive calls) in 2125.020 seconds
        1   20.902   20.902 2124.282 2124.282 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.947    0.001 2103.296    0.208 GerrymanderingMCMC.py:235(recombination_of_districts)
   330145    2.466    0.000 1132.233    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1320580    1.679    0.000  796.142    0.001 GerrymanderingMCMC.py:190(__district_size)
278814028  157.571    0.000  649.500    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   12.303    0.001  364.980    0.036 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.050    0.000   77.740    0.004 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.068    0.000   75.919    0.004 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   27.002    0.001   75.776    0.004 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.102    0.000   46.064    0.005 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.593    0.000   16.861    0.002 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.118    0.000    2.641    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.340    0.000    0.980    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.679    0.679 GerrymanderingMCMC.py:1(<module>)
        1    0.001    0.001    0.055    0.055 GerrymanderingMCMC.py:21(__init__)
        1    0.010    0.010    0.054    0.054 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.012    0.012 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
