         5868970436 function calls (5868848397 primitive calls) in 2235.789 seconds
        1   21.568   21.568 2235.023 2235.023 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    6.353    0.001 2213.384    0.219 GerrymanderingMCMC.py:235(recombination_of_districts)
   346283    2.613    0.000 1234.941    0.004 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1385132    1.706    0.000  872.621    0.001 GerrymanderingMCMC.py:190(__district_size)
302840128  174.686    0.000  713.135    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   13.283    0.001  369.507    0.037 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.057    0.000   78.535    0.004 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.087    0.000   76.714    0.004 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   27.887    0.001   76.550    0.004 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.105    0.000   46.653    0.005 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.674    0.000   16.956    0.002 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.106    0.000    2.683    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.351    0.000    1.008    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.705    0.705 GerrymanderingMCMC.py:1(<module>)
        1    0.001    0.001    0.055    0.055 GerrymanderingMCMC.py:21(__init__)
        1    0.010    0.010    0.055    0.055 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.012    0.012 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
