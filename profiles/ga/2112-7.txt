         5350623043 function calls (5350501004 primitive calls) in 2027.920 seconds
        1   20.824   20.824 2027.182 2027.182 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.565    0.001 2006.298    0.199 GerrymanderingMCMC.py:235(recombination_of_districts)
   305753    2.227    0.000 1042.762    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1223012    1.549    0.000  736.117    0.001 GerrymanderingMCMC.py:190(__district_size)
258425428  147.855    0.000  603.057    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   12.467    0.001  364.354    0.036 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.049    0.000   77.419    0.004 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.068    0.000   75.584    0.004 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   26.813    0.001   75.431    0.004 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.104    0.000   46.056    0.005 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.566    0.000   16.565    0.002 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.109    0.000    2.640    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.342    0.000    0.983    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.679    0.679 GerrymanderingMCMC.py:1(<module>)
        1    0.001    0.001    0.055    0.055 GerrymanderingMCMC.py:21(__init__)
        1    0.010    0.010    0.054    0.054 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.012    0.012 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
