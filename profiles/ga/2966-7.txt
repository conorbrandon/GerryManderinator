         5550007491 function calls (5549885452 primitive calls) in 2116.804 seconds
        1   21.699   21.699 2116.005 2116.005 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.906    0.001 2094.243    0.207 GerrymanderingMCMC.py:235(recombination_of_districts)
   327056    2.412    0.000 1122.055    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1308224    1.585    0.000  792.672    0.001 GerrymanderingMCMC.py:190(__district_size)
275956240  158.445    0.000  649.149    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   12.742    0.001  366.541    0.036 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.051    0.000   78.720    0.004 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.069    0.000   76.872    0.004 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   27.969    0.001   76.728    0.004 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.104    0.000   46.831    0.005 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.692    0.000   16.985    0.002 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.116    0.000    2.623    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.348    0.000    1.007    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.738    0.738 GerrymanderingMCMC.py:1(<module>)
        1    0.001    0.001    0.055    0.055 GerrymanderingMCMC.py:21(__init__)
        1    0.010    0.010    0.054    0.054 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.012    0.012 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
