         5285190103 function calls (5285068064 primitive calls) in 2022.740 seconds
        1   21.345   21.345 2021.924 2021.924 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.625    0.001 2000.472    0.198 GerrymanderingMCMC.py:235(recombination_of_districts)
   302982    2.211    0.000 1031.263    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1211928    1.489    0.000  728.540    0.001 GerrymanderingMCMC.py:190(__district_size)
252962008  145.596    0.000  596.274    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   12.515    0.001  366.287    0.036 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.049    0.000   79.086    0.004 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.069    0.000   77.253    0.004 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   27.997    0.001   77.103    0.004 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.109    0.000   47.375    0.005 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.585    0.000   16.758    0.002 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.110    0.000    2.591    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.366    0.000    1.007    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.748    0.748 GerrymanderingMCMC.py:1(<module>)
        1    0.001    0.001    0.069    0.069 GerrymanderingMCMC.py:21(__init__)
        1    0.010    0.010    0.068    0.068 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.012    0.012 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
