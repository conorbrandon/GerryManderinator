         5214461421 function calls (5214339382 primitive calls) in 1974.453 seconds
        1   21.466   21.466 1973.658 1973.658 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.400    0.001 1952.134    0.193 GerrymanderingMCMC.py:235(recombination_of_districts)
   295599    2.181    0.000  988.641    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1182396    1.460    0.000  697.238    0.001 GerrymanderingMCMC.py:190(__district_size)
246840012  139.417    0.000  570.327    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   12.640    0.001  364.874    0.036 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.076    0.000   77.732    0.004 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.069    0.000   75.854    0.004 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   27.349    0.001   75.705    0.004 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.127    0.000   46.267    0.005 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.545    0.000   16.522    0.002 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.116    0.000    2.676    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.347    0.000    1.016    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.736    0.736 GerrymanderingMCMC.py:1(<module>)
        1    0.001    0.001    0.054    0.054 GerrymanderingMCMC.py:21(__init__)
        1    0.010    0.010    0.054    0.054 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.012    0.012 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
