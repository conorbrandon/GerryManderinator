         5401069054 function calls (5400947015 primitive calls) in 2034.608 seconds
        1   20.670   20.670 2033.786 2033.786 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.606    0.001 2012.914    0.199 GerrymanderingMCMC.py:235(recombination_of_districts)
   311304    2.208    0.000 1061.809    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1245216    1.518    0.000  750.430    0.001 GerrymanderingMCMC.py:190(__district_size)
262900966  150.437    0.000  613.128    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   12.377    0.001  359.972    0.036 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.048    0.000   76.569    0.004 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.067    0.000   74.816    0.004 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   26.812    0.001   74.679    0.004 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.104    0.000   45.640    0.005 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.632    0.000   16.793    0.002 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.107    0.000    2.524    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.337    0.000    0.975    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.749    0.749 GerrymanderingMCMC.py:1(<module>)
        1    0.001    0.001    0.067    0.067 GerrymanderingMCMC.py:21(__init__)
        1    0.010    0.010    0.066    0.066 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.012    0.012 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
