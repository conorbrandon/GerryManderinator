         5306914584 function calls (5306792545 primitive calls) in 2022.762 seconds
        1   22.082   22.082 2021.989 2021.989 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.584    0.001 1999.831    0.198 GerrymanderingMCMC.py:235(recombination_of_districts)
   303799    2.225    0.000 1029.625    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1215196    1.510    0.000  726.900    0.001 GerrymanderingMCMC.py:190(__district_size)
254772492  146.514    0.000  595.180    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   12.643    0.001  365.864    0.036 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.053    0.000   77.874    0.004 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.073    0.000   76.018    0.004 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   27.389    0.001   75.864    0.004 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.108    0.000   46.361    0.005 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.582    0.000   16.664    0.002 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.117    0.000    2.747    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.360    0.000    1.021    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.714    0.714 GerrymanderingMCMC.py:1(<module>)
        1    0.001    0.001    0.055    0.055 GerrymanderingMCMC.py:21(__init__)
        1    0.010    0.010    0.054    0.054 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.012    0.012 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
