         5365310644 function calls (5365188605 primitive calls) in 2042.726 seconds
        1   22.375   22.375 2041.920 2041.920 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.566    0.001 2019.479    0.200 GerrymanderingMCMC.py:235(recombination_of_districts)
   304671    2.213    0.000 1045.359    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1218684    1.478    0.000  735.049    0.001 GerrymanderingMCMC.py:190(__district_size)
259821810  147.616    0.000  601.996    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   12.631    0.001  365.393    0.036 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.051    0.000   78.978    0.004 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.072    0.000   77.184    0.004 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   27.466    0.001   77.035    0.004 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.105    0.000   46.822    0.005 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.594    0.000   16.877    0.002 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.125    0.000    2.635    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.357    0.000    0.998    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.745    0.745 GerrymanderingMCMC.py:1(<module>)
        1    0.001    0.001    0.055    0.055 GerrymanderingMCMC.py:21(__init__)
        1    0.010    0.010    0.055    0.055 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.012    0.012 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
