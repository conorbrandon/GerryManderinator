         5332533181 function calls (5332411142 primitive calls) in 2035.506 seconds
        1   21.556   21.556 2034.745 2034.745 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.577    0.001 2013.113    0.199 GerrymanderingMCMC.py:235(recombination_of_districts)
   307526    2.276    0.000 1045.439    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1230104    1.509    0.000  735.933    0.001 GerrymanderingMCMC.py:190(__district_size)
257344340  147.239    0.000  602.599    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   12.424    0.001  363.679    0.036 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.049    0.000   77.319    0.004 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.068    0.000   75.529    0.004 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   27.320    0.001   75.387    0.004 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.110    0.000   45.946    0.005 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.600    0.000   16.760    0.002 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.128    0.000    2.641    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.375    0.000    1.008    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.701    0.701 GerrymanderingMCMC.py:1(<module>)
        1    0.001    0.001    0.056    0.056 GerrymanderingMCMC.py:21(__init__)
        1    0.010    0.010    0.056    0.056 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.012    0.012 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
