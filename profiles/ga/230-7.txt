         5039001329 function calls (5038879290 primitive calls) in 1914.285 seconds
        1   20.842   20.842 1913.480 1913.480 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.080    0.001 1892.561    0.187 GerrymanderingMCMC.py:235(recombination_of_districts)
   280234    2.017    0.000  937.011    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1120936    1.350    0.000  662.187    0.001 GerrymanderingMCMC.py:190(__district_size)
231885666  135.571    0.000  542.658    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   12.606    0.001  361.150    0.036 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.049    0.000   76.370    0.004 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.065    0.000   74.617    0.004 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   26.655    0.001   74.479    0.004 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.101    0.000   45.489    0.005 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.551    0.000   16.504    0.002 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.118    0.000    2.571    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.341    0.000    0.961    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.736    0.736 GerrymanderingMCMC.py:1(<module>)
        1    0.001    0.001    0.064    0.064 GerrymanderingMCMC.py:21(__init__)
        1    0.011    0.011    0.063    0.063 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.018    0.018 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
