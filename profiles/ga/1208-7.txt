         5319586485 function calls (5319464446 primitive calls) in 2035.749 seconds
        1   21.611   21.611 2034.925 2034.925 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.582    0.001 2013.223    0.199 GerrymanderingMCMC.py:235(recombination_of_districts)
   306726    2.223    0.000 1043.214    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1226904    1.502    0.000  734.281    0.001 GerrymanderingMCMC.py:190(__district_size)
255975678  146.442    0.000  600.372    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10101   12.568    0.001  368.009    0.036 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.049    0.000   78.708    0.004 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.070    0.000   76.876    0.004 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   27.366    0.001   76.732    0.004 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.108    0.000   46.801    0.005 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.591    0.000   16.847    0.002 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.155    0.000    2.673    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.377    0.000    1.030    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.764    0.764 GerrymanderingMCMC.py:1(<module>)
        1    0.001    0.001    0.055    0.055 GerrymanderingMCMC.py:21(__init__)
        1    0.010    0.010    0.054    0.054 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.012    0.012 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
