         5134440038 function calls (5134317999 primitive calls) in 1958.655 seconds
        1   21.302   21.302 1957.848 1957.848 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.158    0.001 1936.491    0.192 GerrymanderingMCMC.py:235(recombination_of_districts)
   285658    2.167    0.000  968.121    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1142632    1.397    0.000  682.193    0.001 GerrymanderingMCMC.py:190(__district_size)
239626980  137.571    0.000  556.943    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   12.676    0.001  367.219    0.036 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.063    0.000   77.938    0.004 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.069    0.000   76.105    0.004 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   26.916    0.001   75.962    0.004 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.104    0.000   46.634    0.005 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.645    0.000   16.692    0.002 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.111    0.000    2.575    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.345    0.000    0.990    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.749    0.749 GerrymanderingMCMC.py:1(<module>)
        1    0.001    0.001    0.055    0.055 GerrymanderingMCMC.py:21(__init__)
        1    0.010    0.010    0.054    0.054 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.012    0.012 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
