         5646171656 function calls (5646049617 primitive calls) in 2144.689 seconds
        1   21.220   21.220 2143.912 2143.912 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.987    0.001 2122.631    0.210 GerrymanderingMCMC.py:235(recombination_of_districts)
   328584    2.389    0.000 1150.578    0.004 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1314336    1.602    0.000  814.194    0.001 GerrymanderingMCMC.py:190(__district_size)
283991286  161.864    0.000  663.668    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   12.360    0.001  364.409    0.036 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.047    0.000   77.577    0.004 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.071    0.000   75.778    0.004 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   27.182    0.001   75.633    0.004 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.105    0.000   46.212    0.005 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.630    0.000   16.788    0.002 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.109    0.000    2.589    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.351    0.000    0.990    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.722    0.722 GerrymanderingMCMC.py:1(<module>)
        1    0.001    0.001    0.056    0.056 GerrymanderingMCMC.py:21(__init__)
        1    0.010    0.010    0.055    0.055 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.012    0.012 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
