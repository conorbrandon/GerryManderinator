         5156920483 function calls (5156798444 primitive calls) in 1983.070 seconds
        1   23.671   23.671 1982.321 1982.321 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.265    0.001 1958.592    0.194 GerrymanderingMCMC.py:235(recombination_of_districts)
   282611    2.072    0.000  981.140    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1130444    1.374    0.000  690.159    0.001 GerrymanderingMCMC.py:190(__district_size)
241398742  138.649    0.000  563.412    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   13.089    0.001  370.861    0.037 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.050    0.000   79.030    0.004 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.072    0.000   77.166    0.004 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   28.237    0.001   77.013    0.004 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.110    0.000   46.887    0.005 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.676    0.000   16.911    0.002 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.116    0.000    2.701    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.379    0.000    1.007    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.674    0.674 GerrymanderingMCMC.py:1(<module>)
        1    0.001    0.001    0.071    0.071 GerrymanderingMCMC.py:21(__init__)
        1    0.013    0.013    0.070    0.070 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.022    0.022 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
