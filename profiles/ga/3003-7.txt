         5288784620 function calls (5288662581 primitive calls) in 2023.121 seconds
        1   21.208   21.208 2022.371 2022.371 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.396    0.001 2001.108    0.198 GerrymanderingMCMC.py:235(recombination_of_districts)
   295556    2.226    0.000 1031.742    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1182224    1.455    0.000  728.190    0.001 GerrymanderingMCMC.py:190(__district_size)
252759244  144.591    0.000  596.706    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   12.739    0.001  370.113    0.037 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.049    0.000   78.682    0.004 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.083    0.000   76.856    0.004 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   27.737    0.001   76.699    0.004 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.105    0.000   46.603    0.005 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.703    0.000   16.978    0.002 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.107    0.000    2.660    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.352    0.000    1.010    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.688    0.688 GerrymanderingMCMC.py:1(<module>)
        1    0.001    0.001    0.057    0.057 GerrymanderingMCMC.py:21(__init__)
        1    0.010    0.010    0.056    0.056 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.012    0.012 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
