         5318182689 function calls (5318060650 primitive calls) in 2041.693 seconds
        1   22.390   22.390 2040.899 2040.899 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.598    0.001 2018.450    0.200 GerrymanderingMCMC.py:235(recombination_of_districts)
   301593    2.241    0.000 1040.288    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1206372    1.475    0.000  735.359    0.001 GerrymanderingMCMC.py:190(__district_size)
255690296  146.863    0.000  602.755    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   12.599    0.001  367.640    0.036 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.057    0.000   79.283    0.004 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.072    0.000   77.418    0.004 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   28.136    0.001   77.268    0.004 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.109    0.000   46.927    0.005 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.704    0.000   17.083    0.002 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.129    0.000    2.677    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.365    0.000    1.007    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.734    0.734 GerrymanderingMCMC.py:1(<module>)
        1    0.001    0.001    0.055    0.055 GerrymanderingMCMC.py:21(__init__)
        1    0.010    0.010    0.055    0.055 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.012    0.012 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
