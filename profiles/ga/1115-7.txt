         5417885722 function calls (5417763683 primitive calls) in 2061.494 seconds
        1   21.503   21.503 2060.661 2060.661 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.741    0.001 2039.025    0.202 GerrymanderingMCMC.py:235(recombination_of_districts)
   315875    2.363    0.000 1065.819    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1263500    1.498    0.000  751.164    0.001 GerrymanderingMCMC.py:190(__district_size)
264005704  148.346    0.000  615.104    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   12.751    0.001  366.682    0.036 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.056    0.000   78.303    0.004 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.069    0.000   76.423    0.004 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   27.423    0.001   76.280    0.004 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.103    0.000   46.780    0.005 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.637    0.000   16.833    0.002 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.109    0.000    2.644    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.345    0.000    0.989    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.775    0.775 GerrymanderingMCMC.py:1(<module>)
        1    0.001    0.001    0.055    0.055 GerrymanderingMCMC.py:21(__init__)
        1    0.010    0.010    0.054    0.054 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.012    0.012 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
