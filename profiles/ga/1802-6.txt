         5614006942 function calls (5613884903 primitive calls) in 3402.518 seconds
        1   22.835   22.835 3401.398 3401.398 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    9.537    0.001 3378.456    0.335 GerrymanderingMCMC.py:235(recombination_of_districts)
   330812    3.780    0.000 1865.783    0.006 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1323248    2.716    0.000 1316.090    0.001 GerrymanderingMCMC.py:190(__district_size)
281196130  260.604    0.000 1077.476    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   18.859    0.002  590.876    0.059 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.063    0.000  121.317    0.006 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.085    0.000  118.767    0.006 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   40.639    0.002  118.587    0.006 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.162    0.000   73.304    0.007 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    4.031    0.000   27.027    0.003 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.145    0.000    3.930    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.549    0.000    1.609    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    1.031    1.031 GerrymanderingMCMC.py:1(<module>)
        1    0.001    0.001    0.087    0.087 GerrymanderingMCMC.py:21(__init__)
        1    0.016    0.016    0.086    0.086 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.019    0.019 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
