         5794212977 function calls (5794090938 primitive calls) in 2187.374 seconds
        1   20.922   20.922 2186.570 2186.570 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    6.164    0.001 2165.573    0.214 GerrymanderingMCMC.py:235(recombination_of_districts)
   340306    2.481    0.000 1195.801    0.004 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1361224    1.660    0.000  842.939    0.001 GerrymanderingMCMC.py:190(__district_size)
296412918  165.650    0.000  687.319    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   12.343    0.001  365.273    0.036 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.049    0.000   76.692    0.004 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.071    0.000   74.845    0.004 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   26.626    0.001   74.654    0.004 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.109    0.000   45.713    0.005 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.596    0.000   16.754    0.002 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.115    0.000    2.702    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.342    0.000    0.965    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.745    0.745 GerrymanderingMCMC.py:1(<module>)
        1    0.001    0.001    0.055    0.055 GerrymanderingMCMC.py:21(__init__)
        1    0.010    0.010    0.054    0.054 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.012    0.012 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
