         5732536647 function calls (5732414608 primitive calls) in 2196.607 seconds
        1   21.652   21.652 2195.797 2195.797 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    6.228    0.001 2174.065    0.215 GerrymanderingMCMC.py:235(recombination_of_districts)
   340135    2.486    0.000 1195.890    0.004 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1360540    1.660    0.000  843.199    0.001 GerrymanderingMCMC.py:190(__district_size)
291341232  169.200    0.000  690.758    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   12.839    0.001  370.953    0.037 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.049    0.000   79.475    0.004 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.070    0.000   77.628    0.004 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   27.923    0.001   77.482    0.004 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.103    0.000   47.247    0.005 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.599    0.000   17.076    0.002 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.113    0.000    2.621    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.374    0.000    1.020    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.750    0.750 GerrymanderingMCMC.py:1(<module>)
        1    0.001    0.001    0.055    0.055 GerrymanderingMCMC.py:21(__init__)
        1    0.010    0.010    0.055    0.055 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.012    0.012 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
