         5573698976 function calls (5573576937 primitive calls) in 2136.097 seconds
        1   21.474   21.474 2135.292 2135.292 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.890    0.001 2113.745    0.209 GerrymanderingMCMC.py:235(recombination_of_districts)
   322619    2.416    0.000 1138.674    0.004 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1290476    1.679    0.000  804.041    0.001 GerrymanderingMCMC.py:190(__district_size)
277425668  163.720    0.000  657.446    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   12.727    0.001  370.111    0.037 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.051    0.000   79.798    0.004 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.071    0.000   77.921    0.004 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   28.147    0.001   77.769    0.004 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.107    0.000   47.588    0.005 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.688    0.000   17.179    0.002 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.122    0.000    2.750    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.375    0.000    1.041    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.745    0.745 GerrymanderingMCMC.py:1(<module>)
        1    0.001    0.001    0.056    0.056 GerrymanderingMCMC.py:21(__init__)
        1    0.010    0.010    0.055    0.055 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.012    0.012 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
