         5084045068 function calls (5083923029 primitive calls) in 1974.189 seconds
        1   21.622   21.622 1973.413 1973.413 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.201    0.001 1951.714    0.193 GerrymanderingMCMC.py:235(recombination_of_districts)
   284050    2.044    0.000  979.244    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1136200    1.421    0.000  701.148    0.001 GerrymanderingMCMC.py:190(__district_size)
235387634  135.188    0.000  577.924    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   12.639    0.001  365.787    0.036 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.048    0.000   77.749    0.004 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.072    0.000   75.871    0.004 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   26.795    0.001   75.719    0.004 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.106    0.000   46.340    0.005 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.547    0.000   17.346    0.002 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.120    0.000    2.718    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.356    0.000    1.021    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.708    0.708 GerrymanderingMCMC.py:1(<module>)
        1    0.001    0.001    0.055    0.055 GerrymanderingMCMC.py:21(__init__)
        1    0.010    0.010    0.054    0.054 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.012    0.012 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
