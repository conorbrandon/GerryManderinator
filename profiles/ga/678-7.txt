         5687281879 function calls (5687159840 primitive calls) in 2167.822 seconds
        1   21.912   21.912 2167.076 2167.076 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    6.117    0.001 2145.107    0.212 GerrymanderingMCMC.py:235(recombination_of_districts)
   332017    2.410    0.000 1164.762    0.004 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1328068    1.607    0.000  824.136    0.001 GerrymanderingMCMC.py:190(__district_size)
286828114  165.517    0.000  676.448    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   12.737    0.001  371.031    0.037 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.051    0.000   78.593    0.004 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.072    0.000   76.716    0.004 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   27.502    0.001   76.565    0.004 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.107    0.000   46.752    0.005 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.646    0.000   16.858    0.002 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.144    0.000    2.776    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.364    0.000    1.015    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.688    0.688 GerrymanderingMCMC.py:1(<module>)
        1    0.001    0.001    0.054    0.054 GerrymanderingMCMC.py:21(__init__)
        1    0.010    0.010    0.054    0.054 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.012    0.012 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
