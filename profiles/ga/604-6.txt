         5347232758 function calls (5347110719 primitive calls) in 3258.154 seconds
        1   23.709   23.709 3257.028 3257.028 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    8.858    0.001 3233.216    0.320 GerrymanderingMCMC.py:235(recombination_of_districts)
   302344    3.485    0.000 1716.915    0.006 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1209376    2.465    0.000 1216.253    0.001 GerrymanderingMCMC.py:190(__district_size)
258021054  243.470    0.000  996.442    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   19.174    0.002  590.284    0.058 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.062    0.000  122.895    0.006 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.088    0.000  120.364    0.006 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   41.530    0.002  120.173    0.006 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.154    0.000   74.053    0.007 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    4.030    0.000   27.241    0.003 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.148    0.000    3.834    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.554    0.000    1.600    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    1.034    1.034 GerrymanderingMCMC.py:1(<module>)
        1    0.001    0.001    0.087    0.087 GerrymanderingMCMC.py:21(__init__)
        1    0.017    0.017    0.086    0.086 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.019    0.019 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
