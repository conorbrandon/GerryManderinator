         5277236032 function calls (5277113993 primitive calls) in 2019.183 seconds
        1   22.751   22.751 2018.030 2018.030 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.480    0.001 1995.149    0.198 GerrymanderingMCMC.py:235(recombination_of_districts)
   301006    2.257    0.000 1025.628    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1204024    1.464    0.000  722.461    0.001 GerrymanderingMCMC.py:190(__district_size)
252700366  146.118    0.000  591.840    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   12.687    0.001  363.908    0.036 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.050    0.000   78.007    0.004 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.070    0.000   76.208    0.004 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   27.873    0.001   76.059    0.004 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.117    0.000   46.384    0.005 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.596    0.000   16.677    0.002 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.113    0.000    2.634    0.000 GerrymanderingMCMC.py:157(__random_district_label)
        1    0.000    0.000    1.084    1.084 GerrymanderingMCMC.py:1(<module>)
    10100    0.345    0.000    0.971    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.001    0.001    0.065    0.065 GerrymanderingMCMC.py:21(__init__)
        1    0.010    0.010    0.064    0.064 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.020    0.020 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
