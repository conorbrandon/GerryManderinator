         5345664503 function calls (5345542464 primitive calls) in 2039.261 seconds
        1   21.843   21.843 2038.466 2038.466 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.508    0.001 2016.539    0.200 GerrymanderingMCMC.py:235(recombination_of_districts)
   306278    2.187    0.000 1040.680    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1225112    1.475    0.000  732.950    0.001 GerrymanderingMCMC.py:190(__district_size)
257796622  147.860    0.000  600.460    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   12.628    0.001  367.904    0.036 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.051    0.000   78.375    0.004 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.072    0.000   76.541    0.004 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   27.996    0.001   76.394    0.004 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.105    0.000   46.720    0.005 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.588    0.000   16.791    0.002 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.109    0.000    2.621    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.378    0.000    1.061    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.736    0.736 GerrymanderingMCMC.py:1(<module>)
        1    0.001    0.001    0.055    0.055 GerrymanderingMCMC.py:21(__init__)
        1    0.010    0.010    0.054    0.054 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.012    0.012 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
