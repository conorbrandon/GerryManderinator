         5513691585 function calls (5513569546 primitive calls) in 2098.908 seconds
        1   21.889   21.889 2098.070 2098.070 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    6.005    0.001 2076.103    0.206 GerrymanderingMCMC.py:235(recombination_of_districts)
   322599    2.330    0.000 1104.165    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1290396    1.575    0.000  775.724    0.001 GerrymanderingMCMC.py:190(__district_size)
272248896  154.829    0.000  633.000    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   13.023    0.001  370.288    0.037 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.050    0.000   77.725    0.004 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.072    0.000   75.883    0.004 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   27.454    0.001   75.711    0.004 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.108    0.000   46.430    0.005 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.669    0.000   16.993    0.002 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.125    0.000    2.736    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.350    0.000    1.038    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.792    0.792 GerrymanderingMCMC.py:1(<module>)
        1    0.001    0.001    0.055    0.055 GerrymanderingMCMC.py:21(__init__)
        1    0.010    0.010    0.055    0.055 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.012    0.012 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
