         5233602151 function calls (5233480112 primitive calls) in 3042.673 seconds
        1   23.429   23.429 3041.466 3041.466 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    8.306    0.001 3017.914    0.299 GerrymanderingMCMC.py:235(recombination_of_districts)
   298590    3.289    0.000 1567.929    0.005 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1194360    2.259    0.000 1107.197    0.001 GerrymanderingMCMC.py:190(__district_size)
248758260  221.554    0.000  906.210    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   18.444    0.002  560.437    0.055 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.059    0.000  116.219    0.006 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.086    0.000  113.729    0.006 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   38.581    0.002  113.546    0.006 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.145    0.000   69.918    0.007 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    3.745    0.000   25.658    0.003 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.140    0.000    3.701    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.513    0.000    1.509    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    1.115    1.115 GerrymanderingMCMC.py:1(<module>)
        1    0.001    0.001    0.087    0.087 GerrymanderingMCMC.py:21(__init__)
        1    0.016    0.016    0.086    0.086 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.019    0.019 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
