         5373209920 function calls (5373087881 primitive calls) in 2053.606 seconds
        1   21.999   21.999 2052.747 2052.747 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.676    0.001 2030.597    0.201 GerrymanderingMCMC.py:235(recombination_of_districts)
   308769    2.294    0.000 1061.542    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1235076    1.539    0.000  746.988    0.001 GerrymanderingMCMC.py:190(__district_size)
260635302  150.321    0.000  610.784    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   12.497    0.001  367.071    0.036 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.051    0.000   77.354    0.004 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.070    0.000   75.480    0.004 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   27.126    0.001   75.316    0.004 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.116    0.000   46.188    0.005 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.631    0.000   16.759    0.002 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.116    0.000    2.739    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.354    0.000    0.992    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.787    0.787 GerrymanderingMCMC.py:1(<module>)
        1    0.001    0.001    0.067    0.067 GerrymanderingMCMC.py:21(__init__)
        1    0.011    0.011    0.066    0.066 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.012    0.012 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
