         5306867663 function calls (5306745624 primitive calls) in 1989.435 seconds
        1   20.808   20.808 1988.608 1988.608 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.394    0.001 1967.743    0.195 GerrymanderingMCMC.py:235(recombination_of_districts)
   299097    2.164    0.000 1019.302    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1196388    1.468    0.000  721.087    0.001 GerrymanderingMCMC.py:190(__district_size)
254445260  145.034    0.000  590.652    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   12.179    0.001  361.764    0.036 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.049    0.000   76.429    0.004 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.071    0.000   74.642    0.004 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   26.597    0.001   74.495    0.004 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.106    0.000   45.575    0.005 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.546    0.000   16.528    0.002 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.118    0.000    2.681    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.345    0.000    0.969    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.767    0.767 GerrymanderingMCMC.py:1(<module>)
        1    0.001    0.001    0.055    0.055 GerrymanderingMCMC.py:21(__init__)
        1    0.010    0.010    0.054    0.054 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.012    0.012 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
