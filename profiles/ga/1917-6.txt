         5450841223 function calls (5450719184 primitive calls) in 3225.464 seconds
        1   23.278   23.278 3224.361 3224.361 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    8.994    0.001 3200.999    0.317 GerrymanderingMCMC.py:235(recombination_of_districts)
   317501    3.659    0.000 1721.522    0.005 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1270004    2.476    0.000 1214.458    0.001 GerrymanderingMCMC.py:190(__district_size)
266873236  236.170    0.000  992.012    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   18.587    0.002  573.198    0.057 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.073    0.000  117.556    0.006 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.086    0.000  115.032    0.006 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   39.286    0.002  114.852    0.006 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.145    0.000   70.813    0.007 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    3.895    0.000   26.629    0.003 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.152    0.000    3.863    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.533    0.000    1.540    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    1.011    1.011 GerrymanderingMCMC.py:1(<module>)
        1    0.001    0.001    0.087    0.087 GerrymanderingMCMC.py:21(__init__)
        1    0.016    0.016    0.086    0.086 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.019    0.019 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
