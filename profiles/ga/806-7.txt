         5612218203 function calls (5612096164 primitive calls) in 2133.150 seconds
        1   21.497   21.497 2132.333 2132.333 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    6.105    0.001 2110.752    0.209 GerrymanderingMCMC.py:235(recombination_of_districts)
   333253    2.488    0.000 1141.343    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1333012    1.650    0.000  805.089    0.001 GerrymanderingMCMC.py:190(__district_size)
280841440  161.884    0.000  658.955    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10101   12.381    0.001  363.558    0.036 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.049    0.000   78.105    0.004 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.069    0.000   76.279    0.004 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   27.178    0.001   76.137    0.004 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.107    0.000   46.557    0.005 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.658    0.000   16.986    0.002 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.109    0.000    2.576    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.352    0.000    1.020    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.756    0.756 GerrymanderingMCMC.py:1(<module>)
        1    0.001    0.001    0.055    0.055 GerrymanderingMCMC.py:21(__init__)
        1    0.010    0.010    0.055    0.055 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.012    0.012 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
