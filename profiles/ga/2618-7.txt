         5488198621 function calls (5488076582 primitive calls) in 2098.310 seconds
        1   21.275   21.275 2097.521 2097.521 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.815    0.001 2076.186    0.206 GerrymanderingMCMC.py:235(recombination_of_districts)
   323486    2.393    0.000 1107.231    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1293944    1.633    0.000  783.271    0.001 GerrymanderingMCMC.py:190(__district_size)
270989122  157.130    0.000  640.238    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   12.378    0.001  365.773    0.036 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.048    0.000   78.175    0.004 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.069    0.000   76.373    0.004 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   27.460    0.001   76.230    0.004 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.103    0.000   46.546    0.005 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.593    0.000   16.749    0.002 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.113    0.000    2.649    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.361    0.000    1.008    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.737    0.737 GerrymanderingMCMC.py:1(<module>)
        1    0.001    0.001    0.054    0.054 GerrymanderingMCMC.py:21(__init__)
        1    0.010    0.010    0.054    0.054 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.012    0.012 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
