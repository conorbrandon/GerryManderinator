         5558498777 function calls (5558376738 primitive calls) in 2145.340 seconds
        1   21.276   21.276 2144.609 2144.609 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.969    0.001 2123.184    0.210 GerrymanderingMCMC.py:235(recombination_of_districts)
   323922    2.426    0.000 1153.023    0.004 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1295688    1.631    0.000  810.008    0.001 GerrymanderingMCMC.py:190(__district_size)
276718460  162.552    0.000  662.379    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   12.672    0.001  367.112    0.036 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.050    0.000   78.648    0.004 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.070    0.000   76.820    0.004 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   27.738    0.001   76.674    0.004 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.104    0.000   46.823    0.005 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.686    0.000   17.150    0.002 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.110    0.000    2.671    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.372    0.000    1.005    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.672    0.672 GerrymanderingMCMC.py:1(<module>)
        1    0.001    0.001    0.055    0.055 GerrymanderingMCMC.py:21(__init__)
        1    0.010    0.010    0.054    0.054 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.012    0.012 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
