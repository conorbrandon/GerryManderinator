         5330803648 function calls (5330681609 primitive calls) in 2022.995 seconds
        1   21.273   21.273 2022.228 2022.228 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.573    0.001 2000.899    0.198 GerrymanderingMCMC.py:235(recombination_of_districts)
   302338    2.208    0.000 1037.377    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1209352    1.506    0.000  730.053    0.001 GerrymanderingMCMC.py:190(__district_size)
255929948  145.173    0.000  597.163    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   12.762    0.001  369.205    0.037 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.049    0.000   77.661    0.004 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.067    0.000   75.822    0.004 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   27.139    0.001   75.683    0.004 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.103    0.000   46.599    0.005 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.618    0.000   17.073    0.002 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.107    0.000    2.663    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.386    0.000    1.042    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.708    0.708 GerrymanderingMCMC.py:1(<module>)
        1    0.001    0.001    0.055    0.055 GerrymanderingMCMC.py:21(__init__)
        1    0.010    0.010    0.054    0.054 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.012    0.012 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
