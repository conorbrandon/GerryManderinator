         5174376490 function calls (5174254451 primitive calls) in 1986.704 seconds
        1   21.864   21.864 1985.787 1985.787 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.325    0.001 1963.787    0.194 GerrymanderingMCMC.py:235(recombination_of_districts)
   290131    2.168    0.000  995.630    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1160524    1.423    0.000  702.759    0.001 GerrymanderingMCMC.py:190(__district_size)
243777780  139.950    0.000  575.739    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   12.593    0.001  365.738    0.036 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.051    0.000   78.758    0.004 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.071    0.000   76.961    0.004 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   27.953    0.001   76.815    0.004 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.138    0.000   46.767    0.005 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.624    0.000   16.869    0.002 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.121    0.000    2.690    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.372    0.000    1.055    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.857    0.857 GerrymanderingMCMC.py:1(<module>)
        1    0.001    0.001    0.055    0.055 GerrymanderingMCMC.py:21(__init__)
        1    0.010    0.010    0.055    0.055 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.012    0.012 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
