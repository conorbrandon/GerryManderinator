         5377450114 function calls (5377328075 primitive calls) in 3204.648 seconds
        1   23.891   23.891 3203.453 3203.453 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    8.901    0.001 3179.476    0.315 GerrymanderingMCMC.py:235(recombination_of_districts)
   309241    3.512    0.000 1692.147    0.005 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1236964    2.583    0.000 1193.762    0.001 GerrymanderingMCMC.py:190(__district_size)
260574928  240.487    0.000  976.391    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   18.539    0.002  577.120    0.057 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.062    0.000  119.925    0.006 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.101    0.000  117.353    0.006 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   40.351    0.002  117.142    0.006 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.151    0.000   72.306    0.007 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    4.114    0.000   26.764    0.003 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.141    0.000    3.882    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.527    0.000    1.553    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    1.100    1.100 GerrymanderingMCMC.py:1(<module>)
        1    0.001    0.001    0.090    0.090 GerrymanderingMCMC.py:21(__init__)
        1    0.016    0.016    0.089    0.089 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.018    0.018 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
