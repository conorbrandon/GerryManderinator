         5665719999 function calls (5665597960 primitive calls) in 2173.435 seconds
        1   21.950   21.950 2172.652 2172.652 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    6.052    0.001 2150.632    0.213 GerrymanderingMCMC.py:235(recombination_of_districts)
   337050    2.479    0.000 1175.258    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1348200    1.656    0.000  831.627    0.001 GerrymanderingMCMC.py:190(__district_size)
285839420  167.555    0.000  681.633    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   12.778    0.001  367.783    0.036 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.049    0.000   79.826    0.004 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.070    0.000   77.948    0.004 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   28.800    0.001   77.787    0.004 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.104    0.000   47.569    0.005 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.637    0.000   16.992    0.002 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.125    0.000    2.678    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.382    0.000    1.032    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.724    0.724 GerrymanderingMCMC.py:1(<module>)
        1    0.001    0.001    0.055    0.055 GerrymanderingMCMC.py:21(__init__)
        1    0.010    0.010    0.055    0.055 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.012    0.012 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
