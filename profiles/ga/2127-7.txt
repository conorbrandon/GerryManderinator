         5694426103 function calls (5694304064 primitive calls) in 2161.774 seconds
        1   21.743   21.743 2161.036 2161.036 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    6.167    0.001 2139.236    0.212 GerrymanderingMCMC.py:235(recombination_of_districts)
   338631    2.391    0.000 1170.916    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1354524    1.689    0.000  824.984    0.001 GerrymanderingMCMC.py:190(__district_size)
288009150  163.650    0.000  675.927    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   12.620    0.001  365.995    0.036 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.050    0.000   78.172    0.004 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.071    0.000   76.311    0.004 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   27.401    0.001   76.164    0.004 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.104    0.000   46.575    0.005 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.671    0.000   16.997    0.002 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.115    0.000    2.613    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.348    0.000    0.978    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.679    0.679 GerrymanderingMCMC.py:1(<module>)
        1    0.001    0.001    0.055    0.055 GerrymanderingMCMC.py:21(__init__)
        1    0.010    0.010    0.055    0.055 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.012    0.012 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
