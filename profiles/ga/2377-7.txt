         5320910188 function calls (5320788149 primitive calls) in 2040.127 seconds
        1   21.433   21.433 2039.370 2039.370 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.607    0.001 2017.859    0.200 GerrymanderingMCMC.py:235(recombination_of_districts)
   306598    2.303    0.000 1050.844    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1226392    1.492    0.000  741.015    0.001 GerrymanderingMCMC.py:190(__district_size)
256021484  150.752    0.000  604.758    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   12.668    0.001  365.208    0.036 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.049    0.000   78.754    0.004 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.069    0.000   76.911    0.004 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   27.617    0.001   76.768    0.004 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.104    0.000   46.647    0.005 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.608    0.000   16.922    0.002 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.110    0.000    2.624    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.375    0.000    1.008    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.692    0.692 GerrymanderingMCMC.py:1(<module>)
        1    0.001    0.001    0.061    0.061 GerrymanderingMCMC.py:21(__init__)
        1    0.012    0.012    0.060    0.060 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.012    0.012 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
