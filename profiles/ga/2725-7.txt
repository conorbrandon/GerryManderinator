         5466970789 function calls (5466848750 primitive calls) in 2078.074 seconds
        1   20.857   20.857 2077.269 2077.269 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.775    0.001 2056.341    0.204 GerrymanderingMCMC.py:235(recombination_of_districts)
   317183    2.407    0.000 1086.941    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1268732    1.580    0.000  764.669    0.001 GerrymanderingMCMC.py:190(__district_size)
269296052  152.369    0.000  624.955    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   12.653    0.001  364.215    0.036 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.049    0.000   78.004    0.004 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.070    0.000   76.242    0.004 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   26.959    0.001   76.098    0.004 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.103    0.000   46.526    0.005 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.571    0.000   16.637    0.002 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.107    0.000    2.526    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.342    0.000    0.971    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.747    0.747 GerrymanderingMCMC.py:1(<module>)
        1    0.001    0.001    0.055    0.055 GerrymanderingMCMC.py:21(__init__)
        1    0.010    0.010    0.054    0.054 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.012    0.012 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
