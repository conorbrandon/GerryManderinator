         5124223247 function calls (5124101208 primitive calls) in 1963.242 seconds
        1   21.518   21.518 1962.441 1962.441 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.268    0.001 1940.848    0.192 GerrymanderingMCMC.py:235(recombination_of_districts)
   290973    2.142    0.000  974.535    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1163892    1.413    0.000  688.036    0.001 GerrymanderingMCMC.py:190(__district_size)
239759440  137.266    0.000  562.135    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   12.299    0.001  360.970    0.036 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.052    0.000   77.848    0.004 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.072    0.000   76.036    0.004 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   27.304    0.001   75.879    0.004 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.105    0.000   46.221    0.005 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.556    0.000   16.571    0.002 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.112    0.000    2.638    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.347    0.000    0.972    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.742    0.742 GerrymanderingMCMC.py:1(<module>)
        1    0.001    0.001    0.055    0.055 GerrymanderingMCMC.py:21(__init__)
        1    0.010    0.010    0.054    0.054 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.012    0.012 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
