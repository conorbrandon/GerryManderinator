         5300918525 function calls (5300796486 primitive calls) in 2006.540 seconds
        1   21.180   21.180 2005.788 2005.788 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.458    0.001 1984.478    0.196 GerrymanderingMCMC.py:235(recombination_of_districts)
   303006    2.173    0.000 1024.024    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1212024    1.502    0.000  722.527    0.001 GerrymanderingMCMC.py:190(__district_size)
254387542  144.755    0.000  592.085    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   12.492    0.001  364.006    0.036 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.049    0.000   77.542    0.004 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.069    0.000   75.711    0.004 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   27.511    0.001   75.558    0.004 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.117    0.000   46.000    0.005 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.622    0.000   16.674    0.002 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.110    0.000    2.603    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.342    0.000    0.989    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.691    0.691 GerrymanderingMCMC.py:1(<module>)
        1    0.001    0.001    0.055    0.055 GerrymanderingMCMC.py:21(__init__)
        1    0.010    0.010    0.055    0.055 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.012    0.012 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
