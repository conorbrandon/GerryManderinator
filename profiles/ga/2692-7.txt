         5431135607 function calls (5431013568 primitive calls) in 2073.064 seconds
        1   21.211   21.211 2072.329 2072.329 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.785    0.001 2051.029    0.203 GerrymanderingMCMC.py:235(recombination_of_districts)
   312335    2.240    0.000 1077.778    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1249340    1.590    0.000  761.305    0.001 GerrymanderingMCMC.py:190(__district_size)
265418764  151.619    0.000  621.051    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   12.629    0.001  366.987    0.036 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.049    0.000   77.821    0.004 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.071    0.000   76.024    0.004 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   27.498    0.001   75.877    0.004 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.109    0.000   46.401    0.005 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.631    0.000   16.679    0.002 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.122    0.000    2.647    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.345    0.000    0.965    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.676    0.676 GerrymanderingMCMC.py:1(<module>)
        1    0.001    0.001    0.054    0.054 GerrymanderingMCMC.py:21(__init__)
        1    0.010    0.010    0.054    0.054 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.012    0.012 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
