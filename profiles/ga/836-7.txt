         5064460326 function calls (5064338287 primitive calls) in 1940.915 seconds
        1   21.003   21.003 1940.178 1940.178 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.109    0.001 1919.118    0.190 GerrymanderingMCMC.py:235(recombination_of_districts)
   282288    2.107    0.000  953.850    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1129152    1.407    0.000  674.012    0.001 GerrymanderingMCMC.py:190(__district_size)
234481192  134.413    0.000  552.437    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   12.461    0.001  362.696    0.036 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.049    0.000   78.211    0.004 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.069    0.000   76.391    0.004 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   27.263    0.001   76.249    0.004 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.105    0.000   46.506    0.005 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.555    0.000   16.648    0.002 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.106    0.000    2.605    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.344    0.000    0.974    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.678    0.678 GerrymanderingMCMC.py:1(<module>)
        1    0.001    0.001    0.055    0.055 GerrymanderingMCMC.py:21(__init__)
        1    0.010    0.010    0.054    0.054 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.012    0.012 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
