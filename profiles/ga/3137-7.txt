         5295596804 function calls (5295474765 primitive calls) in 2018.641 seconds
        1   21.872   21.872 2017.734 2017.734 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.506    0.001 1995.774    0.198 GerrymanderingMCMC.py:235(recombination_of_districts)
   300516    2.238    0.000 1023.321    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1202064    1.488    0.000  719.523    0.001 GerrymanderingMCMC.py:190(__district_size)
253790290  143.980    0.000  589.010    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10101   12.638    0.001  367.791    0.036 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.049    0.000   78.021    0.004 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.075    0.000   76.132    0.004 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   27.541    0.001   75.979    0.004 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.106    0.000   46.274    0.005 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.588    0.000   16.763    0.002 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.146    0.000    2.666    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.366    0.000    0.993    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.848    0.848 GerrymanderingMCMC.py:1(<module>)
        1    0.001    0.001    0.055    0.055 GerrymanderingMCMC.py:21(__init__)
        1    0.010    0.010    0.054    0.054 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.012    0.012 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
