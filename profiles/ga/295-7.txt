         5407778157 function calls (5407656118 primitive calls) in 2062.564 seconds
        1   22.030   22.030 2061.721 2061.721 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.655    0.001 2039.591    0.202 GerrymanderingMCMC.py:235(recombination_of_districts)
   311728    2.257    0.000 1063.211    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1246912    1.525    0.000  749.712    0.001 GerrymanderingMCMC.py:190(__district_size)
263016670  149.810    0.000  611.448    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10101   12.713    0.001  367.975    0.036 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.050    0.000   78.002    0.004 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.077    0.000   76.134    0.004 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   27.444    0.001   75.983    0.004 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.105    0.000   46.553    0.005 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.645    0.000   16.885    0.002 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.112    0.000    2.634    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.347    0.000    1.018    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.782    0.782 GerrymanderingMCMC.py:1(<module>)
        1    0.001    0.001    0.055    0.055 GerrymanderingMCMC.py:21(__init__)
        1    0.010    0.010    0.054    0.054 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.012    0.012 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
