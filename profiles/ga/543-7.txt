         5643136384 function calls (5643014345 primitive calls) in 2150.844 seconds
        1   22.160   22.160 2150.074 2150.074 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    6.004    0.001 2127.842    0.211 GerrymanderingMCMC.py:235(recombination_of_districts)
   329411    2.453    0.000 1151.231    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1317644    1.669    0.000  814.984    0.001 GerrymanderingMCMC.py:190(__district_size)
282737744  166.008    0.000  668.269    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   13.225    0.001  370.564    0.037 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.064    0.000   78.522    0.004 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.068    0.000   76.619    0.004 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   27.957    0.001   76.472    0.004 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.112    0.000   46.858    0.005 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.618    0.000   16.934    0.002 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.121    0.000    2.775    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.368    0.000    1.021    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.725    0.725 GerrymanderingMCMC.py:1(<module>)
        1    0.001    0.001    0.055    0.055 GerrymanderingMCMC.py:21(__init__)
        1    0.011    0.011    0.055    0.055 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.012    0.012 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
