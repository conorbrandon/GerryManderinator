         5447957567 function calls (5447835528 primitive calls) in 2064.300 seconds
        1   21.511   21.511 2063.565 2063.565 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.764    0.001 2041.998    0.202 GerrymanderingMCMC.py:235(recombination_of_districts)
   312770    2.427    0.000 1072.155    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1251080    1.564    0.000  752.618    0.001 GerrymanderingMCMC.py:190(__district_size)
266685896  152.551    0.000  614.327    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   12.428    0.001  364.223    0.036 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.049    0.000   77.159    0.004 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.069    0.000   75.315    0.004 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   27.254    0.001   75.159    0.004 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.117    0.000   46.305    0.005 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.627    0.000   16.790    0.002 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.116    0.000    2.657    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.342    0.000    0.978    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.676    0.676 GerrymanderingMCMC.py:1(<module>)
        1    0.001    0.001    0.054    0.054 GerrymanderingMCMC.py:21(__init__)
        1    0.010    0.010    0.054    0.054 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.012    0.012 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
