         5536195303 function calls (5536073264 primitive calls) in 2104.301 seconds
        1   21.575   21.575 2103.500 2103.500 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.728    0.001 2081.861    0.206 GerrymanderingMCMC.py:235(recombination_of_districts)
   315284    2.348    0.000 1111.273    0.004 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1261136    1.541    0.000  782.285    0.001 GerrymanderingMCMC.py:190(__district_size)
274229544  156.814    0.000  639.964    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   12.709    0.001  365.381    0.036 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.051    0.000   78.351    0.004 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.071    0.000   76.446    0.004 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   27.794    0.001   76.301    0.004 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.103    0.000   46.702    0.005 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.587    0.000   16.852    0.002 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.109    0.000    2.663    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.366    0.000    1.012    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.740    0.740 GerrymanderingMCMC.py:1(<module>)
        1    0.001    0.001    0.055    0.055 GerrymanderingMCMC.py:21(__init__)
        1    0.010    0.010    0.054    0.054 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.012    0.012 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
