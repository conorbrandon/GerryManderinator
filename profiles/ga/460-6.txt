         5500768909 function calls (5500646870 primitive calls) in 3182.279 seconds
        1   23.588   23.588 3181.176 3181.176 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    8.908    0.001 3157.501    0.313 GerrymanderingMCMC.py:235(recombination_of_districts)
   318484    3.600    0.000 1709.993    0.005 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1273936    2.436    0.000 1206.336    0.001 GerrymanderingMCMC.py:190(__district_size)
271223100  240.294    0.000  987.157    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   18.255    0.002  562.935    0.056 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.059    0.000  116.629    0.006 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.086    0.000  114.116    0.006 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   38.502    0.002  113.937    0.006 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.143    0.000   69.934    0.007 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    3.877    0.000   25.954    0.003 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.138    0.000    3.707    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.505    0.000    1.540    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    1.010    1.010 GerrymanderingMCMC.py:1(<module>)
        1    0.001    0.001    0.087    0.087 GerrymanderingMCMC.py:21(__init__)
        1    0.016    0.016    0.086    0.086 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.019    0.019 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
