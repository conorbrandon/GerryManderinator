         5371690983 function calls (5371568944 primitive calls) in 2047.951 seconds
        1   21.082   21.082 2047.148 2047.148 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.675    0.001 2025.957    0.201 GerrymanderingMCMC.py:235(recombination_of_districts)
   301614    2.297    0.000 1055.647    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1206456    1.472    0.000  742.430    0.001 GerrymanderingMCMC.py:190(__district_size)
260167978  146.438    0.000  606.796    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   12.536    0.001  366.575    0.036 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.050    0.000   77.860    0.004 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.067    0.000   76.043    0.004 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   26.987    0.001   75.900    0.004 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.116    0.000   46.341    0.005 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.561    0.000   16.994    0.002 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.112    0.000    2.675    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.361    0.000    1.002    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.744    0.744 GerrymanderingMCMC.py:1(<module>)
        1    0.001    0.001    0.055    0.055 GerrymanderingMCMC.py:21(__init__)
        1    0.010    0.010    0.055    0.055 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.012    0.012 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
