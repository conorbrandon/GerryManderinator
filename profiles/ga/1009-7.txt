         5084646034 function calls (5084523995 primitive calls) in 1943.820 seconds
        1   21.154   21.154 1943.060 1943.060 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.110    0.001 1921.810    0.190 GerrymanderingMCMC.py:235(recombination_of_districts)
   281264    2.029    0.000  953.799    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1125056    1.411    0.000  671.505    0.001 GerrymanderingMCMC.py:190(__district_size)
235846756  133.641    0.000  549.919    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   12.419    0.001  365.172    0.036 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.048    0.000   78.180    0.004 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.067    0.000   76.365    0.004 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   27.297    0.001   76.210    0.004 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.102    0.000   46.548    0.005 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.594    0.000   16.746    0.002 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.107    0.000    2.559    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.343    0.000    1.001    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.701    0.701 GerrymanderingMCMC.py:1(<module>)
        1    0.001    0.001    0.055    0.055 GerrymanderingMCMC.py:21(__init__)
        1    0.010    0.010    0.054    0.054 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.012    0.012 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
