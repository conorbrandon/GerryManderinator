         5160669319 function calls (5160547280 primitive calls) in 1971.262 seconds
        1   21.480   21.480 1970.366 1970.366 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.202    0.001 1948.827    0.193 GerrymanderingMCMC.py:235(recombination_of_districts)
   288785    2.105    0.000  983.638    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1155140    1.423    0.000  695.686    0.001 GerrymanderingMCMC.py:190(__district_size)
242469648  140.151    0.000  568.686    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   12.707    0.001  363.576    0.036 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.049    0.000   77.558    0.004 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.072    0.000   75.711    0.004 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   27.123    0.001   75.560    0.004 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.106    0.000   46.277    0.005 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.561    0.000   16.593    0.002 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.134    0.000    2.737    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.345    0.000    0.988    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.837    0.837 GerrymanderingMCMC.py:1(<module>)
        1    0.001    0.001    0.055    0.055 GerrymanderingMCMC.py:21(__init__)
        1    0.010    0.010    0.054    0.054 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.012    0.012 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
