         5541362142 function calls (5541240103 primitive calls) in 2114.832 seconds
        1   21.950   21.950 2114.085 2114.085 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.886    0.001 2092.051    0.207 GerrymanderingMCMC.py:235(recombination_of_districts)
   327034    2.365    0.000 1122.472    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1308136    1.568    0.000  795.780    0.001 GerrymanderingMCMC.py:190(__district_size)
275129738  157.642    0.000  651.327    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   12.671    0.001  365.600    0.036 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.050    0.000   78.853    0.004 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.071    0.000   77.011    0.004 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   27.355    0.001   76.861    0.004 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.105    0.000   46.931    0.005 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.561    0.000   16.619    0.002 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.174    0.000    2.713    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.344    0.000    1.002    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.688    0.688 GerrymanderingMCMC.py:1(<module>)
        1    0.001    0.001    0.055    0.055 GerrymanderingMCMC.py:21(__init__)
        1    0.010    0.010    0.054    0.054 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.012    0.012 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
