         5680897778 function calls (5680775739 primitive calls) in 2158.882 seconds
        1   21.957   21.957 2157.908 2157.908 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    6.149    0.001 2135.887    0.211 GerrymanderingMCMC.py:235(recombination_of_districts)
   330460    2.384    0.000 1163.018    0.004 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1321840    1.650    0.000  819.441    0.001 GerrymanderingMCMC.py:190(__district_size)
286616314  166.068    0.000  672.111    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   12.884    0.001  368.936    0.037 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.049    0.000   78.812    0.004 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.069    0.000   76.950    0.004 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   28.022    0.001   76.807    0.004 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.109    0.000   46.966    0.005 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.729    0.000   17.020    0.002 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.117    0.000    2.633    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.370    0.000    1.017    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.913    0.913 GerrymanderingMCMC.py:1(<module>)
        1    0.001    0.001    0.055    0.055 GerrymanderingMCMC.py:21(__init__)
        1    0.010    0.010    0.054    0.054 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.012    0.012 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
