         5519919037 function calls (5519796998 primitive calls) in 2113.619 seconds
        1   22.611   22.611 2112.839 2112.839 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.853    0.001 2090.171    0.207 GerrymanderingMCMC.py:235(recombination_of_districts)
   321074    2.294    0.000 1106.426    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1284296    1.593    0.000  781.823    0.001 GerrymanderingMCMC.py:190(__district_size)
272593880  156.165    0.000  637.984    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   12.762    0.001  369.612    0.037 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.051    0.000   78.738    0.004 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.072    0.000   76.921    0.004 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   27.565    0.001   76.772    0.004 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.114    0.000   46.818    0.005 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.677    0.000   16.981    0.002 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.113    0.000    2.601    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.360    0.000    1.033    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.720    0.720 GerrymanderingMCMC.py:1(<module>)
        1    0.001    0.001    0.055    0.055 GerrymanderingMCMC.py:21(__init__)
        1    0.010    0.010    0.054    0.054 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.012    0.012 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
