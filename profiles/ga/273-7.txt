         5139891832 function calls (5139769793 primitive calls) in 1941.569 seconds
        1   21.005   21.005 1940.740 1940.740 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.272    0.001 1919.681    0.190 GerrymanderingMCMC.py:235(recombination_of_districts)
   291901    2.114    0.000  970.737    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1167604    1.476    0.000  685.077    0.001 GerrymanderingMCMC.py:190(__district_size)
241223106  135.275    0.000  558.932    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   12.503    0.001  358.861    0.036 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.048    0.000   76.709    0.004 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.068    0.000   74.920    0.004 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   26.560    0.001   74.776    0.004 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.103    0.000   45.658    0.005 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.497    0.000   16.348    0.002 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.112    0.000    2.564    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.338    0.000    0.964    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.769    0.769 GerrymanderingMCMC.py:1(<module>)
        1    0.001    0.001    0.055    0.055 GerrymanderingMCMC.py:21(__init__)
        1    0.010    0.010    0.054    0.054 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.012    0.012 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
