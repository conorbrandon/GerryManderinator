         5165331495 function calls (5165209456 primitive calls) in 1982.245 seconds
        1   23.046   23.046 1981.369 1981.369 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.314    0.001 1958.261    0.194 GerrymanderingMCMC.py:235(recombination_of_districts)
   290888    2.147    0.000  985.883    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1163552    1.434    0.000  695.380    0.001 GerrymanderingMCMC.py:190(__district_size)
243225876  138.950    0.000  570.290    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   12.698    0.001  364.231    0.036 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.051    0.000   78.285    0.004 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.091    0.000   76.412    0.004 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   27.544    0.001   76.243    0.004 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.106    0.000   46.506    0.005 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.683    0.000   16.762    0.002 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.157    0.000    2.701    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.360    0.000    1.003    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.750    0.750 GerrymanderingMCMC.py:1(<module>)
        1    0.001    0.001    0.121    0.121 GerrymanderingMCMC.py:21(__init__)
        1    0.010    0.010    0.120    0.120 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.025    0.025 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
