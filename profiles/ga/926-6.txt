         5450870803 function calls (5450748764 primitive calls) in 3251.664 seconds
        1   23.566   23.566 3250.539 3250.539 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    8.997    0.001 3226.891    0.319 GerrymanderingMCMC.py:235(recombination_of_districts)
   310587    3.590    0.000 1732.222    0.006 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1242348    2.497    0.000 1222.821    0.001 GerrymanderingMCMC.py:190(__district_size)
267038990  247.159    0.000 1000.028    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   19.240    0.002  580.476    0.057 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.068    0.000  118.692    0.006 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.094    0.000  116.089    0.006 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   39.739    0.002  115.900    0.006 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.147    0.000   71.291    0.007 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    3.979    0.000   26.632    0.003 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.140    0.000    3.823    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.551    0.000    1.544    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    1.033    1.033 GerrymanderingMCMC.py:1(<module>)
        1    0.001    0.001    0.087    0.087 GerrymanderingMCMC.py:21(__init__)
        1    0.016    0.016    0.086    0.086 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.019    0.019 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
