         5515832225 function calls (5515710186 primitive calls) in 2103.906 seconds
        1   21.309   21.309 2103.109 2103.109 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.822    0.001 2081.737    0.206 GerrymanderingMCMC.py:235(recombination_of_districts)
   319292    2.338    0.000 1110.028    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1277168    1.554    0.000  783.268    0.001 GerrymanderingMCMC.py:190(__district_size)
272634360  156.878    0.000  640.922    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   12.486    0.001  365.448    0.036 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.050    0.000   78.758    0.004 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.082    0.000   76.932    0.004 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   27.424    0.001   76.758    0.004 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.119    0.000   46.797    0.005 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.611    0.000   16.844    0.002 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.112    0.000    2.689    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.352    0.000    1.002    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.740    0.740 GerrymanderingMCMC.py:1(<module>)
        1    0.001    0.001    0.055    0.055 GerrymanderingMCMC.py:21(__init__)
        1    0.010    0.010    0.054    0.054 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.012    0.012 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
