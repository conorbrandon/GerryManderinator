         5333806491 function calls (5333684452 primitive calls) in 2026.795 seconds
        1   21.582   21.582 2026.050 2026.050 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.525    0.001 2004.412    0.198 GerrymanderingMCMC.py:235(recombination_of_districts)
   304633    2.242    0.000 1041.223    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1218532    1.501    0.000  733.869    0.001 GerrymanderingMCMC.py:190(__district_size)
257602766  149.647    0.000  598.986    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   12.891    0.001  364.342    0.036 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.048    0.000   77.459    0.004 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.068    0.000   75.643    0.004 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   26.747    0.001   75.498    0.004 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.105    0.000   46.262    0.005 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.550    0.000   16.607    0.002 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.110    0.000    2.565    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.348    0.000    0.977    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.687    0.687 GerrymanderingMCMC.py:1(<module>)
        1    0.001    0.001    0.055    0.055 GerrymanderingMCMC.py:21(__init__)
        1    0.010    0.010    0.054    0.054 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.012    0.012 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
