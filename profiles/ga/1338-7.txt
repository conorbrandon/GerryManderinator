         5608399775 function calls (5608277736 primitive calls) in 2138.436 seconds
        1   22.060   22.060 2137.348 2137.348 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.982    0.001 2115.216    0.209 GerrymanderingMCMC.py:235(recombination_of_districts)
   329421    2.407    0.000 1144.735    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1317684    1.701    0.000  804.794    0.001 GerrymanderingMCMC.py:190(__district_size)
281385312  163.980    0.000  655.023    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   12.387    0.001  364.509    0.036 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.050    0.000   78.395    0.004 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.071    0.000   76.537    0.004 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   27.783    0.001   76.391    0.004 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.105    0.000   46.660    0.005 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.583    0.000   16.732    0.002 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.110    0.000    2.623    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.350    0.000    1.013    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.988    0.988 GerrymanderingMCMC.py:1(<module>)
        1    0.001    0.001    0.095    0.095 GerrymanderingMCMC.py:21(__init__)
        1    0.036    0.036    0.094    0.094 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.012    0.012 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
