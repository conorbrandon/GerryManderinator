         5485115775 function calls (5484993736 primitive calls) in 2082.970 seconds
        1   20.961   20.961 2082.223 2082.223 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.651    0.001 2061.167    0.204 GerrymanderingMCMC.py:235(recombination_of_districts)
   311170    2.331    0.000 1095.007    0.004 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1244680    1.482    0.000  772.585    0.001 GerrymanderingMCMC.py:190(__district_size)
269743348  155.178    0.000  631.729    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   12.642    0.001  367.030    0.036 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.049    0.000   77.918    0.004 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.067    0.000   76.076    0.004 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   27.439    0.001   75.935    0.004 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.105    0.000   46.598    0.005 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.635    0.000   16.910    0.002 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.115    0.000    2.577    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.345    0.000    0.985    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.685    0.685 GerrymanderingMCMC.py:1(<module>)
        1    0.001    0.001    0.055    0.055 GerrymanderingMCMC.py:21(__init__)
        1    0.010    0.010    0.054    0.054 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.012    0.012 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
