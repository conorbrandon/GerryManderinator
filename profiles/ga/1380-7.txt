         5693215539 function calls (5693093500 primitive calls) in 2171.453 seconds
        1   21.442   21.442 2170.692 2170.692 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    6.170    0.001 2149.190    0.213 GerrymanderingMCMC.py:235(recombination_of_districts)
   335700    2.479    0.000 1174.920    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1342800    1.812    0.000  829.571    0.001 GerrymanderingMCMC.py:190(__district_size)
287355560  167.140    0.000  677.504    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   12.584    0.001  370.535    0.037 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.049    0.000   77.985    0.004 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.083    0.000   76.115    0.004 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   26.901    0.001   75.945    0.004 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.118    0.000   46.664    0.005 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.664    0.000   17.091    0.002 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.109    0.000    2.702    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.353    0.000    1.006    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.701    0.701 GerrymanderingMCMC.py:1(<module>)
        1    0.001    0.001    0.055    0.055 GerrymanderingMCMC.py:21(__init__)
        1    0.010    0.010    0.055    0.055 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.012    0.012 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
