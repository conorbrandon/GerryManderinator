         5600849463 function calls (5600727424 primitive calls) in 2140.695 seconds
        1   21.642   21.642 2139.963 2139.963 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.937    0.001 2118.220    0.210 GerrymanderingMCMC.py:235(recombination_of_districts)
   319203    2.395    0.000 1141.317    0.004 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1276812    1.554    0.000  806.578    0.001 GerrymanderingMCMC.py:190(__district_size)
279392632  161.340    0.000  659.251    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   12.773    0.001  371.428    0.037 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.051    0.000   78.166    0.004 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.069    0.000   76.339    0.004 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   27.637    0.001   76.194    0.004 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.104    0.000   46.513    0.005 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.606    0.000   16.882    0.002 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.112    0.000    2.686    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.376    0.000    1.012    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.675    0.675 GerrymanderingMCMC.py:1(<module>)
        1    0.001    0.001    0.055    0.055 GerrymanderingMCMC.py:21(__init__)
        1    0.010    0.010    0.054    0.054 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.012    0.012 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
