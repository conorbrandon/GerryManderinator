         5351880102 function calls (5351758063 primitive calls) in 2044.939 seconds
        1   21.668   21.668 2044.053 2044.053 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.644    0.001 2022.328    0.200 GerrymanderingMCMC.py:235(recombination_of_districts)
   303952    2.282    0.000 1051.488    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1215808    1.526    0.000  743.531    0.001 GerrymanderingMCMC.py:190(__district_size)
257753992  149.014    0.000  606.779    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10101   12.627    0.001  368.517    0.036 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.053    0.000   77.635    0.004 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.068    0.000   75.813    0.004 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   27.291    0.001   75.670    0.004 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.105    0.000   46.126    0.005 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.611    0.000   16.939    0.002 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.124    0.000    2.712    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.359    0.000    0.992    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.799    0.799 GerrymanderingMCMC.py:1(<module>)
        1    0.001    0.001    0.082    0.082 GerrymanderingMCMC.py:21(__init__)
        1    0.023    0.023    0.081    0.081 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.025    0.025 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
