         5368970954 function calls (5368848915 primitive calls) in 2050.819 seconds
        1   21.512   21.512 2050.014 2050.014 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.636    0.001 2028.424    0.201 GerrymanderingMCMC.py:235(recombination_of_districts)
   304492    2.286    0.000 1050.991    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1217968    1.492    0.000  740.491    0.001 GerrymanderingMCMC.py:190(__district_size)
259643292  150.069    0.000  607.711    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   12.699    0.001  370.786    0.037 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.052    0.000   78.614    0.004 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.072    0.000   76.761    0.004 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   27.785    0.001   76.608    0.004 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.107    0.000   46.764    0.005 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.649    0.000   16.859    0.002 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.116    0.000    2.695    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.372    0.000    1.018    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.746    0.746 GerrymanderingMCMC.py:1(<module>)
        1    0.001    0.001    0.055    0.055 GerrymanderingMCMC.py:21(__init__)
        1    0.010    0.010    0.055    0.055 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.012    0.012 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
