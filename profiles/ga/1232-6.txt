         5548600500 function calls (5548478461 primitive calls) in 3374.472 seconds
        1   23.472   23.472 3373.361 3373.361 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    9.492    0.001 3349.803    0.332 GerrymanderingMCMC.py:235(recombination_of_districts)
   322740    3.780    0.000 1833.294    0.006 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1290960    2.591    0.000 1296.116    0.001 GerrymanderingMCMC.py:190(__district_size)
275397368  255.527    0.000 1062.806    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   19.412    0.002  586.763    0.058 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.060    0.000  122.046    0.006 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.088    0.000  119.439    0.006 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   41.166    0.002  119.243    0.006 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.148    0.000   73.302    0.007 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    3.960    0.000   27.410    0.003 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.161    0.000    3.839    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.554    0.000    1.605    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    1.026    1.026 GerrymanderingMCMC.py:1(<module>)
        1    0.001    0.001    0.087    0.087 GerrymanderingMCMC.py:21(__init__)
        1    0.017    0.017    0.086    0.086 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.019    0.019 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
