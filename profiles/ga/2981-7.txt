         5684112945 function calls (5683990906 primitive calls) in 2146.770 seconds
        1   21.136   21.136 2145.957 2145.957 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    6.126    0.001 2124.762    0.210 GerrymanderingMCMC.py:235(recombination_of_districts)
   328922    2.402    0.000 1157.290    0.004 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1315688    1.602    0.000  818.595    0.001 GerrymanderingMCMC.py:190(__district_size)
286639526  164.247    0.000  668.740    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   12.566    0.001  369.164    0.037 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.051    0.000   77.519    0.004 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.071    0.000   75.637    0.004 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   27.211    0.001   75.488    0.004 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.120    0.000   46.034    0.005 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.640    0.000   16.948    0.002 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.136    0.000    2.765    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.342    0.000    0.987    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.754    0.754 GerrymanderingMCMC.py:1(<module>)
        1    0.001    0.001    0.054    0.054 GerrymanderingMCMC.py:21(__init__)
        1    0.010    0.010    0.054    0.054 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.012    0.012 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
