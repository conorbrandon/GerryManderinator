         5567626554 function calls (5567504515 primitive calls) in 2136.491 seconds
        1   22.599   22.599 2135.684 2135.684 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.933    0.001 2112.999    0.209 GerrymanderingMCMC.py:235(recombination_of_districts)
   329383    2.415    0.000 1139.204    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1317532    1.635    0.000  800.319    0.001 GerrymanderingMCMC.py:190(__district_size)
277695916  160.043    0.000  653.361    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   12.530    0.001  368.208    0.036 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.051    0.000   79.025    0.004 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.069    0.000   77.134    0.004 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   27.876    0.001   76.987    0.004 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.105    0.000   46.792    0.005 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.674    0.000   17.047    0.002 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.115    0.000    2.678    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.363    0.000    0.996    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.747    0.747 GerrymanderingMCMC.py:1(<module>)
        1    0.001    0.001    0.055    0.055 GerrymanderingMCMC.py:21(__init__)
        1    0.010    0.010    0.055    0.055 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.012    0.012 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
