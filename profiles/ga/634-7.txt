         5132628812 function calls (5132506773 primitive calls) in 1945.667 seconds
        1   20.992   20.992 1944.866 1944.866 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.211    0.001 1923.739    0.190 GerrymanderingMCMC.py:235(recombination_of_districts)
   285753    2.116    0.000  963.264    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1143012    1.411    0.000  676.131    0.001 GerrymanderingMCMC.py:190(__district_size)
239413214  136.165    0.000  551.930    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   12.408    0.001  366.170    0.036 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.049    0.000   78.027    0.004 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.066    0.000   76.230    0.004 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   27.254    0.001   76.092    0.004 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.104    0.000   46.616    0.005 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.635    0.000   16.830    0.002 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.111    0.000    2.620    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.367    0.000    1.002    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.742    0.742 GerrymanderingMCMC.py:1(<module>)
        1    0.001    0.001    0.055    0.055 GerrymanderingMCMC.py:21(__init__)
        1    0.010    0.010    0.054    0.054 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.012    0.012 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
