         5692467976 function calls (5692345937 primitive calls) in 2176.615 seconds
        1   22.314   22.314 2175.515 2175.515 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    6.101    0.001 2153.126    0.213 GerrymanderingMCMC.py:235(recombination_of_districts)
   336706    2.474    0.000 1171.539    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1346824    1.635    0.000  827.319    0.001 GerrymanderingMCMC.py:190(__district_size)
287302262  164.300    0.000  678.264    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   12.950    0.001  370.156    0.037 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.051    0.000   79.137    0.004 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.070    0.000   77.266    0.004 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   27.930    0.001   77.120    0.004 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.120    0.000   47.239    0.005 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.556    0.000   16.920    0.002 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.137    0.000    2.646    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.372    0.000    1.055    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    1.053    1.053 GerrymanderingMCMC.py:1(<module>)
        1    0.001    0.001    0.055    0.055 GerrymanderingMCMC.py:21(__init__)
        1    0.010    0.010    0.054    0.054 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.012    0.012 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
