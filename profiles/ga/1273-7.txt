         5177178712 function calls (5177056673 primitive calls) in 1976.305 seconds
        1   21.205   21.205 1975.506 1975.506 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.253    0.001 1954.220    0.193 GerrymanderingMCMC.py:235(recombination_of_districts)
   292001    2.226    0.000  997.724    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1168004    1.441    0.000  706.630    0.001 GerrymanderingMCMC.py:190(__district_size)
243874900  141.533    0.000  577.272    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   12.498    0.001  362.277    0.036 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.048    0.000   78.007    0.004 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.068    0.000   76.215    0.004 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   27.423    0.001   76.073    0.004 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.106    0.000   46.490    0.005 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.557    0.000   16.592    0.002 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.121    0.000    2.635    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.349    0.000    0.994    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.737    0.737 GerrymanderingMCMC.py:1(<module>)
        1    0.001    0.001    0.055    0.055 GerrymanderingMCMC.py:21(__init__)
        1    0.010    0.010    0.055    0.055 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.012    0.012 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
