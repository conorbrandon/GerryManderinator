         5134479865 function calls (5134357826 primitive calls) in 1967.580 seconds
        1   22.439   22.439 1966.726 1966.726 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.249    0.001 1944.164    0.192 GerrymanderingMCMC.py:235(recombination_of_districts)
   284540    2.122    0.000  969.137    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1138160    1.405    0.000  682.231    0.001 GerrymanderingMCMC.py:190(__district_size)
239248892  135.323    0.000  557.213    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   12.985    0.001  368.815    0.037 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.051    0.000   78.029    0.004 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.072    0.000   76.157    0.004 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   27.411    0.001   76.007    0.004 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.114    0.000   46.331    0.005 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.600    0.000   16.935    0.002 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.117    0.000    2.721    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.360    0.000    1.008    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.799    0.799 GerrymanderingMCMC.py:1(<module>)
        1    0.001    0.001    0.055    0.055 GerrymanderingMCMC.py:21(__init__)
        1    0.010    0.010    0.054    0.054 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.012    0.012 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
