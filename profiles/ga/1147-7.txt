         5366219666 function calls (5366097627 primitive calls) in 2054.398 seconds
        1   22.995   22.995 2053.584 2053.584 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.671    0.001 2030.490    0.201 GerrymanderingMCMC.py:235(recombination_of_districts)
   307420    2.330    0.000 1053.087    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1229680    1.515    0.000  742.170    0.001 GerrymanderingMCMC.py:190(__district_size)
260361686  149.649    0.000  608.376    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   12.676    0.001  365.270    0.036 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.053    0.000   78.999    0.004 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.072    0.000   77.122    0.004 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   28.041    0.001   76.967    0.004 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.110    0.000   46.880    0.005 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.597    0.000   16.614    0.002 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.121    0.000    2.743    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.347    0.000    0.986    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.754    0.754 GerrymanderingMCMC.py:1(<module>)
        1    0.001    0.001    0.055    0.055 GerrymanderingMCMC.py:21(__init__)
        1    0.010    0.010    0.055    0.055 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.012    0.012 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
