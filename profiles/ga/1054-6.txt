         5371800245 function calls (5371678206 primitive calls) in 3228.966 seconds
        1   24.059   24.059 3227.877 3227.877 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    8.840    0.001 3203.733    0.317 GerrymanderingMCMC.py:235(recombination_of_districts)
   306671    3.534    0.000 1704.208    0.006 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1226684    2.444    0.000 1199.637    0.001 GerrymanderingMCMC.py:190(__district_size)
260053796  241.007    0.000  981.327    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   19.015    0.002  580.828    0.058 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.072    0.000  118.491    0.006 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.089    0.000  115.943    0.006 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   39.232    0.002  115.755    0.006 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.151    0.000   71.692    0.007 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    3.944    0.000   27.035    0.003 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.151    0.000    3.936    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.546    0.000    1.577    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    1.000    1.000 GerrymanderingMCMC.py:1(<module>)
        1    0.001    0.001    0.083    0.083 GerrymanderingMCMC.py:21(__init__)
        1    0.015    0.015    0.082    0.082 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.018    0.018 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
