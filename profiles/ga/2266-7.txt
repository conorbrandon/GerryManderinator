         5068707432 function calls (5068585393 primitive calls) in 1947.406 seconds
        1   21.005   21.005 1946.609 1946.609 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.070    0.001 1925.547    0.191 GerrymanderingMCMC.py:235(recombination_of_districts)
   281024    2.245    0.000  957.829    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1124096    1.401    0.000  676.854    0.001 GerrymanderingMCMC.py:190(__district_size)
234661952  136.584    0.000  554.616    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   12.330    0.001  363.083    0.036 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.050    0.000   78.076    0.004 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.067    0.000   76.205    0.004 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   27.368    0.001   76.065    0.004 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.107    0.000   46.486    0.005 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.561    0.000   16.706    0.002 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.107    0.000    2.537    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.363    0.000    1.003    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.738    0.738 GerrymanderingMCMC.py:1(<module>)
        1    0.001    0.001    0.056    0.056 GerrymanderingMCMC.py:21(__init__)
        1    0.010    0.010    0.055    0.055 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.012    0.012 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
