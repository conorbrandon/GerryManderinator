         5639250186 function calls (5639128147 primitive calls) in 2144.900 seconds
        1   22.235   22.235 2144.090 2144.090 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.980    0.001 2121.798    0.210 GerrymanderingMCMC.py:235(recombination_of_districts)
   329341    2.444    0.000 1147.139    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1317364    1.588    0.000  807.157    0.001 GerrymanderingMCMC.py:190(__district_size)
283260328  160.742    0.000  661.672    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   12.572    0.001  365.796    0.036 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.052    0.000   78.453    0.004 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.072    0.000   76.600    0.004 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   27.634    0.001   76.447    0.004 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.120    0.000   46.732    0.005 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.573    0.000   16.817    0.002 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.119    0.000    2.703    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.351    0.000    1.032    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.750    0.750 GerrymanderingMCMC.py:1(<module>)
        1    0.001    0.001    0.056    0.056 GerrymanderingMCMC.py:21(__init__)
        1    0.010    0.010    0.055    0.055 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.012    0.012 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
