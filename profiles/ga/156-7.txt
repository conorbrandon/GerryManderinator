         5425920367 function calls (5425798328 primitive calls) in 2048.406 seconds
        1   21.092   21.092 2047.650 2047.650 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.750    0.001 2026.483    0.201 GerrymanderingMCMC.py:235(recombination_of_districts)
   316403    2.327    0.000 1064.712    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1265612    1.515    0.000  749.873    0.001 GerrymanderingMCMC.py:190(__district_size)
265246856  151.996    0.000  613.665    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   12.449    0.001  361.821    0.036 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.047    0.000   77.688    0.004 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.068    0.000   75.913    0.004 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   27.091    0.001   75.775    0.004 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.107    0.000   46.314    0.005 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.573    0.000   16.674    0.002 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.118    0.000    2.565    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.375    0.000    1.001    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.697    0.697 GerrymanderingMCMC.py:1(<module>)
        1    0.001    0.001    0.055    0.055 GerrymanderingMCMC.py:21(__init__)
        1    0.010    0.010    0.054    0.054 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.012    0.012 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
