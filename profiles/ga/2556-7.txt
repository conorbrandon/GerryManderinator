         5502200938 function calls (5502078899 primitive calls) in 2112.954 seconds
        1   22.039   22.039 2112.102 2112.102 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.836    0.001 2089.980    0.207 GerrymanderingMCMC.py:235(recombination_of_districts)
   315415    2.333    0.000 1104.365    0.004 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1261660    1.545    0.000  781.896    0.001 GerrymanderingMCMC.py:190(__district_size)
270592868  156.211    0.000  637.991    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   12.890    0.001  372.014    0.037 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.053    0.000   78.711    0.004 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.084    0.000   76.833    0.004 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   27.537    0.001   76.670    0.004 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.111    0.000   46.995    0.005 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.713    0.000   17.099    0.002 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.116    0.000    2.681    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.348    0.000    0.997    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.792    0.792 GerrymanderingMCMC.py:1(<module>)
        1    0.001    0.001    0.055    0.055 GerrymanderingMCMC.py:21(__init__)
        1    0.010    0.010    0.054    0.054 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.012    0.012 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
