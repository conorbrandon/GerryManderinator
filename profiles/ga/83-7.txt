         5180786807 function calls (5180664768 primitive calls) in 2006.614 seconds
        1   21.843   21.843 2005.793 2005.793 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.327    0.001 1983.889    0.196 GerrymanderingMCMC.py:235(recombination_of_districts)
   291536    2.108    0.000 1017.749    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1166144    1.441    0.000  727.184    0.001 GerrymanderingMCMC.py:190(__district_size)
243948054  143.953    0.000  598.742    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   12.575    0.001  364.973    0.036 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.051    0.000   78.680    0.004 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.070    0.000   76.831    0.004 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   27.600    0.001   76.685    0.004 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.108    0.000   46.797    0.005 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.644    0.000   17.398    0.002 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.124    0.000    2.627    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.347    0.000    0.986    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.762    0.762 GerrymanderingMCMC.py:1(<module>)
        1    0.001    0.001    0.055    0.055 GerrymanderingMCMC.py:21(__init__)
        1    0.010    0.010    0.054    0.054 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.012    0.012 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
