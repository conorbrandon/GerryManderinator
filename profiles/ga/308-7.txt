         5447719504 function calls (5447597465 primitive calls) in 2082.377 seconds
        1   21.685   21.685 2081.564 2081.564 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.766    0.001 2059.823    0.204 GerrymanderingMCMC.py:235(recombination_of_districts)
   311458    2.286    0.000 1090.331    0.004 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1245832    1.553    0.000  770.824    0.001 GerrymanderingMCMC.py:190(__district_size)
266978432  157.018    0.000  631.193    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   12.682    0.001  366.461    0.036 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.051    0.000   77.179    0.004 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.069    0.000   75.379    0.004 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   27.428    0.001   75.236    0.004 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.122    0.000   46.276    0.005 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.613    0.000   16.869    0.002 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.111    0.000    2.684    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.361    0.000    1.031    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.754    0.754 GerrymanderingMCMC.py:1(<module>)
        1    0.001    0.001    0.055    0.055 GerrymanderingMCMC.py:21(__init__)
        1    0.010    0.010    0.054    0.054 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.012    0.012 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
