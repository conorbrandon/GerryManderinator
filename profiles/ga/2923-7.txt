         5242584933 function calls (5242462894 primitive calls) in 2014.704 seconds
        1   21.391   21.391 2013.903 2013.903 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.453    0.001 1992.456    0.197 GerrymanderingMCMC.py:235(recombination_of_districts)
   296068    2.166    0.000 1023.861    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1184272    1.450    0.000  726.318    0.001 GerrymanderingMCMC.py:190(__district_size)
249525244  144.589    0.000  595.554    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   12.509    0.001  364.700    0.036 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.051    0.000   78.729    0.004 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.068    0.000   76.887    0.004 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   27.452    0.001   76.743    0.004 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.104    0.000   46.783    0.005 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.541    0.000   16.702    0.002 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.108    0.000    2.604    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.356    0.000    0.997    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.742    0.742 GerrymanderingMCMC.py:1(<module>)
        1    0.001    0.001    0.055    0.055 GerrymanderingMCMC.py:21(__init__)
        1    0.010    0.010    0.054    0.054 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.012    0.012 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
