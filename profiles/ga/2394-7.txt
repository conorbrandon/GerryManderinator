         5519048796 function calls (5518926757 primitive calls) in 2105.587 seconds
        1   21.624   21.624 2104.800 2104.800 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.888    0.001 2083.103    0.206 GerrymanderingMCMC.py:235(recombination_of_districts)
   320492    2.391    0.000 1116.952    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1281968    1.576    0.000  786.011    0.001 GerrymanderingMCMC.py:190(__district_size)
273171106  157.538    0.000  640.585    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   12.479    0.001  364.621    0.036 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.053    0.000   77.666    0.004 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.071    0.000   75.862    0.004 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   27.264    0.001   75.714    0.004 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.105    0.000   46.195    0.005 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.563    0.000   16.812    0.002 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.115    0.000    2.679    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.345    0.000    0.969    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.736    0.736 GerrymanderingMCMC.py:1(<module>)
        1    0.001    0.001    0.055    0.055 GerrymanderingMCMC.py:21(__init__)
        1    0.010    0.010    0.055    0.055 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.012    0.012 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
