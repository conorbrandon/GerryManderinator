         5510711986 function calls (5510589947 primitive calls) in 3306.652 seconds
        1   23.560   23.560 3305.530 3305.530 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    9.148    0.001 3281.889    0.325 GerrymanderingMCMC.py:235(recombination_of_districts)
   314619    3.692    0.000 1770.926    0.006 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1258476    2.510    0.000 1250.597    0.001 GerrymanderingMCMC.py:190(__district_size)
272035676  248.819    0.000 1022.013    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   18.957    0.002  581.570    0.058 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.063    0.000  119.845    0.006 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.098    0.000  117.328    0.006 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   40.068    0.002  117.120    0.006 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.147    0.000   71.843    0.007 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    4.030    0.000   26.904    0.003 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.168    0.000    3.766    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.526    0.000    1.542    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    1.032    1.032 GerrymanderingMCMC.py:1(<module>)
        1    0.001    0.001    0.088    0.088 GerrymanderingMCMC.py:21(__init__)
        1    0.016    0.016    0.087    0.087 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.019    0.019 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
