         5614155449 function calls (5614033410 primitive calls) in 2100.262 seconds
        1   20.708   20.708 2098.797 2098.797 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    6.001    0.001 2078.024    0.206 GerrymanderingMCMC.py:235(recombination_of_districts)
   326291    2.332    0.000 1125.078    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1305164    1.620    0.000  794.609    0.001 GerrymanderingMCMC.py:190(__district_size)
280966506  160.993    0.000  650.130    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   12.472    0.001  363.248    0.036 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.050    0.000   76.589    0.004 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.072    0.000   74.780    0.004 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   26.867    0.001   74.631    0.004 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.105    0.000   45.649    0.005 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.631    0.000   16.633    0.002 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.119    0.000    2.644    0.000 GerrymanderingMCMC.py:157(__random_district_label)
        1    0.000    0.000    1.406    1.406 GerrymanderingMCMC.py:1(<module>)
    10100    0.337    0.000    0.957    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.001    0.001    0.053    0.053 GerrymanderingMCMC.py:21(__init__)
        1    0.010    0.010    0.052    0.052 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.012    0.012 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
