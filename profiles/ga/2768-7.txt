         5423501344 function calls (5423379305 primitive calls) in 2065.924 seconds
        1   21.225   21.225 2065.067 2065.067 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.672    0.001 2043.778    0.202 GerrymanderingMCMC.py:235(recombination_of_districts)
   311614    2.338    0.000 1074.669    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1246456    1.552    0.000  755.040    0.001 GerrymanderingMCMC.py:190(__district_size)
264291228  151.725    0.000  617.210    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   12.749    0.001  369.554    0.037 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.048    0.000   78.186    0.004 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.068    0.000   76.329    0.004 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   27.538    0.001   76.176    0.004 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.102    0.000   46.518    0.005 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.673    0.000   17.034    0.002 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.107    0.000    2.697    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.352    0.000    1.024    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.798    0.798 GerrymanderingMCMC.py:1(<module>)
        1    0.001    0.001    0.055    0.055 GerrymanderingMCMC.py:21(__init__)
        1    0.010    0.010    0.054    0.054 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.012    0.012 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
