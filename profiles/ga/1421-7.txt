         5777966182 function calls (5777844143 primitive calls) in 2213.420 seconds
        1   22.245   22.245 2212.625 2212.625 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    6.483    0.001 2190.322    0.217 GerrymanderingMCMC.py:235(recombination_of_districts)
   340244    2.555    0.000 1213.064    0.004 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1360976    1.669    0.000  858.440    0.001 GerrymanderingMCMC.py:190(__district_size)
295337272  173.303    0.000  702.258    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   12.807    0.001  369.008    0.037 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.050    0.000   79.026    0.004 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.069    0.000   77.145    0.004 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   27.726    0.001   76.997    0.004 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.107    0.000   46.992    0.005 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.651    0.000   16.930    0.002 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.114    0.000    2.637    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.357    0.000    1.004    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.736    0.736 GerrymanderingMCMC.py:1(<module>)
        1    0.001    0.001    0.055    0.055 GerrymanderingMCMC.py:21(__init__)
        1    0.010    0.010    0.055    0.055 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.012    0.012 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
