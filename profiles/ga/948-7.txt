         5690106963 function calls (5689984924 primitive calls) in 2163.902 seconds
        1   21.475   21.475 2163.065 2163.065 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    6.090    0.001 2141.515    0.212 GerrymanderingMCMC.py:235(recombination_of_districts)
   330406    2.452    0.000 1168.440    0.004 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1321624    1.657    0.000  825.559    0.001 GerrymanderingMCMC.py:190(__district_size)
286929474  166.411    0.000  677.939    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   12.817    0.001  371.175    0.037 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.050    0.000   78.642    0.004 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.083    0.000   76.753    0.004 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   27.920    0.001   76.593    0.004 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.105    0.000   46.865    0.005 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.670    0.000   16.990    0.002 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.114    0.000    2.680    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.359    0.000    1.015    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.778    0.778 GerrymanderingMCMC.py:1(<module>)
        1    0.001    0.001    0.055    0.055 GerrymanderingMCMC.py:21(__init__)
        1    0.010    0.010    0.054    0.054 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.012    0.012 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
