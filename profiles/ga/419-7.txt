         5339158194 function calls (5339036155 primitive calls) in 2036.200 seconds
        1   21.542   21.542 2035.384 2035.384 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.569    0.001 2013.737    0.199 GerrymanderingMCMC.py:235(recombination_of_districts)
   308756    2.251    0.000 1048.447    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1235024    1.520    0.000  739.975    0.001 GerrymanderingMCMC.py:190(__district_size)
257552342  148.796    0.000  607.095    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   12.601    0.001  365.800    0.036 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.050    0.000   77.628    0.004 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.069    0.000   75.784    0.004 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   27.387    0.001   75.639    0.004 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.108    0.000   46.263    0.005 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.570    0.000   16.707    0.002 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.114    0.000    2.644    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.350    0.000    0.984    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.756    0.756 GerrymanderingMCMC.py:1(<module>)
        1    0.001    0.001    0.055    0.055 GerrymanderingMCMC.py:21(__init__)
        1    0.010    0.010    0.054    0.054 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.012    0.012 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
