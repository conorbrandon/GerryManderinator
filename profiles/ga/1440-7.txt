         5256308784 function calls (5256186745 primitive calls) in 2022.562 seconds
        1   22.397   22.397 2021.776 2021.776 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.442    0.001 1999.314    0.198 GerrymanderingMCMC.py:235(recombination_of_districts)
   302698    2.193    0.000 1023.069    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1210792    1.583    0.000  722.675    0.001 GerrymanderingMCMC.py:190(__district_size)
250531418  142.620    0.000  592.503    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   12.791    0.001  366.791    0.036 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.052    0.000   79.229    0.004 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.074    0.000   77.389    0.004 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   27.765    0.001   77.238    0.004 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.108    0.000   46.915    0.005 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.624    0.000   16.797    0.002 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.135    0.000    2.723    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.353    0.000    1.019    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.726    0.726 GerrymanderingMCMC.py:1(<module>)
        1    0.001    0.001    0.055    0.055 GerrymanderingMCMC.py:21(__init__)
        1    0.010    0.010    0.055    0.055 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.012    0.012 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
