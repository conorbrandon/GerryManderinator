         5245782364 function calls (5245660325 primitive calls) in 2003.160 seconds
        1   22.693   22.693 2002.418 2002.418 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.434    0.001 1979.633    0.196 GerrymanderingMCMC.py:235(recombination_of_districts)
   303478    2.215    0.000 1006.479    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1213912    1.452    0.000  706.833    0.001 GerrymanderingMCMC.py:190(__district_size)
249899386  139.814    0.000  576.423    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   12.737    0.001  363.442    0.036 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.052    0.000   77.855    0.004 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.073    0.000   76.006    0.004 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   27.222    0.001   75.855    0.004 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.106    0.000   46.170    0.005 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.615    0.000   16.740    0.002 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.120    0.000    2.707    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.348    0.000    1.017    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.707    0.707 GerrymanderingMCMC.py:1(<module>)
        1    0.001    0.001    0.055    0.055 GerrymanderingMCMC.py:21(__init__)
        1    0.010    0.010    0.055    0.055 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.012    0.012 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
