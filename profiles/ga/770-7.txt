         5084237485 function calls (5084115446 primitive calls) in 1951.105 seconds
        1   21.657   21.657 1950.311 1950.311 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.126    0.001 1928.542    0.191 GerrymanderingMCMC.py:235(recombination_of_districts)
   285210    2.076    0.000  966.069    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1140840    1.408    0.000  678.664    0.001 GerrymanderingMCMC.py:190(__district_size)
236173852  137.076    0.000  556.424    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   12.510    0.001  363.017    0.036 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.051    0.000   78.573    0.004 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.069    0.000   76.802    0.004 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   27.567    0.001   76.656    0.004 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.106    0.000   46.777    0.005 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.584    0.000   16.658    0.002 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.112    0.000    2.646    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.358    0.000    0.997    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.735    0.735 GerrymanderingMCMC.py:1(<module>)
        1    0.001    0.001    0.054    0.054 GerrymanderingMCMC.py:21(__init__)
        1    0.010    0.010    0.053    0.053 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.012    0.012 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
