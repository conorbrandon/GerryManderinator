         5395053197 function calls (5394931158 primitive calls) in 1982.981 seconds
        1   20.314   20.314 1981.497 1981.497 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.513    0.001 1961.105    0.194 GerrymanderingMCMC.py:235(recombination_of_districts)
   314717    2.241    0.000 1024.923    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1258868    1.501    0.000  722.307    0.001 GerrymanderingMCMC.py:190(__district_size)
262540262  144.736    0.000  590.088    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   12.087    0.001  354.586    0.035 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.049    0.000   74.168    0.004 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.068    0.000   72.425    0.004 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   25.656    0.001   72.279    0.004 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.103    0.000   44.535    0.004 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.470    0.000   16.092    0.002 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.115    0.000    2.602    0.000 GerrymanderingMCMC.py:157(__random_district_label)
        1    0.000    0.000    1.425    1.425 GerrymanderingMCMC.py:1(<module>)
    10100    0.331    0.000    0.948    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.001    0.001    0.053    0.053 GerrymanderingMCMC.py:21(__init__)
        1    0.010    0.010    0.052    0.052 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.011    0.011 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
