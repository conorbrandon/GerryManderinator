         5042897806 function calls (5042775767 primitive calls) in 1932.774 seconds
        1   21.875   21.875 1931.996 1931.996 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.017    0.000 1910.063    0.189 GerrymanderingMCMC.py:235(recombination_of_districts)
   277302    2.013    0.000  940.045    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1109208    1.391    0.000  662.691    0.001 GerrymanderingMCMC.py:190(__district_size)
232190162  131.794    0.000  541.984    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   12.566    0.001  365.451    0.036 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.052    0.000   77.969    0.004 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.081    0.000   76.171    0.004 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   27.082    0.001   76.015    0.004 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.104    0.000   46.355    0.005 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.574    0.000   16.678    0.002 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.110    0.000    2.625    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.342    0.000    0.983    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.720    0.720 GerrymanderingMCMC.py:1(<module>)
        1    0.001    0.001    0.054    0.054 GerrymanderingMCMC.py:21(__init__)
        1    0.010    0.010    0.054    0.054 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.012    0.012 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
