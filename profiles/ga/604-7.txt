         5451246968 function calls (5451124929 primitive calls) in 2074.744 seconds
        1   21.888   21.888 2073.952 2073.952 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.732    0.001 2052.001    0.203 GerrymanderingMCMC.py:235(recombination_of_districts)
   315256    2.496    0.000 1083.057    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1261024    1.540    0.000  762.339    0.001 GerrymanderingMCMC.py:190(__district_size)
266703830  150.476    0.000  621.639    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   12.461    0.001  369.294    0.037 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.052    0.000   77.532    0.004 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.070    0.000   75.696    0.004 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   27.232    0.001   75.548    0.004 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.111    0.000   46.206    0.005 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.604    0.000   16.984    0.002 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.117    0.000    2.666    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.363    0.000    1.016    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.734    0.734 GerrymanderingMCMC.py:1(<module>)
        1    0.001    0.001    0.054    0.054 GerrymanderingMCMC.py:21(__init__)
        1    0.010    0.010    0.054    0.054 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.012    0.012 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
