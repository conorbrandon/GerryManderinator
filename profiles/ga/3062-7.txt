         5163783256 function calls (5163661217 primitive calls) in 1981.285 seconds
        1   21.882   21.882 1980.485 1980.485 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.307    0.001 1958.546    0.194 GerrymanderingMCMC.py:235(recombination_of_districts)
   288679    2.149    0.000  985.558    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1154716    1.461    0.000  695.761    0.001 GerrymanderingMCMC.py:190(__district_size)
242177034  138.629    0.000  570.901    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   12.719    0.001  367.096    0.036 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.051    0.000   78.923    0.004 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.071    0.000   76.996    0.004 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   27.698    0.001   76.844    0.004 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.107    0.000   46.816    0.005 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.610    0.000   17.079    0.002 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.115    0.000    2.712    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.362    0.000    1.003    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.740    0.740 GerrymanderingMCMC.py:1(<module>)
        1    0.001    0.001    0.055    0.055 GerrymanderingMCMC.py:21(__init__)
        1    0.010    0.010    0.055    0.055 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.012    0.012 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
