         5319736821 function calls (5319614782 primitive calls) in 2026.947 seconds
        1   21.633   21.633 2026.169 2026.169 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.580    0.001 2004.463    0.198 GerrymanderingMCMC.py:235(recombination_of_districts)
   303579    2.192    0.000 1038.809    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1214316    1.484    0.000  734.166    0.001 GerrymanderingMCMC.py:190(__district_size)
255753140  147.439    0.000  599.986    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   12.352    0.001  364.026    0.036 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.050    0.000   77.911    0.004 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.069    0.000   76.032    0.004 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   27.415    0.001   75.887    0.004 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.103    0.000   46.399    0.005 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.653    0.000   16.771    0.002 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.110    0.000    2.577    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.347    0.000    0.985    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.725    0.725 GerrymanderingMCMC.py:1(<module>)
        1    0.001    0.001    0.054    0.054 GerrymanderingMCMC.py:21(__init__)
        1    0.010    0.010    0.054    0.054 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.012    0.012 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
