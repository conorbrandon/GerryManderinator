         5689697176 function calls (5689575137 primitive calls) in 3283.280 seconds
        1   23.494   23.494 3282.078 3282.078 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    9.398    0.001 3258.488    0.323 GerrymanderingMCMC.py:235(recombination_of_districts)
   339238    3.833    0.000 1810.262    0.005 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1356952    2.563    0.000 1279.220    0.001 GerrymanderingMCMC.py:190(__district_size)
287984622  255.752    0.000 1049.231    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   18.748    0.002  563.073    0.056 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.070    0.000  115.126    0.006 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.083    0.000  112.638    0.006 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   38.449    0.002  112.459    0.006 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.154    0.000   69.290    0.007 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    3.790    0.000   25.592    0.003 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.136    0.000    3.764    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.517    0.000    1.488    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    1.112    1.112 GerrymanderingMCMC.py:1(<module>)
        1    0.001    0.001    0.083    0.083 GerrymanderingMCMC.py:21(__init__)
        1    0.015    0.015    0.083    0.083 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.018    0.018 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
