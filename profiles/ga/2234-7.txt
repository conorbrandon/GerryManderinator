         5487308710 function calls (5487186671 primitive calls) in 2095.637 seconds
        1   21.068   21.068 2094.902 2094.902 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.798    0.001 2073.716    0.205 GerrymanderingMCMC.py:235(recombination_of_districts)
   320586    2.353    0.000 1103.123    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1282344    1.607    0.000  777.821    0.001 GerrymanderingMCMC.py:190(__district_size)
269851694  153.334    0.000  636.636    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   12.565    0.001  366.749    0.036 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.051    0.000   79.000    0.004 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.081    0.000   77.226    0.004 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   27.688    0.001   77.072    0.004 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.103    0.000   47.079    0.005 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.691    0.000   17.276    0.002 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.108    0.000    2.664    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.352    0.000    1.010    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.674    0.674 GerrymanderingMCMC.py:1(<module>)
        1    0.001    0.001    0.055    0.055 GerrymanderingMCMC.py:21(__init__)
        1    0.010    0.010    0.054    0.054 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.012    0.012 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
