         5197189363 function calls (5197067324 primitive calls) in 1983.115 seconds
        1   21.508   21.508 1982.323 1982.323 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.364    0.001 1960.758    0.194 GerrymanderingMCMC.py:235(recombination_of_districts)
   295291    2.110    0.000  996.378    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1181164    1.469    0.000  703.733    0.001 GerrymanderingMCMC.py:190(__district_size)
245701166  143.496    0.000  576.512    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   12.436    0.001  366.841    0.036 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.049    0.000   78.265    0.004 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.069    0.000   76.472    0.004 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   27.392    0.001   76.329    0.004 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.106    0.000   46.609    0.005 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.546    0.000   16.804    0.002 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.109    0.000    2.630    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.341    0.000    0.967    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.734    0.734 GerrymanderingMCMC.py:1(<module>)
        1    0.001    0.001    0.055    0.055 GerrymanderingMCMC.py:21(__init__)
        1    0.010    0.010    0.054    0.054 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.012    0.012 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
