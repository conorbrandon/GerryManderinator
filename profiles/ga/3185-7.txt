         5487311508 function calls (5487189469 primitive calls) in 2097.102 seconds
        1   21.029   21.029 2096.311 2096.311 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.854    0.001 2075.168    0.205 GerrymanderingMCMC.py:235(recombination_of_districts)
   317727    2.369    0.000 1107.854    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1270908    1.610    0.000  782.373    0.001 GerrymanderingMCMC.py:190(__district_size)
269851020  155.957    0.000  640.735    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   12.660    0.001  366.363    0.036 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.048    0.000   78.481    0.004 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.068    0.000   76.653    0.004 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   27.313    0.001   76.510    0.004 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.109    0.000   46.803    0.005 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.589    0.000   16.951    0.002 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.109    0.000    2.617    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.351    0.000    1.025    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.739    0.739 GerrymanderingMCMC.py:1(<module>)
        1    0.001    0.001    0.056    0.056 GerrymanderingMCMC.py:21(__init__)
        1    0.010    0.010    0.055    0.055 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.012    0.012 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
