         5381514918 function calls (5381392879 primitive calls) in 2016.906 seconds
        1   20.415   20.415 2015.416 2015.416 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.487    0.001 1994.875    0.198 GerrymanderingMCMC.py:235(recombination_of_districts)
   308925    2.238    0.000 1043.914    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1235700    1.509    0.000  738.806    0.001 GerrymanderingMCMC.py:190(__district_size)
261178612  149.746    0.000  606.626    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   12.358    0.001  361.469    0.036 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.049    0.000   76.669    0.004 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.066    0.000   74.916    0.004 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   27.220    0.001   74.778    0.004 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.103    0.000   45.793    0.005 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.573    0.000   16.407    0.002 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.105    0.000    2.495    0.000 GerrymanderingMCMC.py:157(__random_district_label)
        1    0.000    0.000    1.430    1.430 GerrymanderingMCMC.py:1(<module>)
    10100    0.347    0.000    0.976    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.001    0.001    0.053    0.053 GerrymanderingMCMC.py:21(__init__)
        1    0.010    0.010    0.053    0.053 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.012    0.012 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
