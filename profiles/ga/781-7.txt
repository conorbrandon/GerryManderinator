         5317443402 function calls (5317321363 primitive calls) in 2023.669 seconds
        1   21.588   21.588 2022.802 2022.802 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.510    0.001 2001.158    0.198 GerrymanderingMCMC.py:235(recombination_of_districts)
   306815    2.296    0.000 1034.410    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1227260    1.541    0.000  729.434    0.001 GerrymanderingMCMC.py:190(__district_size)
255906414  146.057    0.000  596.865    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   13.214    0.001  365.453    0.036 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.050    0.000   77.319    0.004 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.067    0.000   75.527    0.004 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   27.315    0.001   75.373    0.004 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.104    0.000   46.145    0.005 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.553    0.000   16.660    0.002 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.109    0.000    2.622    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.350    0.000    0.993    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.799    0.799 GerrymanderingMCMC.py:1(<module>)
        1    0.001    0.001    0.062    0.062 GerrymanderingMCMC.py:21(__init__)
        1    0.010    0.010    0.062    0.062 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.019    0.019 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
