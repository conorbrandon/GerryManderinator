         5345583084 function calls (5345461045 primitive calls) in 2041.807 seconds
        1   23.218   23.218 2041.025 2041.025 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.555    0.001 2017.751    0.200 GerrymanderingMCMC.py:235(recombination_of_districts)
   302503    2.235    0.000 1036.314    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1210012    1.485    0.000  729.730    0.001 GerrymanderingMCMC.py:190(__district_size)
257537026  145.064    0.000  597.901    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   12.757    0.001  369.277    0.037 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.064    0.000   78.672    0.004 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.075    0.000   76.737    0.004 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   27.788    0.001   76.574    0.004 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.108    0.000   46.495    0.005 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.614    0.000   16.704    0.002 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.116    0.000    2.655    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.357    0.000    0.977    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.725    0.725 GerrymanderingMCMC.py:1(<module>)
        1    0.001    0.001    0.054    0.054 GerrymanderingMCMC.py:21(__init__)
        1    0.010    0.010    0.054    0.054 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.012    0.012 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
