         5604603333 function calls (5604481294 primitive calls) in 2125.898 seconds
        1   22.752   22.752 2125.127 2125.127 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    6.094    0.001 2102.313    0.208 GerrymanderingMCMC.py:235(recombination_of_districts)
   326762    2.425    0.000 1131.081    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1307048    1.610    0.000  796.127    0.001 GerrymanderingMCMC.py:190(__district_size)
280483134  160.344    0.000  651.417    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   12.739    0.001  365.199    0.036 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.051    0.000   77.727    0.004 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.071    0.000   75.832    0.004 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   27.059    0.001   75.683    0.004 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.105    0.000   46.216    0.005 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.544    0.000   16.756    0.002 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.112    0.000    2.671    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.347    0.000    0.999    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.712    0.712 GerrymanderingMCMC.py:1(<module>)
        1    0.001    0.001    0.055    0.055 GerrymanderingMCMC.py:21(__init__)
        1    0.010    0.010    0.054    0.054 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.012    0.012 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
