         5206528339 function calls (5206406300 primitive calls) in 3166.116 seconds
        1   22.907   22.907 3164.991 3164.991 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    8.664    0.001 3141.943    0.311 GerrymanderingMCMC.py:235(recombination_of_districts)
   294714    3.491    0.000 1632.013    0.006 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1178856    2.411    0.000 1153.625    0.001 GerrymanderingMCMC.py:190(__district_size)
246339764  230.864    0.000  945.449    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   19.069    0.002  584.578    0.058 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.060    0.000  120.464    0.006 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.085    0.000  117.954    0.006 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   39.684    0.002  117.774    0.006 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.149    0.000   72.426    0.007 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    3.930    0.000   27.082    0.003 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.162    0.000    3.788    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.530    0.000    1.571    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    1.023    1.023 GerrymanderingMCMC.py:1(<module>)
        1    0.001    0.001    0.087    0.087 GerrymanderingMCMC.py:21(__init__)
        1    0.017    0.017    0.087    0.087 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.019    0.019 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
