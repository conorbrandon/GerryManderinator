         5327716244 function calls (5327594205 primitive calls) in 2019.983 seconds
        1   21.402   21.402 2018.672 2018.672 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.545    0.001 1997.193    0.198 GerrymanderingMCMC.py:235(recombination_of_districts)
   301084    2.181    0.000 1033.937    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1204336    1.475    0.000  727.631    0.001 GerrymanderingMCMC.py:190(__district_size)
256802968  146.599    0.000  594.835    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   12.493    0.001  362.427    0.036 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.052    0.000   77.224    0.004 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.067    0.000   75.437    0.004 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   26.796    0.001   75.296    0.004 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.104    0.000   45.894    0.005 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.603    0.000   16.631    0.002 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.107    0.000    2.584    0.000 GerrymanderingMCMC.py:157(__random_district_label)
        1    0.000    0.000    1.212    1.212 GerrymanderingMCMC.py:1(<module>)
    10100    0.336    0.000    0.970    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.001    0.001    0.094    0.094 GerrymanderingMCMC.py:21(__init__)
        1    0.023    0.023    0.094    0.094 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.025    0.025 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
