         5776658044 function calls (5776536005 primitive calls) in 2181.854 seconds
        1   21.790   21.790 2180.393 2180.393 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    6.121    0.001 2158.526    0.214 GerrymanderingMCMC.py:235(recombination_of_districts)
   336457    2.399    0.000 1196.862    0.004 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1345828    1.675    0.000  846.991    0.001 GerrymanderingMCMC.py:190(__district_size)
294972182  169.064    0.000  695.062    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   12.784    0.001  363.779    0.036 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.048    0.000   77.435    0.004 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.068    0.000   75.644    0.004 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   27.090    0.001   75.490    0.004 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.105    0.000   46.178    0.005 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.588    0.000   16.707    0.002 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.109    0.000    2.613    0.000 GerrymanderingMCMC.py:157(__random_district_label)
        1    0.000    0.000    1.404    1.404 GerrymanderingMCMC.py:1(<module>)
    10100    0.362    0.000    0.998    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.001    0.001    0.052    0.052 GerrymanderingMCMC.py:21(__init__)
        1    0.010    0.010    0.052    0.052 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.011    0.011 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
