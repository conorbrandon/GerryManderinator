         5669419265 function calls (5669297226 primitive calls) in 2171.873 seconds
        1   22.019   22.019 2171.029 2171.029 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    6.224    0.001 2148.953    0.213 GerrymanderingMCMC.py:235(recombination_of_districts)
   335874    2.463    0.000 1172.659    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1343496    1.695    0.000  827.296    0.001 GerrymanderingMCMC.py:190(__district_size)
286349182  167.597    0.000  672.403    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   12.442    0.001  364.649    0.036 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.067    0.000   77.873    0.004 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.070    0.000   75.977    0.004 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   27.463    0.001   75.827    0.004 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.110    0.000   46.566    0.005 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.566    0.000   16.819    0.002 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.118    0.000    2.746    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.361    0.000    0.979    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.785    0.785 GerrymanderingMCMC.py:1(<module>)
        1    0.001    0.001    0.055    0.055 GerrymanderingMCMC.py:21(__init__)
        1    0.010    0.010    0.054    0.054 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.012    0.012 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
