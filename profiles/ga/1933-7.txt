         5383782635 function calls (5383660596 primitive calls) in 2035.173 seconds
        1   21.818   21.818 2033.925 2033.925 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.640    0.001 2012.019    0.199 GerrymanderingMCMC.py:235(recombination_of_districts)
   313072    2.225    0.000 1047.874    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1252288    1.493    0.000  735.385    0.001 GerrymanderingMCMC.py:190(__district_size)
261712242  145.928    0.000  601.250    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   12.529    0.001  362.089    0.036 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.054    0.000   77.169    0.004 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.070    0.000   75.357    0.004 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   27.107    0.001   75.198    0.004 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.146    0.000   45.898    0.005 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.597    0.000   16.632    0.002 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.111    0.000    2.647    0.000 GerrymanderingMCMC.py:157(__random_district_label)
        1    0.000    0.000    1.188    1.188 GerrymanderingMCMC.py:1(<module>)
    10100    0.342    0.000    0.977    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.001    0.001    0.054    0.054 GerrymanderingMCMC.py:21(__init__)
        1    0.010    0.010    0.054    0.054 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.012    0.012 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
