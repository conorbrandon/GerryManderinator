         5115888558 function calls (5115766519 primitive calls) in 1970.368 seconds
        1   21.822   21.822 1969.553 1969.553 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.218    0.001 1947.675    0.193 GerrymanderingMCMC.py:235(recombination_of_districts)
   287561    2.074    0.000  973.990    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1150244    1.394    0.000  688.528    0.001 GerrymanderingMCMC.py:190(__district_size)
238504708  138.198    0.000  564.354    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   12.791    0.001  368.827    0.037 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.056    0.000   79.649    0.004 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.075    0.000   77.789    0.004 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   28.439    0.001   77.639    0.004 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.104    0.000   47.030    0.005 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.629    0.000   16.733    0.002 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.112    0.000    2.577    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.354    0.000    0.979    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.756    0.756 GerrymanderingMCMC.py:1(<module>)
        1    0.001    0.001    0.055    0.055 GerrymanderingMCMC.py:21(__init__)
        1    0.010    0.010    0.054    0.054 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.012    0.012 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
