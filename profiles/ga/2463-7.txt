         5361022415 function calls (5360900376 primitive calls) in 2057.314 seconds
        1   21.981   21.981 2056.576 2056.576 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.590    0.001 2034.537    0.201 GerrymanderingMCMC.py:235(recombination_of_districts)
   305677    2.260    0.000 1057.356    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1222708    1.511    0.000  744.070    0.001 GerrymanderingMCMC.py:190(__district_size)
258836648  148.717    0.000  607.579    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   12.564    0.001  368.962    0.037 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.051    0.000   79.231    0.004 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.073    0.000   77.355    0.004 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   27.643    0.001   77.204    0.004 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.111    0.000   47.207    0.005 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.646    0.000   17.000    0.002 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.128    0.000    2.700    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.367    0.000    1.024    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.678    0.678 GerrymanderingMCMC.py:1(<module>)
        1    0.001    0.001    0.056    0.056 GerrymanderingMCMC.py:21(__init__)
        1    0.010    0.010    0.055    0.055 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.012    0.012 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
