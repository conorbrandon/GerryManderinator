         5212193491 function calls (5212071452 primitive calls) in 1987.193 seconds
        1   21.097   21.097 1986.342 1986.342 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.354    0.001 1965.186    0.195 GerrymanderingMCMC.py:235(recombination_of_districts)
   292161    2.173    0.000  997.283    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1168644    1.416    0.000  701.422    0.001 GerrymanderingMCMC.py:190(__district_size)
246288112  144.289    0.000  574.389    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   12.636    0.001  365.108    0.036 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.049    0.000   77.529    0.004 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.067    0.000   75.748    0.004 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   27.315    0.001   75.607    0.004 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.103    0.000   46.090    0.005 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.582    0.000   16.736    0.002 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.113    0.000    2.595    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.341    0.000    0.951    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.792    0.792 GerrymanderingMCMC.py:1(<module>)
        1    0.001    0.001    0.055    0.055 GerrymanderingMCMC.py:21(__init__)
        1    0.010    0.010    0.054    0.054 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.012    0.012 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
