         5274666728 function calls (5274544689 primitive calls) in 2000.616 seconds
        1   22.149   22.149 1999.842 1999.842 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.479    0.001 1977.599    0.196 GerrymanderingMCMC.py:235(recombination_of_districts)
   300929    2.253    0.000 1008.621    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1203716    1.488    0.000  710.821    0.001 GerrymanderingMCMC.py:190(__district_size)
251810700  141.448    0.000  582.588    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   12.646    0.001  362.876    0.036 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.054    0.000   77.737    0.004 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.073    0.000   75.911    0.004 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   27.333    0.001   75.758    0.004 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.108    0.000   46.146    0.005 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.645    0.000   16.681    0.002 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.121    0.000    2.672    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.343    0.000    0.970    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.725    0.725 GerrymanderingMCMC.py:1(<module>)
        1    0.001    0.001    0.055    0.055 GerrymanderingMCMC.py:21(__init__)
        1    0.010    0.010    0.055    0.055 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.012    0.012 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
