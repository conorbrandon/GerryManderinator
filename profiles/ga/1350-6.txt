         5288767700 function calls (5288645661 primitive calls) in 3198.586 seconds
        1   23.018   23.018 3197.428 3197.428 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    8.862    0.001 3174.303    0.314 GerrymanderingMCMC.py:235(recombination_of_districts)
   299158    3.384    0.000 1663.234    0.006 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1196632    2.402    0.000 1173.142    0.001 GerrymanderingMCMC.py:190(__district_size)
253253536  234.515    0.000  958.748    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   19.025    0.002  584.553    0.058 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.060    0.000  119.681    0.006 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.085    0.000  117.201    0.006 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   39.214    0.002  117.022    0.006 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.146    0.000   72.115    0.007 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    3.988    0.000   26.974    0.003 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.137    0.000    3.749    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.514    0.000    1.527    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    1.065    1.065 GerrymanderingMCMC.py:1(<module>)
        1    0.001    0.001    0.087    0.087 GerrymanderingMCMC.py:21(__init__)
        1    0.016    0.016    0.086    0.086 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.019    0.019 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
