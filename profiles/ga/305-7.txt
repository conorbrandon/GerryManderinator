         5229435437 function calls (5229313398 primitive calls) in 1983.114 seconds
        1   21.238   21.238 1982.347 1982.347 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.378    0.001 1961.019    0.194 GerrymanderingMCMC.py:235(recombination_of_districts)
   294169    2.094    0.000 1001.809    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1176676    1.458    0.000  706.336    0.001 GerrymanderingMCMC.py:190(__district_size)
248126600  143.244    0.000  578.227    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   12.588    0.001  362.671    0.036 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.053    0.000   78.086    0.004 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.069    0.000   76.248    0.004 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   27.467    0.001   76.102    0.004 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.105    0.000   46.459    0.005 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.575    0.000   16.736    0.002 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.118    0.000    2.708    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.363    0.000    0.998    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.707    0.707 GerrymanderingMCMC.py:1(<module>)
        1    0.001    0.001    0.055    0.055 GerrymanderingMCMC.py:21(__init__)
        1    0.010    0.010    0.054    0.054 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.012    0.012 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
