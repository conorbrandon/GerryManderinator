         5427001464 function calls (5426879425 primitive calls) in 3252.881 seconds
        1   23.650   23.650 3251.789 3251.789 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    9.072    0.001 3227.936    0.320 GerrymanderingMCMC.py:235(recombination_of_districts)
   315555    3.599    0.000 1729.976    0.005 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1262220    2.559    0.000 1225.204    0.001 GerrymanderingMCMC.py:190(__district_size)
265034052  245.076    0.000 1004.671    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   19.209    0.002  583.239    0.058 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.062    0.000  120.426    0.006 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.086    0.000  117.847    0.006 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   40.630    0.002  117.668    0.006 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.150    0.000   72.178    0.007 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    3.921    0.000   26.566    0.003 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.141    0.000    3.795    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.531    0.000    1.558    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.999    0.999 GerrymanderingMCMC.py:1(<module>)
        1    0.001    0.001    0.087    0.087 GerrymanderingMCMC.py:21(__init__)
        1    0.016    0.016    0.086    0.086 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.019    0.019 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
