         5357467693 function calls (5357345654 primitive calls) in 3126.938 seconds
        1   23.553   23.553 3125.847 3125.847 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    8.572    0.001 3102.208    0.307 GerrymanderingMCMC.py:235(recombination_of_districts)
   311026    3.442    0.000 1640.524    0.005 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1244104    2.377    0.000 1158.285    0.001 GerrymanderingMCMC.py:190(__district_size)
258876702  232.968    0.000  944.264    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   18.122    0.002  562.352    0.056 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.058    0.000  115.526    0.006 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.084    0.000  113.047    0.006 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   38.520    0.002  112.869    0.006 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.141    0.000   69.404    0.007 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    3.837    0.000   26.080    0.003 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.143    0.000    3.668    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.502    0.000    1.490    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    1.003    1.003 GerrymanderingMCMC.py:1(<module>)
        1    0.001    0.001    0.082    0.082 GerrymanderingMCMC.py:21(__init__)
        1    0.015    0.015    0.082    0.082 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.018    0.018 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
