         5452596073 function calls (5452474034 primitive calls) in 2067.423 seconds
        1   21.179   21.179 2066.543 2066.543 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.773    0.001 2045.309    0.203 GerrymanderingMCMC.py:235(recombination_of_districts)
   316272    2.366    0.000 1079.435    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1265088    1.572    0.000  759.419    0.001 GerrymanderingMCMC.py:190(__district_size)
267302724  149.401    0.000  620.140    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   12.458    0.001  366.401    0.036 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.050    0.000   78.010    0.004 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.069    0.000   76.190    0.004 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   27.259    0.001   76.048    0.004 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.102    0.000   46.563    0.005 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.603    0.000   16.791    0.002 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.116    0.000    2.608    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.348    0.000    1.001    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.813    0.813 GerrymanderingMCMC.py:1(<module>)
        1    0.001    0.001    0.062    0.062 GerrymanderingMCMC.py:21(__init__)
        1    0.011    0.011    0.062    0.062 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.012    0.012 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
