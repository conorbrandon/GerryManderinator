         5498196872 function calls (5498074833 primitive calls) in 2122.036 seconds
        1   23.377   23.377 2121.232 2121.232 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.750    0.001 2097.769    0.208 GerrymanderingMCMC.py:235(recombination_of_districts)
   313049    2.368    0.000 1110.058    0.004 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1252196    1.563    0.000  785.510    0.001 GerrymanderingMCMC.py:190(__district_size)
270949422  157.932    0.000  639.786    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   12.998    0.001  370.292    0.037 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.055    0.000   79.501    0.004 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.074    0.000   77.589    0.004 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   28.294    0.001   77.434    0.004 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.109    0.000   47.231    0.005 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.739    0.000   17.161    0.002 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.119    0.000    2.771    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.356    0.000    1.015    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.744    0.744 GerrymanderingMCMC.py:1(<module>)
        1    0.001    0.001    0.055    0.055 GerrymanderingMCMC.py:21(__init__)
        1    0.010    0.010    0.054    0.054 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.012    0.012 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
