         5033225088 function calls (5033103049 primitive calls) in 1947.146 seconds
        1   21.221   21.221 1946.414 1946.414 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.147    0.001 1925.135    0.191 GerrymanderingMCMC.py:235(recombination_of_districts)
   281459    2.104    0.000  950.818    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1125836    1.381    0.000  671.877    0.001 GerrymanderingMCMC.py:190(__district_size)
231301778  135.846    0.000  551.017    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   12.606    0.001  367.688    0.036 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.050    0.000   78.469    0.004 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.069    0.000   76.668    0.004 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   27.580    0.001   76.511    0.004 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.103    0.000   46.896    0.005 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.589    0.000   16.789    0.002 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.122    0.000    2.667    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.351    0.000    0.996    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.677    0.677 GerrymanderingMCMC.py:1(<module>)
        1    0.001    0.001    0.055    0.055 GerrymanderingMCMC.py:21(__init__)
        1    0.010    0.010    0.054    0.054 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.012    0.012 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
