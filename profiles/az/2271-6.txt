         4313827500 function calls (4313705461 primitive calls) in 1563.571 seconds
        1   11.027   11.027 1562.774 1562.774 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.095    0.001 1551.713    0.154 GerrymanderingMCMC.py:235(recombination_of_districts)
   319513    2.162    0.000  930.081    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1278052    1.576    0.000  654.378    0.001 GerrymanderingMCMC.py:190(__district_size)
233651280  130.676    0.000  536.674    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10101   10.017    0.001  303.763    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.039    0.000   40.217    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.055    0.000   38.815    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   12.931    0.001   38.699    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.089    0.000   26.612    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.149    0.000   14.260    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.089    0.000    2.225    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.285    0.000    0.870    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.764    0.764 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
