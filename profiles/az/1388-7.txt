         4650156790 function calls (4650034751 primitive calls) in 1715.705 seconds
        1   12.048   12.048 1714.907 1714.907 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.622    0.001 1702.829    0.169 GerrymanderingMCMC.py:235(recombination_of_districts)
   356615    2.475    0.000 1072.465    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1426460    1.710    0.000  761.637    0.001 GerrymanderingMCMC.py:190(__district_size)
262857878  150.251    0.000  628.542    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10103   10.008    0.001  301.670    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.041    0.000   43.179    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.057    0.000   41.739    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.289    0.001   41.609    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.094    0.000   28.247    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.206    0.000   14.622    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.100    0.000    2.246    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.296    0.000    0.934    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.768    0.768 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.030    0.030 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
