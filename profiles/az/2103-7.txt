         4487035739 function calls (4486913700 primitive calls) in 1629.973 seconds
        1   11.308   11.308 1629.226 1629.226 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.346    0.001 1617.888    0.160 GerrymanderingMCMC.py:235(recombination_of_districts)
   333083    2.408    0.000  994.567    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1332332    1.581    0.000  699.766    0.001 GerrymanderingMCMC.py:190(__district_size)
248900440  140.755    0.000  572.261    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10101    9.885    0.001  299.733    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.041    0.000   41.077    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.058    0.000   39.650    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.230    0.001   39.524    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.097    0.000   27.042    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.145    0.000   14.288    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.098    0.000    2.260    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.282    0.000    0.873    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.715    0.715 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
