         5272680032 function calls (5272557993 primitive calls) in 1892.034 seconds
        1   11.873   11.873 1891.265 1891.265 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    6.480    0.001 1879.345    0.186 GerrymanderingMCMC.py:235(recombination_of_districts)
   412930    2.816    0.000 1253.366    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1651720    1.992    0.000  883.076    0.001 GerrymanderingMCMC.py:190(__district_size)
315523088  177.147    0.000  723.231    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   10.116    0.001  304.513    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.041    0.000   40.342    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.058    0.000   38.860    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.000    0.001   38.736    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.092    0.000   26.787    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.171    0.000   14.389    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.091    0.000    2.309    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.281    0.000    0.882    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.736    0.736 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.006    0.006    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
