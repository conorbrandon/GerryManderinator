         4874406950 function calls (4874284911 primitive calls) in 1764.112 seconds
        1   11.749   11.749 1763.370 1763.370 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.900    0.001 1751.589    0.173 GerrymanderingMCMC.py:235(recombination_of_districts)
   366010    2.544    0.000 1127.032    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1464040    1.784    0.000  795.528    0.001 GerrymanderingMCMC.py:190(__district_size)
281549922  162.019    0.000  653.133    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10101   10.047    0.001  303.309    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.042    0.000   40.486    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.058    0.000   39.071    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.043    0.001   38.946    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.095    0.000   26.847    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.177    0.000   14.444    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.096    0.000    2.244    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.282    0.000    0.868    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.709    0.709 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
