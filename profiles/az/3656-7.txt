         4694025403 function calls (4693903364 primitive calls) in 1700.727 seconds
        1   11.430   11.430 1700.017 1700.017 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.680    0.001 1688.557    0.167 GerrymanderingMCMC.py:235(recombination_of_districts)
   357838    2.511    0.000 1066.018    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1431352    1.706    0.000  750.242    0.001 GerrymanderingMCMC.py:190(__district_size)
265917148  148.722    0.000  613.951    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100    9.800    0.001  301.658    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.040    0.000   41.009    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.058    0.000   39.591    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.150    0.001   39.458    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.097    0.000   27.072    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.195    0.000   14.390    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.093    0.000    2.275    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.281    0.000    0.861    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.677    0.677 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.006    0.006    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
