         4752391749 function calls (4752269710 primitive calls) in 1720.958 seconds
        1   10.994   10.994 1720.186 1720.186 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.809    0.001 1709.158    0.169 GerrymanderingMCMC.py:235(recombination_of_districts)
   360167    2.541    0.000 1080.632    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1440668    1.914    0.000  758.044    0.001 GerrymanderingMCMC.py:190(__district_size)
271077402  151.952    0.000  619.994    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10105    9.969    0.001  305.306    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.041    0.000   40.645    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.057    0.000   39.246    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.069    0.001   39.126    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.094    0.000   26.799    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.140    0.000   14.428    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.103    0.000    2.236    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.278    0.000    0.866    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.739    0.739 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.006    0.006    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
