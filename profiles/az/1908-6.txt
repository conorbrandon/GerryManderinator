         4736400788 function calls (4736278749 primitive calls) in 1715.063 seconds
        1   11.326   11.326 1714.359 1714.359 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.738    0.001 1703.004    0.169 GerrymanderingMCMC.py:235(recombination_of_districts)
   350383    2.502    0.000 1077.752    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1401532    1.686    0.000  758.366    0.001 GerrymanderingMCMC.py:190(__district_size)
269565826  148.642    0.000  621.277    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10102    9.888    0.001  302.919    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.040    0.000   41.163    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.056    0.000   39.739    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.136    0.001   39.620    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.093    0.000   27.139    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.171    0.000   14.523    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.094    0.000    2.214    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.287    0.000    0.870    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.670    0.670 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.006    0.006    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
