         4774192892 function calls (4774070853 primitive calls) in 1728.880 seconds
        1   11.073   11.073 1728.112 1728.112 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.779    0.001 1717.009    0.170 GerrymanderingMCMC.py:235(recombination_of_districts)
   364857    2.593    0.000 1091.223    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1459428    1.749    0.000  767.672    0.001 GerrymanderingMCMC.py:190(__district_size)
273197798  155.503    0.000  629.110    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   10.096    0.001  305.437    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.040    0.000   40.480    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.055    0.000   39.065    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.083    0.001   38.948    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.104    0.000   26.873    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.166    0.000   14.264    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.088    0.000    2.188    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.275    0.000    0.834    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.735    0.735 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.006    0.006    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
