         4413558020 function calls (4413435981 primitive calls) in 1612.085 seconds
        1   11.345   11.345 1611.379 1611.379 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.232    0.001 1600.001    0.158 GerrymanderingMCMC.py:235(recombination_of_districts)
   324820    2.285    0.000  970.404    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1299280    1.641    0.000  682.430    0.001 GerrymanderingMCMC.py:190(__district_size)
242270402  137.414    0.000  559.810    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10101   10.360    0.001  305.163    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.040    0.000   41.516    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.058    0.000   40.113    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.422    0.001   39.991    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.100    0.000   27.381    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.176    0.000   14.474    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.091    0.000    2.217    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.324    0.000    0.901    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.673    0.673 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.006    0.006    0.030    0.030 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
