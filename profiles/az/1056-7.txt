         5656586138 function calls (5656464099 primitive calls) in 2036.632 seconds
        1   11.567   11.567 2035.899 2035.899 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    7.381    0.001 2024.286    0.200 GerrymanderingMCMC.py:235(recombination_of_districts)
   447232    3.122    0.000 1392.250    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1788928    2.123    0.000  977.155    0.001 GerrymanderingMCMC.py:190(__district_size)
348679928  192.288    0.000  799.971    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10102   10.016    0.001  306.698    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.055    0.000   40.785    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.059    0.000   39.314    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.147    0.001   39.187    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.094    0.000   27.064    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.201    0.000   14.619    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.097    0.000    2.335    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.281    0.000    0.879    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.700    0.700 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
