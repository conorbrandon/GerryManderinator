         4709313536 function calls (4709191497 primitive calls) in 1702.545 seconds
        1   11.251   11.251 1701.843 1701.843 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.731    0.001 1690.558    0.167 GerrymanderingMCMC.py:235(recombination_of_districts)
   356698    2.513    0.000 1068.431    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1426792    1.683    0.000  748.488    0.001 GerrymanderingMCMC.py:190(__district_size)
267715320  148.822    0.000  610.478    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10101    9.771    0.001  300.466    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.040    0.000   40.567    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.054    0.000   39.156    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.134    0.001   39.040    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.100    0.000   26.771    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.190    0.000   14.468    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.091    0.000    2.223    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.284    0.000    0.859    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.669    0.669 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
