         4958194794 function calls (4958072755 primitive calls) in 1801.008 seconds
        1   11.806   11.806 1800.303 1800.303 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    6.126    0.001 1788.467    0.177 GerrymanderingMCMC.py:235(recombination_of_districts)
   378962    2.645    0.000 1159.239    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1515848    1.781    0.000  815.363    0.001 GerrymanderingMCMC.py:190(__district_size)
289087676  162.720    0.000  669.679    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10101   10.000    0.001  304.393    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.044    0.000   41.071    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.057    0.000   39.640    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.500    0.001   39.508    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.094    0.000   27.128    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.203    0.000   14.438    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.093    0.000    2.271    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.293    0.000    0.878    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.672    0.672 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.030    0.030 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
