         4624915040 function calls (4624793001 primitive calls) in 1704.566 seconds
        1   11.052   11.052 1703.858 1703.858 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.561    0.001 1692.758    0.168 GerrymanderingMCMC.py:235(recombination_of_districts)
   345459    2.469    0.000 1065.825    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1381836    1.726    0.000  756.241    0.001 GerrymanderingMCMC.py:190(__district_size)
260429386  154.720    0.000  623.717    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   10.192    0.001  305.157    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.047    0.000   40.674    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.055    0.000   39.203    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.109    0.001   39.085    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.089    0.000   26.953    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.173    0.000   14.457    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.093    0.000    2.207    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.283    0.000    0.859    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.675    0.675 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.030    0.030 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
