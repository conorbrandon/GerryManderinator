         3936634509 function calls (3936512470 primitive calls) in 1435.982 seconds
        1   11.290   11.290 1435.104 1435.104 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    4.494    0.000 1423.774    0.141 GerrymanderingMCMC.py:235(recombination_of_districts)
   276966    1.924    0.000  799.933    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1107864    1.296    0.000  562.004    0.001 GerrymanderingMCMC.py:190(__district_size)
201167956  111.518    0.000  459.456    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10102   10.114    0.001  303.656    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.041    0.000   40.128    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.056    0.000   38.734    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   12.947    0.001   38.612    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.094    0.000   26.640    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.124    0.000   14.135    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.093    0.000    2.259    0.000 GerrymanderingMCMC.py:157(__random_district_label)
        1    0.000    0.000    0.845    0.845 GerrymanderingMCMC.py:1(<module>)
    10100    0.272    0.000    0.824    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.030    0.030 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
