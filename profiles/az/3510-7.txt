         5198652430 function calls (5198530391 primitive calls) in 1879.300 seconds
        1   11.379   11.379 1878.601 1878.601 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    6.471    0.001 1867.192    0.185 GerrymanderingMCMC.py:235(recombination_of_districts)
   394516    2.676    0.000 1232.264    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1578064    1.875    0.000  867.598    0.001 GerrymanderingMCMC.py:190(__district_size)
308750118  172.854    0.000  710.916    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10103    9.960    0.001  307.873    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.041    0.000   40.873    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.058    0.000   39.423    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.075    0.001   39.297    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.097    0.000   27.018    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.195    0.000   14.531    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.111    0.000    2.303    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.279    0.000    0.857    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.666    0.666 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
