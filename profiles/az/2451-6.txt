         5786935474 function calls (5786813435 primitive calls) in 2076.981 seconds
        1   11.650   11.650 2076.218 2076.218 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    7.486    0.001 2064.527    0.204 GerrymanderingMCMC.py:235(recombination_of_districts)
   451109    3.158    0.000 1429.017    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1804436    2.148    0.000 1005.575    0.001 GerrymanderingMCMC.py:190(__district_size)
359763992  202.753    0.000  824.069    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10101   10.127    0.001  306.503    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.042    0.000   40.964    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.058    0.000   39.535    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.306    0.001   39.409    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.108    0.000   27.121    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.233    0.000   14.550    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.095    0.000    2.281    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.286    0.000    0.895    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.730    0.730 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.030    0.030 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
