         5082701117 function calls (5082579078 primitive calls) in 1822.969 seconds
        1   11.255   11.255 1822.194 1822.194 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    6.270    0.001 1810.905    0.179 GerrymanderingMCMC.py:235(recombination_of_districts)
   384486    2.658    0.000 1185.505    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1537944    1.847    0.000  832.095    0.001 GerrymanderingMCMC.py:190(__district_size)
299448252  167.842    0.000  682.796    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10101    9.978    0.001  303.725    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.043    0.000   40.110    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.058    0.000   38.647    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.170    0.001   38.524    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.093    0.000   26.622    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.181    0.000   14.288    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.096    0.000    2.274    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.280    0.000    0.854    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.742    0.742 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
