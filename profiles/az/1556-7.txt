         5403596418 function calls (5403474379 primitive calls) in 1945.109 seconds
        1   11.349   11.349 1944.379 1944.379 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    6.767    0.001 1932.999    0.191 GerrymanderingMCMC.py:235(recombination_of_districts)
   422615    2.899    0.000 1311.074    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1690460    1.984    0.000  921.665    0.001 GerrymanderingMCMC.py:190(__district_size)
327424588  184.635    0.000  756.844    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10103    9.839    0.001  301.413    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.040    0.000   40.191    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.056    0.000   38.791    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   12.989    0.001   38.671    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.093    0.000   26.661    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.166    0.000   14.492    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.093    0.000    2.267    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.296    0.000    0.880    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.714    0.714 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
