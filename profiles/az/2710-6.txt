         4678341310 function calls (4678219271 primitive calls) in 1687.474 seconds
        1   11.757   11.757 1686.767 1686.767 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.693    0.001 1674.973    0.166 GerrymanderingMCMC.py:235(recombination_of_districts)
   351681    2.444    0.000 1054.873    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1406724    1.656    0.000  742.597    0.001 GerrymanderingMCMC.py:190(__district_size)
265435894  148.542    0.000  608.556    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100    9.748    0.001  298.308    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.042    0.000   40.221    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.078    0.000   38.810    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.043    0.001   38.664    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.099    0.000   26.477    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.173    0.000   14.317    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.099    0.000    2.289    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.284    0.000    0.850    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.675    0.675 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
