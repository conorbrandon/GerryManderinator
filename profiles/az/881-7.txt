         4868123098 function calls (4868001059 primitive calls) in 1770.311 seconds
        1   11.993   11.993 1769.611 1769.611 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.879    0.001 1757.585    0.174 GerrymanderingMCMC.py:235(recombination_of_districts)
   365383    2.541    0.000 1131.770    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1461532    1.795    0.000  796.293    0.001 GerrymanderingMCMC.py:190(__district_size)
281346494  160.662    0.000  652.071    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10101    9.944    0.001  301.584    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.041    0.000   40.896    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.058    0.000   39.460    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.161    0.001   39.335    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.095    0.000   26.866    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.247    0.000   14.520    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.096    0.000    2.280    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.289    0.000    0.861    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.668    0.668 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
