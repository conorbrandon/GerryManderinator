         4699812092 function calls (4699690053 primitive calls) in 1707.702 seconds
        1   11.044   11.044 1706.880 1706.880 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.649    0.001 1695.803    0.168 GerrymanderingMCMC.py:235(recombination_of_districts)
   348400    2.381    0.000 1067.510    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1393600    1.668    0.000  750.422    0.001 GerrymanderingMCMC.py:190(__district_size)
266714808  151.374    0.000  613.345    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10101   10.003    0.001  305.069    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.041    0.000   40.503    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.056    0.000   39.091    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.012    0.001   38.961    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.093    0.000   26.828    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.195    0.000   14.465    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.092    0.000    2.220    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.279    0.000    0.840    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.773    0.773 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.047    0.047 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.046    0.046 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.010    0.010 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
