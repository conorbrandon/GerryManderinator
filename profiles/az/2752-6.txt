         4786278570 function calls (4786156531 primitive calls) in 1739.620 seconds
        1   11.118   11.118 1738.884 1738.884 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.786    0.001 1727.719    0.171 GerrymanderingMCMC.py:235(recombination_of_districts)
   355783    2.650    0.000 1098.548    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1423132    1.698    0.000  773.243    0.001 GerrymanderingMCMC.py:190(__district_size)
273869334  155.562    0.000  632.852    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   10.094    0.001  304.661    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.039    0.000   41.169    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.052    0.000   39.767    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.201    0.001   39.652    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.092    0.000   27.233    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.247    0.000   14.535    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.108    0.000    2.250    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.282    0.000    0.888    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.703    0.703 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.030    0.030 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
