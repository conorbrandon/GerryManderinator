         4592881890 function calls (4592759851 primitive calls) in 1659.927 seconds
        1   11.779   11.779 1659.225 1659.225 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.431    0.001 1647.413    0.163 GerrymanderingMCMC.py:235(recombination_of_districts)
   348000    2.456    0.000 1026.829    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1392000    1.623    0.000  722.225    0.001 GerrymanderingMCMC.py:190(__district_size)
257722084  143.051    0.000  592.739    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10102    9.749    0.001  299.899    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.041    0.000   40.651    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.057    0.000   39.255    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.274    0.001   39.134    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.092    0.000   26.814    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.156    0.000   14.290    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.091    0.000    2.237    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.282    0.000    0.838    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.670    0.670 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
