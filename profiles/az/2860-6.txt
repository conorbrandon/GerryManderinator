         5405167539 function calls (5405045500 primitive calls) in 1933.869 seconds
        1   11.463   11.463 1933.163 1933.163 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    6.799    0.001 1921.669    0.190 GerrymanderingMCMC.py:235(recombination_of_districts)
   417446    2.838    0.000 1295.617    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1669784    1.997    0.000  911.262    0.001 GerrymanderingMCMC.py:190(__district_size)
327245270  183.273    0.000  746.206    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10101    9.971    0.001  303.104    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.041    0.000   39.990    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.057    0.000   38.537    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   12.896    0.001   38.417    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.094    0.000   26.492    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.216    0.000   14.294    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.094    0.000    2.260    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.281    0.000    0.856    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.672    0.672 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.007    0.007 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
