         5100577590 function calls (5100455551 primitive calls) in 1843.084 seconds
        1   11.758   11.758 1842.364 1842.364 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    6.391    0.001 1830.575    0.181 GerrymanderingMCMC.py:235(recombination_of_districts)
   390290    2.625    0.000 1199.516    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1561160    1.948    0.000  843.042    0.001 GerrymanderingMCMC.py:190(__district_size)
300872444  168.997    0.000  690.705    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10102   10.159    0.001  305.715    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.050    0.000   40.518    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.058    0.000   39.040    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   12.931    0.001   38.918    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.094    0.000   26.932    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.168    0.000   14.466    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.097    0.000    2.239    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.280    0.000    0.855    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.689    0.689 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
