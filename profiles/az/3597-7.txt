         4305206702 function calls (4305084663 primitive calls) in 1553.548 seconds
        1   11.415   11.415 1552.845 1552.845 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.032    0.000 1541.399    0.153 GerrymanderingMCMC.py:235(recombination_of_districts)
   318812    2.232    0.000  922.584    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1275248    1.531    0.000  649.129    0.001 GerrymanderingMCMC.py:190(__district_size)
232742750  131.319    0.000  532.504    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10101    9.852    0.001  300.941    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.041    0.000   40.148    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.057    0.000   38.671    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   12.864    0.001   38.550    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.108    0.000   26.612    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.172    0.000   14.256    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.090    0.000    2.224    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.271    0.000    0.836    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.670    0.670 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
