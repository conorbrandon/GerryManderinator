         5005898743 function calls (5005776704 primitive calls) in 1791.645 seconds
        1   11.168   11.168 1790.865 1790.865 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    6.064    0.001 1779.669    0.176 GerrymanderingMCMC.py:235(recombination_of_districts)
   379162    2.606    0.000 1162.397    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1516648    1.778    0.000  818.001    0.001 GerrymanderingMCMC.py:190(__district_size)
293233452  163.236    0.000  672.699    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100    9.781    0.001  298.431    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.039    0.000   40.357    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.054    0.000   38.926    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.062    0.001   38.797    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.089    0.000   26.786    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.141    0.000   14.275    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.103    0.000    2.208    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.285    0.000    0.851    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.748    0.748 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.006    0.006    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
