         5267863298 function calls (5267741259 primitive calls) in 1895.390 seconds
        1   11.088   11.088 1894.635 1894.635 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    6.582    0.001 1883.516    0.186 GerrymanderingMCMC.py:235(recombination_of_districts)
   408036    2.772    0.000 1256.799    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1632144    1.926    0.000  886.386    0.001 GerrymanderingMCMC.py:190(__district_size)
314829122  178.905    0.000  728.194    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   10.084    0.001  306.610    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.039    0.000   40.451    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.054    0.000   39.058    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.051    0.001   38.941    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.093    0.000   26.840    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.237    0.000   14.406    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.090    0.000    2.199    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.284    0.000    0.858    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.731    0.731 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
