         4648055546 function calls (4647933507 primitive calls) in 1683.400 seconds
        1   11.243   11.243 1682.695 1682.695 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.641    0.001 1671.420    0.165 GerrymanderingMCMC.py:235(recombination_of_districts)
   345352    2.414    0.000 1050.446    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1381408    1.677    0.000  740.990    0.001 GerrymanderingMCMC.py:190(__district_size)
262281372  151.626    0.000  608.894    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100    9.921    0.001  301.682    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.044    0.000   40.675    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.062    0.000   39.231    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.090    0.001   39.102    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.094    0.000   26.838    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.196    0.000   14.393    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.101    0.000    2.271    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.281    0.000    0.854    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.673    0.673 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
