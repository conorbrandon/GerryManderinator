         4742011664 function calls (4741889625 primitive calls) in 1713.555 seconds
        1   12.136   12.136 1712.825 1712.825 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.763    0.001 1700.656    0.168 GerrymanderingMCMC.py:235(recombination_of_districts)
   352754    2.451    0.000 1069.876    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1411016    1.679    0.000  751.310    0.001 GerrymanderingMCMC.py:190(__district_size)
269673828  152.562    0.000  615.971    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10102   10.025    0.001  307.196    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.040    0.000   40.566    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.059    0.000   39.139    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.146    0.001   39.013    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.094    0.000   26.799    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.244    0.000   14.563    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.097    0.000    2.296    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.278    0.000    0.853    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.698    0.698 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
