         4875470767 function calls (4875348728 primitive calls) in 1755.244 seconds
        1   11.815   11.815 1754.521 1754.521 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.900    0.001 1742.674    0.173 GerrymanderingMCMC.py:235(recombination_of_districts)
   370679    2.549    0.000 1119.885    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1482716    1.788    0.000  789.601    0.001 GerrymanderingMCMC.py:190(__district_size)
282015666  160.961    0.000  646.923    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10103   10.027    0.001  301.586    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.041    0.000   40.567    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.057    0.000   39.175    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.254    0.001   39.054    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.092    0.000   26.709    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.205    0.000   14.250    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.092    0.000    2.194    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.282    0.000    0.845    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.691    0.691 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
