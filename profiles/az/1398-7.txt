         4940407294 function calls (4940285255 primitive calls) in 1795.680 seconds
        1   11.735   11.735 1794.909 1794.909 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    6.106    0.001 1783.144    0.177 GerrymanderingMCMC.py:235(recombination_of_districts)
   382465    2.662    0.000 1152.787    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1529860    1.831    0.000  811.005    0.001 GerrymanderingMCMC.py:190(__district_size)
287169698  163.409    0.000  665.146    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10102   10.193    0.001  306.553    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.041    0.000   40.760    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.057    0.000   39.348    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.209    0.001   39.226    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.095    0.000   27.035    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.258    0.000   14.610    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.133    0.000    2.294    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.283    0.000    0.861    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.739    0.739 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.006    0.006    0.030    0.030 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
