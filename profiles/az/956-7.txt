         5456489528 function calls (5456367489 primitive calls) in 1959.216 seconds
        1   11.824   11.824 1958.392 1958.392 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    6.863    0.001 1946.519    0.193 GerrymanderingMCMC.py:235(recombination_of_districts)
   423868    2.957    0.000 1317.534    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1695472    2.010    0.000  925.621    0.001 GerrymanderingMCMC.py:190(__district_size)
331543036  185.525    0.000  759.574    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10105   10.169    0.001  304.189    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.040    0.000   40.526    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.058    0.000   39.065    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.253    0.001   38.941    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.096    0.000   26.791    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.272    0.000   14.516    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.104    0.000    2.263    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.279    0.000    0.883    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.778    0.778 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.006    0.006    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.007    0.007 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
