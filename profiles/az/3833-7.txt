         4638456136 function calls (4638334097 primitive calls) in 1682.278 seconds
        1   11.393   11.393 1681.537 1681.537 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.427    0.001 1670.114    0.165 GerrymanderingMCMC.py:235(recombination_of_districts)
   333212    2.327    0.000 1049.366    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1332848    1.622    0.000  741.535    0.001 GerrymanderingMCMC.py:190(__district_size)
261632618  149.612    0.000  608.666    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10101   10.100    0.001  301.470    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.041    0.000   40.611    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.057    0.000   39.221    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.382    0.001   39.101    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.093    0.000   26.926    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.255    0.000   14.395    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.091    0.000    2.221    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.277    0.000    0.833    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.709    0.709 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
