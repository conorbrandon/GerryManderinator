         4766719191 function calls (4766597152 primitive calls) in 1733.995 seconds
        1   11.408   11.408 1733.234 1733.234 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.829    0.001 1721.784    0.170 GerrymanderingMCMC.py:235(recombination_of_districts)
   358467    2.515    0.000 1093.535    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1433868    1.750    0.000  770.205    0.001 GerrymanderingMCMC.py:190(__district_size)
272310384  155.035    0.000  630.617    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10102    9.979    0.001  304.430    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.040    0.000   41.074    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.058    0.000   39.665    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.163    0.001   39.526    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.095    0.000   27.141    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.201    0.000   14.458    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.095    0.000    2.227    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.288    0.000    0.876    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.728    0.728 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.006    0.006    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
