         4670376478 function calls (4670254439 primitive calls) in 1691.620 seconds
        1   12.136   12.136 1690.898 1690.898 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.680    0.001 1678.734    0.166 GerrymanderingMCMC.py:235(recombination_of_districts)
   348865    2.460    0.000 1049.697    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1395460    1.664    0.000  737.062    0.001 GerrymanderingMCMC.py:190(__district_size)
263503118  148.772    0.000  603.779    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   10.408    0.001  305.367    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.042    0.000   40.717    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.058    0.000   39.275    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.194    0.001   39.151    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.108    0.000   26.827    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.238    0.000   14.645    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.097    0.000    2.293    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.282    0.000    0.848    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.689    0.689 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
