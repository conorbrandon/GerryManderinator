         4986592686 function calls (4986470647 primitive calls) in 1819.525 seconds
        1   11.551   11.551 1818.789 1818.789 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    6.195    0.001 1807.209    0.179 GerrymanderingMCMC.py:235(recombination_of_districts)
   375568    2.623    0.000 1180.313    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1502272    1.800    0.000  833.184    0.001 GerrymanderingMCMC.py:190(__district_size)
291427392  168.315    0.000  685.595    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10102   10.050    0.001  303.366    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.040    0.000   41.356    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.059    0.000   39.950    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.600    0.001   39.827    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.092    0.000   27.279    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.246    0.000   14.533    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.090    0.000    2.238    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.308    0.000    0.892    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.704    0.704 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.006    0.006    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
