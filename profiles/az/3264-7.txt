         4864500725 function calls (4864378686 primitive calls) in 1748.670 seconds
        1   10.957   10.957 1747.925 1747.925 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.899    0.001 1736.939    0.172 GerrymanderingMCMC.py:235(recombination_of_districts)
   359894    2.533    0.000 1115.775    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1439576    1.717    0.000  786.846    0.001 GerrymanderingMCMC.py:190(__district_size)
280521164  154.545    0.000  645.099    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10101   10.085    0.001  302.196    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.040    0.000   40.343    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.053    0.000   38.956    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   12.801    0.001   38.841    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.089    0.000   26.682    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.141    0.000   14.355    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.090    0.000    2.224    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.273    0.000    0.858    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.713    0.713 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
