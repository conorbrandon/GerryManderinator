         4854774718 function calls (4854652679 primitive calls) in 1757.084 seconds
        1   10.995   10.995 1756.350 1756.350 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.886    0.001 1745.326    0.173 GerrymanderingMCMC.py:235(recombination_of_districts)
   362597    2.438    0.000 1119.316    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1450388    1.774    0.000  787.875    0.001 GerrymanderingMCMC.py:190(__district_size)
279402706  158.820    0.000  646.743    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10102    9.806    0.001  304.922    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.040    0.000   40.739    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.054    0.000   39.308    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.121    0.001   39.191    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.091    0.000   26.969    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.166    0.000   14.616    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.089    0.000    2.219    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.283    0.000    0.889    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.701    0.701 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
