         4750759879 function calls (4750637840 primitive calls) in 1726.600 seconds
        1   10.977   10.977 1725.917 1725.917 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.804    0.001 1714.909    0.170 GerrymanderingMCMC.py:235(recombination_of_districts)
   363076    2.508    0.000 1091.341    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1452304    1.732    0.000  768.204    0.001 GerrymanderingMCMC.py:190(__district_size)
271538830  154.774    0.000  629.439    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10101    9.852    0.001  302.430    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.040    0.000   40.723    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.056    0.000   39.314    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.259    0.001   39.194    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.093    0.000   27.001    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.185    0.000   14.360    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.090    0.000    2.204    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.284    0.000    0.878    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.650    0.650 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.006    0.006    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
