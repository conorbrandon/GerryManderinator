         5541019037 function calls (5540896998 primitive calls) in 1974.160 seconds
        1   11.981   11.981 1973.461 1973.461 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    6.969    0.001 1961.452    0.194 GerrymanderingMCMC.py:235(recombination_of_districts)
   434322    2.981    0.000 1335.639    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1737288    2.078    0.000  937.478    0.001 GerrymanderingMCMC.py:190(__district_size)
338853434  190.856    0.000  768.863    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   10.089    0.001  302.778    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.042    0.000   40.271    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.088    0.000   38.826    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.233    0.001   38.676    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.094    0.000   26.588    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.179    0.000   14.304    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.093    0.000    2.226    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.278    0.000    0.860    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.667    0.667 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
