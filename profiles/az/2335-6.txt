         4548805198 function calls (4548683159 primitive calls) in 1637.035 seconds
        1   11.054   11.054 1636.266 1636.266 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.344    0.001 1625.183    0.161 GerrymanderingMCMC.py:235(recombination_of_districts)
   335223    2.356    0.000 1002.472    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1340892    1.558    0.000  704.882    0.001 GerrymanderingMCMC.py:190(__district_size)
253558036  141.647    0.000  576.935    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100    9.647    0.001  302.166    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.041    0.000   40.300    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.069    0.000   38.913    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   12.877    0.001   38.780    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.107    0.000   26.564    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.226    0.000   14.306    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.087    0.000    2.218    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.278    0.000    0.844    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.735    0.735 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
