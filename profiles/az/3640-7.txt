         5518689050 function calls (5518567011 primitive calls) in 2010.791 seconds
        1   11.006   11.006 2010.046 2010.046 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    7.051    0.001 1999.011    0.198 GerrymanderingMCMC.py:235(recombination_of_districts)
   420051    3.020    0.000 1370.915    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1680204    2.051    0.000  971.406    0.001 GerrymanderingMCMC.py:190(__district_size)
336899466  196.256    0.000  795.880    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100    9.974    0.001  304.574    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.047    0.000   41.717    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.056    0.000   40.319    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.538    0.001   40.201    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.092    0.000   27.589    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.216    0.000   14.529    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.088    0.000    2.218    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.293    0.000    0.882    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.712    0.712 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.006    0.006    0.030    0.030 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
