         5256255950 function calls (5256133911 primitive calls) in 1898.544 seconds
        1   11.719   11.719 1897.777 1897.777 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    6.728    0.001 1885.992    0.187 GerrymanderingMCMC.py:235(recombination_of_districts)
   418453    2.835    0.000 1256.259    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1673812    2.012    0.000  880.360    0.001 GerrymanderingMCMC.py:190(__district_size)
314334044  177.622    0.000  720.172    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   10.071    0.001  305.666    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.041    0.000   40.650    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.067    0.000   39.234    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.237    0.001   39.100    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.099    0.000   26.943    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.159    0.000   14.552    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.106    0.000    2.317    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.281    0.000    0.851    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.734    0.734 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.006    0.006    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
