         4893426646 function calls (4893304607 primitive calls) in 1768.635 seconds
        1   11.073   11.073 1767.903 1767.903 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    6.014    0.001 1756.801    0.174 GerrymanderingMCMC.py:235(recombination_of_districts)
   374013    2.619    0.000 1130.773    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1496052    1.786    0.000  794.289    0.001 GerrymanderingMCMC.py:190(__district_size)
283479684  159.265    0.000  648.832    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   10.140    0.001  304.657    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.039    0.000   40.670    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.058    0.000   39.251    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   12.955    0.001   39.127    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.092    0.000   26.894    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.155    0.000   14.408    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.092    0.000    2.239    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.294    0.000    0.880    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.708    0.708 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.006    0.006    0.030    0.030 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
