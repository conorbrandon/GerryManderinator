         4920514155 function calls (4920392116 primitive calls) in 1786.881 seconds
        1   11.135   11.135 1786.121 1786.121 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.961    0.001 1774.906    0.176 GerrymanderingMCMC.py:235(recombination_of_districts)
   381532    2.700    0.000 1146.522    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1526128    1.824    0.000  806.345    0.001 GerrymanderingMCMC.py:190(__district_size)
285679056  160.590    0.000  660.325    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10102   10.145    0.001  304.231    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.040    0.000   41.226    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.055    0.000   39.829    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.189    0.001   39.710    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.097    0.000   27.252    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.157    0.000   14.506    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.090    0.000    2.236    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.279    0.000    0.856    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.726    0.726 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.006    0.006    0.030    0.030 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
