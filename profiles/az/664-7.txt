         4619098107 function calls (4618976068 primitive calls) in 1691.612 seconds
        1   12.118   12.118 1690.787 1690.787 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.541    0.001 1678.605    0.166 GerrymanderingMCMC.py:235(recombination_of_districts)
   341912    2.404    0.000 1044.246    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1367648    1.664    0.000  734.530    0.001 GerrymanderingMCMC.py:190(__district_size)
259776480  148.755    0.000  602.787    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   10.182    0.001  305.790    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.042    0.000   41.054    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.058    0.000   39.629    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.232    0.001   39.504    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.095    0.000   27.145    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.228    0.000   14.570    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.095    0.000    2.283    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.280    0.000    0.849    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.791    0.791 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.006    0.006    0.030    0.030 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
