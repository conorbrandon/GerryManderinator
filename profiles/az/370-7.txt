         4685102874 function calls (4684980835 primitive calls) in 1680.726 seconds
        1   11.876   11.876 1680.025 1680.025 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.564    0.001 1668.119    0.165 GerrymanderingMCMC.py:235(recombination_of_districts)
   346318    2.434    0.000 1044.915    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1385272    1.638    0.000  734.264    0.001 GerrymanderingMCMC.py:190(__district_size)
265456852  145.961    0.000  600.810    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10102    9.830    0.001  302.277    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.041    0.000   39.745    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.056    0.000   38.333    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   12.870    0.001   38.213    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.097    0.000   26.281    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.144    0.000   14.278    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.090    0.000    2.234    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.272    0.000    0.839    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.668    0.668 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.006    0.006    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
