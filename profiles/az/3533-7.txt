         4768669500 function calls (4768547461 primitive calls) in 1732.048 seconds
        1   11.850   11.850 1731.217 1731.217 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.767    0.001 1719.337    0.170 GerrymanderingMCMC.py:235(recombination_of_districts)
   360705    2.525    0.000 1090.829    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1442820    1.761    0.000  768.458    0.001 GerrymanderingMCMC.py:190(__district_size)
271821936  155.100    0.000  629.952    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10104   10.116    0.001  304.564    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.044    0.000   40.934    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.074    0.000   39.475    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.371    0.001   39.331    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.097    0.000   27.211    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.222    0.000   14.453    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.110    0.000    2.376    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.288    0.000    0.872    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.797    0.797 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.031    0.031 GerrymanderingMCMC.py:21(__init__)
        1    0.006    0.006    0.031    0.031 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.007    0.007 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
