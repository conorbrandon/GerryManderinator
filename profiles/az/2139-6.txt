         4145146309 function calls (4145024270 primitive calls) in 1505.388 seconds
        1   11.941   11.941 1504.659 1504.659 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    4.821    0.000 1492.689    0.148 GerrymanderingMCMC.py:235(recombination_of_districts)
   304158    2.125    0.000  873.983    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1216632    1.504    0.000  613.479    0.001 GerrymanderingMCMC.py:190(__district_size)
219296060  124.834    0.000  502.580    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10101    9.742    0.001  299.152    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.041    0.000   40.516    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.057    0.000   39.066    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.233    0.001   38.944    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.103    0.000   26.728    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.231    0.000   14.300    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.092    0.000    2.206    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.280    0.000    0.849    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.697    0.697 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
