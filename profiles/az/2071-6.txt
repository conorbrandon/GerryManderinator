         4698055086 function calls (4697933047 primitive calls) in 1694.466 seconds
        1   11.108   11.108 1693.664 1693.664 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.613    0.001 1682.525    0.167 GerrymanderingMCMC.py:235(recombination_of_districts)
   353320    2.488    0.000 1063.030    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1413280    1.712    0.000  747.007    0.001 GerrymanderingMCMC.py:190(__district_size)
267137260  149.207    0.000  611.170    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100    9.851    0.001  300.627    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.039    0.000   40.090    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.058    0.000   38.691    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   12.669    0.001   38.566    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.099    0.000   26.621    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.145    0.000   14.295    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.097    0.000    2.233    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.279    0.000    0.837    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.767    0.767 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
