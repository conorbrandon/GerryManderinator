         4724128929 function calls (4724006890 primitive calls) in 1719.168 seconds
        1   11.589   11.589 1718.421 1718.421 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.685    0.001 1706.799    0.169 GerrymanderingMCMC.py:235(recombination_of_districts)
   357273    2.564    0.000 1082.039    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1429092    1.724    0.000  761.151    0.001 GerrymanderingMCMC.py:190(__district_size)
268428010  152.755    0.000  623.986    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100    9.882    0.001  303.703    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.041    0.000   40.690    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.056    0.000   39.249    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.125    0.001   39.129    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.092    0.000   27.047    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.197    0.000   14.474    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.093    0.000    2.247    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.276    0.000    0.837    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.722    0.722 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.006    0.006    0.030    0.030 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
