         4630896392 function calls (4630774353 primitive calls) in 1687.769 seconds
        1   11.294   11.294 1687.066 1687.066 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.573    0.001 1675.742    0.166 GerrymanderingMCMC.py:235(recombination_of_districts)
   347902    2.436    0.000 1049.505    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1391608    1.676    0.000  741.735    0.001 GerrymanderingMCMC.py:190(__district_size)
260673748  147.770    0.000  608.653    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   10.072    0.001  304.232    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.043    0.000   41.534    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.057    0.000   40.125    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.439    0.001   40.002    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.099    0.000   27.516    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.206    0.000   14.507    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.090    0.000    2.264    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.283    0.000    0.886    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.670    0.670 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
