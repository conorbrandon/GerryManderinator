         5189956214 function calls (5189834175 primitive calls) in 1865.384 seconds
        1   11.584   11.584 1864.583 1864.583 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    6.490    0.001 1852.965    0.183 GerrymanderingMCMC.py:235(recombination_of_districts)
   400472    2.822    0.000 1224.401    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1601888    1.913    0.000  861.868    0.001 GerrymanderingMCMC.py:190(__district_size)
308662572  173.721    0.000  706.354    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   10.190    0.001  305.493    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.043    0.000   40.328    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.058    0.000   38.906    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   12.931    0.001   38.782    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.105    0.000   26.798    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.154    0.000   14.270    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.099    0.000    2.246    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.274    0.000    0.874    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.768    0.768 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.006    0.006    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.007    0.007 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
