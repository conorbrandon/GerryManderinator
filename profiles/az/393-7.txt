         5155478528 function calls (5155356489 primitive calls) in 1848.497 seconds
        1   11.545   11.545 1847.792 1847.792 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    6.346    0.001 1836.216    0.182 GerrymanderingMCMC.py:235(recombination_of_districts)
   395545    2.683    0.000 1204.899    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1582180    1.955    0.000  845.479    0.001 GerrymanderingMCMC.py:190(__district_size)
304924464  170.276    0.000  691.241    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10102   10.247    0.001  308.572    0.031 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.043    0.000   39.923    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.057    0.000   38.486    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   12.990    0.001   38.367    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.093    0.000   26.562    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.223    0.000   14.549    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.092    0.000    2.256    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.277    0.000    0.864    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.672    0.672 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
