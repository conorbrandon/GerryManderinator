         4738286762 function calls (4738164723 primitive calls) in 1720.606 seconds
        1   12.182   12.182 1719.510 1719.510 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.796    0.001 1707.261    0.169 GerrymanderingMCMC.py:235(recombination_of_districts)
   362045    2.522    0.000 1080.992    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1448180    1.709    0.000  757.754    0.001 GerrymanderingMCMC.py:190(__district_size)
270435752  153.265    0.000  618.571    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10102    9.979    0.001  302.144    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.043    0.000   40.528    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.059    0.000   39.114    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.121    0.001   38.987    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.095    0.000   26.828    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.241    0.000   14.426    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.097    0.000    2.262    0.000 GerrymanderingMCMC.py:157(__random_district_label)
        1    0.000    0.000    1.065    1.065 GerrymanderingMCMC.py:1(<module>)
    10100    0.278    0.000    0.856    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
