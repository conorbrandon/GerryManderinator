         4697658853 function calls (4697536814 primitive calls) in 1689.495 seconds
        1   11.507   11.507 1688.757 1688.757 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.690    0.001 1677.219    0.166 GerrymanderingMCMC.py:235(recombination_of_districts)
   350775    2.446    0.000 1053.189    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1403100    1.672    0.000  738.070    0.001 GerrymanderingMCMC.py:190(__district_size)
266346328  149.282    0.000  604.321    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10102   10.192    0.001  304.317    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.040    0.000   39.953    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.058    0.000   38.533    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   12.903    0.001   38.409    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.108    0.000   26.579    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.151    0.000   14.292    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.096    0.000    2.305    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.282    0.000    0.856    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.707    0.707 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
