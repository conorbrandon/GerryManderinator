         5462110289 function calls (5461988250 primitive calls) in 1968.450 seconds
        1   11.949   11.949 1967.652 1967.652 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    6.879    0.001 1955.656    0.194 GerrymanderingMCMC.py:235(recombination_of_districts)
   417007    2.974    0.000 1322.358    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1668028    2.006    0.000  931.359    0.001 GerrymanderingMCMC.py:190(__district_size)
331389070  187.213    0.000  764.104    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10102   10.159    0.001  307.617    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.043    0.000   40.908    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.059    0.000   39.486    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.405    0.001   39.361    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.095    0.000   27.083    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.241    0.000   14.521    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.094    0.000    2.284    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.285    0.000    0.855    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.765    0.765 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
