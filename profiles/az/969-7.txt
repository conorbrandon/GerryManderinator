         4864021465 function calls (4863899426 primitive calls) in 1749.365 seconds
        1   11.202   11.202 1748.616 1748.616 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.908    0.001 1737.382    0.172 GerrymanderingMCMC.py:235(recombination_of_districts)
   369908    2.616    0.000 1115.251    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1479632    1.765    0.000  786.257    0.001 GerrymanderingMCMC.py:190(__district_size)
280555836  157.905    0.000  643.770    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100    9.856    0.001  302.600    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.041    0.000   40.008    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.057    0.000   38.575    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   12.907    0.001   38.447    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.093    0.000   26.482    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.143    0.000   14.141    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.093    0.000    2.241    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.277    0.000    0.838    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.715    0.715 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
