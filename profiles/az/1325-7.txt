         4544139093 function calls (4544017054 primitive calls) in 1650.465 seconds
        1   11.691   11.691 1649.764 1649.764 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.394    0.001 1638.045    0.162 GerrymanderingMCMC.py:235(recombination_of_districts)
   340412    2.438    0.000 1015.402    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1361648    1.618    0.000  713.158    0.001 GerrymanderingMCMC.py:190(__district_size)
253719118  141.706    0.000  585.107    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100    9.791    0.001  300.806    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.042    0.000   40.703    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.071    0.000   39.273    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.068    0.001   39.134    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.109    0.000   26.961    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.131    0.000   14.419    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.096    0.000    2.301    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.277    0.000    0.861    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.669    0.669 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
