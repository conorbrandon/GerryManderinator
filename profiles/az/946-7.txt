         4666845298 function calls (4666723259 primitive calls) in 1671.842 seconds
        1   11.153   11.153 1671.115 1671.115 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.545    0.001 1659.925    0.164 GerrymanderingMCMC.py:235(recombination_of_districts)
   358252    2.522    0.000 1045.090    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1433008    1.717    0.000  735.440    0.001 GerrymanderingMCMC.py:190(__district_size)
264330290  150.083    0.000  604.870    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100    9.832    0.001  298.307    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.039    0.000   39.975    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.056    0.000   38.581    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.113    0.001   38.463    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.094    0.000   26.551    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.187    0.000   14.178    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.086    0.000    2.162    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.284    0.000    0.848    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.694    0.694 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
