         5333032621 function calls (5332910582 primitive calls) in 1907.694 seconds
        1   11.753   11.753 1906.971 1906.971 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    6.683    0.001 1895.188    0.188 GerrymanderingMCMC.py:235(recombination_of_districts)
   416236    2.863    0.000 1268.410    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1664944    2.000    0.000  891.698    0.001 GerrymanderingMCMC.py:190(__district_size)
320805362  178.083    0.000  728.406    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10101    9.900    0.001  303.209    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.039    0.000   40.156    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.059    0.000   38.760    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.008    0.001   38.636    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.093    0.000   26.712    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.200    0.000   14.411    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.095    0.000    2.231    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.314    0.000    0.900    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.690    0.690 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
