         4306012490 function calls (4305890451 primitive calls) in 1565.855 seconds
        1   11.379   11.379 1565.088 1565.088 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.091    0.001 1553.677    0.154 GerrymanderingMCMC.py:235(recombination_of_districts)
   313858    2.199    0.000  927.320    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1255432    1.499    0.000  652.399    0.001 GerrymanderingMCMC.py:190(__district_size)
232779574  129.855    0.000  534.585    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10103    9.989    0.001  304.122    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.040    0.000   40.735    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.058    0.000   39.266    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   12.956    0.001   39.139    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.095    0.000   26.921    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.193    0.000   14.340    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.092    0.000    2.328    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.273    0.000    0.835    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.735    0.735 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
