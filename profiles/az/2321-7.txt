         4270491576 function calls (4270369537 primitive calls) in 1546.205 seconds
        1   11.289   11.289 1545.481 1545.481 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    4.911    0.000 1534.161    0.152 GerrymanderingMCMC.py:235(recombination_of_districts)
   312788    2.174    0.000  912.776    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1251152    1.474    0.000  640.948    0.001 GerrymanderingMCMC.py:190(__district_size)
230169674  129.876    0.000  523.340    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100    9.928    0.001  301.476    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.040    0.000   40.248    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.057    0.000   38.837    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.025    0.001   38.715    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.094    0.000   26.682    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.173    0.000   14.240    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.111    0.000    2.300    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.271    0.000    0.838    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.692    0.692 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
