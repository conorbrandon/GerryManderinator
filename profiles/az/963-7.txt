         4645877860 function calls (4645755821 primitive calls) in 1687.643 seconds
        1   11.761   11.761 1686.865 1686.865 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.586    0.001 1675.074    0.166 GerrymanderingMCMC.py:235(recombination_of_districts)
   356251    2.445    0.000 1054.074    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1425004    1.697    0.000  738.410    0.001 GerrymanderingMCMC.py:190(__district_size)
262679324  149.909    0.000  603.295    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10102    9.900    0.001  300.789    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.041    0.000   40.267    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.058    0.000   38.860    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   12.984    0.001   38.737    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.094    0.000   26.780    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.172    0.000   14.371    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.093    0.000    2.277    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.301    0.000    0.879    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.745    0.745 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
