         5203970383 function calls (5203848344 primitive calls) in 1861.616 seconds
        1   11.449   11.449 1860.836 1860.836 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    6.419    0.001 1849.355    0.183 GerrymanderingMCMC.py:235(recombination_of_districts)
   402859    2.761    0.000 1227.676    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1611436    1.897    0.000  864.291    0.001 GerrymanderingMCMC.py:190(__district_size)
310029882  172.340    0.000  708.322    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10101   10.006    0.001  302.415    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.040    0.000   40.185    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.057    0.000   38.787    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.010    0.001   38.663    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.097    0.000   26.639    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.139    0.000   14.192    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.098    0.000    2.274    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.279    0.000    0.862    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.747    0.747 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
