         4990339123 function calls (4990217084 primitive calls) in 1769.490 seconds
        1   10.843   10.843 1768.790 1768.790 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.986    0.001 1757.918    0.174 GerrymanderingMCMC.py:235(recombination_of_districts)
   376425    2.544    0.000 1142.022    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1505700    1.785    0.000  804.228    0.001 GerrymanderingMCMC.py:190(__district_size)
291586896  161.827    0.000  657.676    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100    9.799    0.001  300.185    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.038    0.000   39.513    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.054    0.000   38.139    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   12.623    0.001   38.023    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.089    0.000   26.223    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.210    0.000   14.212    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.087    0.000    2.183    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.274    0.000    0.832    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.667    0.667 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
