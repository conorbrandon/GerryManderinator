         5195273273 function calls (5195151234 primitive calls) in 1871.339 seconds
        1   11.751   11.751 1870.594 1870.594 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    6.511    0.001 1858.814    0.184 GerrymanderingMCMC.py:235(recombination_of_districts)
   393990    2.738    0.000 1227.966    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1575960    1.845    0.000  864.880    0.001 GerrymanderingMCMC.py:190(__district_size)
308954684  173.990    0.000  708.735    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10101   10.078    0.001  305.081    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.041    0.000   40.870    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.059    0.000   39.417    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.395    0.001   39.289    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.096    0.000   27.005    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.223    0.000   14.476    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.098    0.000    2.385    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.288    0.000    0.877    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.712    0.712 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.006    0.006    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
