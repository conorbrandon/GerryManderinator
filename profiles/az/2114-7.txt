         4564169445 function calls (4564047406 primitive calls) in 1668.245 seconds
        1   11.826   11.826 1667.487 1667.487 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.500    0.001 1655.591    0.164 GerrymanderingMCMC.py:235(recombination_of_districts)
   350189    2.499    0.000 1030.357    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1400756    1.672    0.000  721.963    0.001 GerrymanderingMCMC.py:190(__district_size)
256146026  144.820    0.000  591.678    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   10.046    0.001  301.502    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.041    0.000   40.592    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.065    0.000   39.109    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.184    0.001   38.979    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.093    0.000   26.685    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.162    0.000   14.279    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.095    0.000    2.246    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.295    0.000    0.856    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.725    0.725 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
