         4956835742 function calls (4956713703 primitive calls) in 1784.943 seconds
        1   11.600   11.600 1784.200 1784.200 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    6.156    0.001 1772.570    0.176 GerrymanderingMCMC.py:235(recombination_of_districts)
   375241    2.647    0.000 1143.084    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1500964    1.799    0.000  801.759    0.001 GerrymanderingMCMC.py:190(__district_size)
288057170  160.605    0.000  655.514    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10101   10.087    0.001  306.544    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.041    0.000   40.065    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.057    0.000   38.636    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   12.933    0.001   38.513    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.093    0.000   26.652    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.202    0.000   14.408    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.099    0.000    2.236    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.285    0.000    0.852    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.710    0.710 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
