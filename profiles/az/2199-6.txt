         5168063523 function calls (5167941484 primitive calls) in 1876.912 seconds
        1   12.163   12.163 1876.132 1876.132 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    6.402    0.001 1863.937    0.185 GerrymanderingMCMC.py:235(recombination_of_districts)
   397551    2.731    0.000 1232.478    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1590204    1.891    0.000  868.792    0.001 GerrymanderingMCMC.py:190(__district_size)
306673374  172.682    0.000  710.241    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   10.135    0.001  306.771    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.045    0.000   40.762    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.060    0.000   39.291    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.124    0.001   39.163    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.102    0.000   26.978    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.210    0.000   14.423    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.107    0.000    2.366    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.299    0.000    0.863    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.747    0.747 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
