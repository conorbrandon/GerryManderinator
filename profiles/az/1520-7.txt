         4698002513 function calls (4697880474 primitive calls) in 1703.758 seconds
        1   11.411   11.411 1702.851 1702.851 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.590    0.001 1691.405    0.167 GerrymanderingMCMC.py:235(recombination_of_districts)
   352588    2.497    0.000 1059.438    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1410352    1.676    0.000  744.314    0.001 GerrymanderingMCMC.py:190(__district_size)
265679474  149.876    0.000  609.910    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10101   10.011    0.001  307.439    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.046    0.000   40.768    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.055    0.000   39.346    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.171    0.001   39.226    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.094    0.000   27.123    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.197    0.000   14.559    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.095    0.000    2.246    0.000 GerrymanderingMCMC.py:157(__random_district_label)
        1    0.000    0.000    0.873    0.873 GerrymanderingMCMC.py:1(<module>)
    10100    0.277    0.000    0.869    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.031    0.031 GerrymanderingMCMC.py:21(__init__)
        1    0.007    0.007    0.031    0.031 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
