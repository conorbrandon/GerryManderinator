         5205811696 function calls (5205689657 primitive calls) in 1869.906 seconds
        1   10.927   10.927 1869.107 1869.107 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    6.315    0.001 1858.136    0.184 GerrymanderingMCMC.py:235(recombination_of_districts)
   402456    2.782    0.000 1237.853    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1609824    1.927    0.000  870.940    0.001 GerrymanderingMCMC.py:190(__district_size)
310432002  176.927    0.000  712.208    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10101    9.831    0.001  301.152    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.039    0.000   39.995    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.055    0.000   38.589    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   12.831    0.001   38.472    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.090    0.000   26.495    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.187    0.000   14.392    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.092    0.000    2.194    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.288    0.000    0.860    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.774    0.774 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
