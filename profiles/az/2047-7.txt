         4582647398 function calls (4582525359 primitive calls) in 1657.032 seconds
        1   12.036   12.036 1656.300 1656.300 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.543    0.001 1644.234    0.163 GerrymanderingMCMC.py:235(recombination_of_districts)
   346475    2.446    0.000 1018.826    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1385900    1.635    0.000  713.713    0.001 GerrymanderingMCMC.py:190(__district_size)
256866498  145.473    0.000  584.982    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10103    9.955    0.001  302.922    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.042    0.000   40.105    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.058    0.000   38.673    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   12.973    0.001   38.549    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.096    0.000   26.434    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.220    0.000   14.319    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.097    0.000    2.257    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.273    0.000    0.831    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.700    0.700 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
