         4693228546 function calls (4693106507 primitive calls) in 1712.060 seconds
        1   11.543   11.543 1711.340 1711.340 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.686    0.001 1699.767    0.168 GerrymanderingMCMC.py:235(recombination_of_districts)
   354186    2.481    0.000 1074.226    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1416744    1.742    0.000  756.922    0.001 GerrymanderingMCMC.py:190(__district_size)
265849628  151.830    0.000  618.848    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   10.005    0.001  302.915    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.042    0.000   41.464    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.058    0.000   40.040    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.462    0.001   39.916    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.095    0.000   27.356    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.197    0.000   14.606    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.092    0.000    2.240    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.283    0.000    0.859    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.686    0.686 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.006    0.006    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
