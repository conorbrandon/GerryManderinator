         4790128520 function calls (4790006481 primitive calls) in 1737.271 seconds
        1   11.937   11.937 1736.484 1736.484 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.877    0.001 1724.471    0.171 GerrymanderingMCMC.py:235(recombination_of_districts)
   365304    2.439    0.000 1095.857    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1461216    1.748    0.000  770.230    0.001 GerrymanderingMCMC.py:190(__district_size)
274297752  156.326    0.000  631.887    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   10.193    0.001  305.611    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.065    0.000   40.687    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.058    0.000   39.182    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.171    0.001   39.060    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.095    0.000   26.928    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.204    0.000   14.457    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.096    0.000    2.255    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.286    0.000    0.861    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.753    0.753 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.030    0.030 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.007    0.007 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
