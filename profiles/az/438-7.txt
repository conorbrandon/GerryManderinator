         5008793919 function calls (5008671880 primitive calls) in 1809.336 seconds
        1   11.398   11.398 1808.568 1808.568 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    6.112    0.001 1797.138    0.178 GerrymanderingMCMC.py:235(recombination_of_districts)
   381961    2.732    0.000 1173.349    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1527844    1.863    0.000  822.927    0.001 GerrymanderingMCMC.py:190(__district_size)
292956384  165.124    0.000  673.497    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100    9.855    0.001  303.255    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.041    0.000   40.480    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.070    0.000   39.068    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   12.973    0.001   38.931    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.096    0.000   26.955    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.191    0.000   14.429    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.114    0.000    2.284    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.276    0.000    0.858    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.735    0.735 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.006    0.006    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
