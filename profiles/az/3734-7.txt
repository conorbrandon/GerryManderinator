         5079172111 function calls (5079050072 primitive calls) in 1837.445 seconds
        1   11.483   11.483 1836.706 1836.706 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    6.391    0.001 1825.193    0.181 GerrymanderingMCMC.py:235(recombination_of_districts)
   393119    2.721    0.000 1197.757    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1572476    1.852    0.000  843.720    0.001 GerrymanderingMCMC.py:190(__district_size)
299342886  166.571    0.000  691.874    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10101    9.916    0.001  302.200    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.040    0.000   41.035    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.056    0.000   39.604    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.340    0.001   39.480    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.095    0.000   27.138    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.213    0.000   14.381    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.099    0.000    2.286    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.284    0.000    0.863    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.705    0.705 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
