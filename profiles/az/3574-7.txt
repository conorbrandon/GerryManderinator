         5131840136 function calls (5131718097 primitive calls) in 1846.463 seconds
        1   11.596   11.596 1845.710 1845.710 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    6.353    0.001 1834.085    0.182 GerrymanderingMCMC.py:235(recombination_of_districts)
   390815    2.675    0.000 1205.790    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1563260    1.878    0.000  847.580    0.001 GerrymanderingMCMC.py:190(__district_size)
303569092  170.419    0.000  694.116    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10101    9.866    0.001  301.523    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.040    0.000   40.703    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.057    0.000   39.301    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.073    0.001   39.176    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.094    0.000   26.923    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.201    0.000   14.409    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.094    0.000    2.310    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.292    0.000    0.865    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.720    0.720 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
