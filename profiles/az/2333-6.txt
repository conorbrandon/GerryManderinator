         4584844867 function calls (4584722828 primitive calls) in 1666.844 seconds
        1   10.898   10.898 1666.150 1666.150 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.481    0.001 1655.223    0.164 GerrymanderingMCMC.py:235(recombination_of_districts)
   338033    2.356    0.000 1031.290    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1352132    1.672    0.000  727.109    0.001 GerrymanderingMCMC.py:190(__district_size)
256455028  147.069    0.000  594.258    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10101    9.940    0.001  305.419    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.039    0.000   40.234    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.054    0.000   38.853    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   12.877    0.001   38.731    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.094    0.000   26.876    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.227    0.000   14.500    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.089    0.000    2.256    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.277    0.000    0.848    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.670    0.670 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
