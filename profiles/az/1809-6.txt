         4820087252 function calls (4819965213 primitive calls) in 1759.512 seconds
        1   11.567   11.567 1758.803 1758.803 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.810    0.001 1747.204    0.173 GerrymanderingMCMC.py:235(recombination_of_districts)
   365121    2.536    0.000 1117.676    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1460484    1.808    0.000  786.330    0.001 GerrymanderingMCMC.py:190(__district_size)
277032640  156.764    0.000  643.879    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10102   10.044    0.001  304.149    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.041    0.000   41.068    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.057    0.000   39.632    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.161    0.001   39.509    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.095    0.000   27.211    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.229    0.000   14.544    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.097    0.000    2.333    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.288    0.000    0.872    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.675    0.675 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.006    0.006    0.030    0.030 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.007    0.007 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
