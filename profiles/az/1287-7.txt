         5168910214 function calls (5168788175 primitive calls) in 1874.307 seconds
        1   11.410   11.410 1873.569 1873.569 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    6.392    0.001 1862.128    0.184 GerrymanderingMCMC.py:235(recombination_of_districts)
   392759    2.687    0.000 1231.730    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1571036    1.940    0.000  869.638    0.001 GerrymanderingMCMC.py:190(__district_size)
306171312  174.412    0.000  712.074    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10101   10.264    0.001  307.009    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.040    0.000   40.973    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.057    0.000   39.566    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.315    0.001   39.429    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.093    0.000   26.966    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.255    0.000   14.660    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.093    0.000    2.276    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.285    0.000    0.856    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.706    0.706 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
