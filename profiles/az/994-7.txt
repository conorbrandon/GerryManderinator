         4462292576 function calls (4462170537 primitive calls) in 1624.781 seconds
        1   12.385   12.385 1624.012 1624.012 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.301    0.001 1611.590    0.160 GerrymanderingMCMC.py:235(recombination_of_districts)
   330300    2.280    0.000  982.586    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1321200    1.579    0.000  690.991    0.001 GerrymanderingMCMC.py:190(__district_size)
245908882  138.010    0.000  564.146    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10102   10.127    0.001  306.073    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.042    0.000   40.444    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.060    0.000   39.011    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.162    0.001   38.881    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.097    0.000   26.686    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.221    0.000   14.460    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.096    0.000    2.380    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.278    0.000    0.840    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.736    0.736 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
