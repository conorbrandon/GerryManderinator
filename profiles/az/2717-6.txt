         4900394236 function calls (4900272197 primitive calls) in 1791.583 seconds
        1   11.833   11.833 1790.844 1790.844 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    6.006    0.001 1778.975    0.176 GerrymanderingMCMC.py:235(recombination_of_districts)
   375715    2.692    0.000 1146.700    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1502860    1.785    0.000  807.428    0.001 GerrymanderingMCMC.py:190(__district_size)
283514030  163.400    0.000  661.373    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10103   10.193    0.001  304.852    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.043    0.000   41.153    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.057    0.000   39.691    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.171    0.001   39.568    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.095    0.000   27.085    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.241    0.000   14.743    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.095    0.000    2.220    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.278    0.000    0.848    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.706    0.706 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
