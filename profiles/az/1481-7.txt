         3811899374 function calls (3811777335 primitive calls) in 1396.373 seconds
        1   11.089   11.089 1395.679 1395.679 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    4.218    0.000 1384.560    0.137 GerrymanderingMCMC.py:235(recombination_of_districts)
   270783    1.908    0.000  761.968    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1083132    1.283    0.000  533.817    0.000 GerrymanderingMCMC.py:190(__district_size)
190544668  106.213    0.000  436.306    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100    9.639    0.001  301.921    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.040    0.000   40.638    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.071    0.000   39.211    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.054    0.001   39.073    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.097    0.000   27.101    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.140    0.000   14.294    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.098    0.000    2.275    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.292    0.000    0.882    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.662    0.662 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
