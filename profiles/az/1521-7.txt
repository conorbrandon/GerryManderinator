         5180005015 function calls (5179882976 primitive calls) in 1864.811 seconds
        1   11.642   11.642 1863.894 1863.894 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    6.359    0.001 1852.220    0.183 GerrymanderingMCMC.py:235(recombination_of_districts)
   390180    2.766    0.000 1228.404    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1560720    1.848    0.000  866.877    0.001 GerrymanderingMCMC.py:190(__district_size)
307700242  174.431    0.000  710.093    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10104    9.804    0.001  303.031    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.041    0.000   40.359    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.059    0.000   38.875    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   12.915    0.001   38.750    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.096    0.000   26.700    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.175    0.000   14.335    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.095    0.000    2.274    0.000 GerrymanderingMCMC.py:157(__random_district_label)
        1    0.000    0.000    0.884    0.884 GerrymanderingMCMC.py:1(<module>)
    10100    0.280    0.000    0.864    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.006    0.006    0.030    0.030 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
