         4652347264 function calls (4652225225 primitive calls) in 1688.913 seconds
        1   12.135   12.135 1688.157 1688.157 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.550    0.001 1675.992    0.166 GerrymanderingMCMC.py:235(recombination_of_districts)
   350123    2.459    0.000 1049.163    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1400492    1.703    0.000  737.272    0.001 GerrymanderingMCMC.py:190(__district_size)
262595666  149.774    0.000  604.700    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10103    9.934    0.001  302.504    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.042    0.000   40.631    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.059    0.000   39.223    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.321    0.001   39.098    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.096    0.000   26.854    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.232    0.000   14.410    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.093    0.000    2.226    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.297    0.000    0.871    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.726    0.726 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
