         5287526749 function calls (5287404710 primitive calls) in 1912.014 seconds
        1   11.636   11.636 1911.272 1911.272 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    6.663    0.001 1899.606    0.188 GerrymanderingMCMC.py:235(recombination_of_districts)
   409978    3.020    0.000 1271.198    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1639912    1.999    0.000  894.014    0.001 GerrymanderingMCMC.py:190(__district_size)
317050960  182.354    0.000  730.994    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   10.052    0.001  304.328    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.046    0.000   40.686    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.059    0.000   39.236    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   12.925    0.001   39.112    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.108    0.000   26.879    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.242    0.000   14.560    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.093    0.000    2.276    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.286    0.000    0.863    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.709    0.709 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.006    0.006    0.030    0.030 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
