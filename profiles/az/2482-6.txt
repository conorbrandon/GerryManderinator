         4590155503 function calls (4590033464 primitive calls) in 1660.463 seconds
        1   11.410   11.410 1659.732 1659.732 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.430    0.001 1648.267    0.163 GerrymanderingMCMC.py:235(recombination_of_districts)
   338107    2.291    0.000 1023.049    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1352428    1.623    0.000  719.718    0.001 GerrymanderingMCMC.py:190(__district_size)
257274544  145.695    0.000  589.789    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10101    9.936    0.001  303.120    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.041    0.000   40.409    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.056    0.000   38.949    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.160    0.001   38.825    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.095    0.000   26.815    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.175    0.000   14.352    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.095    0.000    2.275    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.286    0.000    0.858    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.698    0.698 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
