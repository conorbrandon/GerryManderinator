         4801103104 function calls (4800981065 primitive calls) in 1740.025 seconds
        1   12.069   12.069 1739.292 1739.292 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    6.008    0.001 1727.194    0.171 GerrymanderingMCMC.py:235(recombination_of_districts)
   360968    2.596    0.000 1098.826    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1443872    1.680    0.000  775.587    0.001 GerrymanderingMCMC.py:190(__district_size)
275609878  155.706    0.000  634.737    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   10.089    0.001  302.437    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.043    0.000   40.942    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.061    0.000   39.543    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.317    0.001   39.413    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.112    0.000   26.940    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.182    0.000   14.342    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.097    0.000    2.296    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.279    0.000    0.849    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.700    0.700 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.006    0.006    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
