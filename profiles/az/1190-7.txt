         4407195218 function calls (4407073179 primitive calls) in 1605.044 seconds
        1   11.665   11.665 1604.334 1604.334 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.265    0.001 1592.638    0.158 GerrymanderingMCMC.py:235(recombination_of_districts)
   325948    2.308    0.000  966.271    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1303792    1.596    0.000  679.964    0.001 GerrymanderingMCMC.py:190(__district_size)
241253002  136.239    0.000  558.212    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10101    9.850    0.001  302.253    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.041    0.000   41.066    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.059    0.000   39.632    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.226    0.001   39.508    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.094    0.000   27.098    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.198    0.000   14.458    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.090    0.000    2.244    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.277    0.000    0.844    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.676    0.676 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.006    0.006    0.030    0.030 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
