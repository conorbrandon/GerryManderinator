         4428682783 function calls (4428560744 primitive calls) in 1611.188 seconds
        1   11.590   11.590 1610.401 1610.401 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.193    0.001 1598.781    0.158 GerrymanderingMCMC.py:235(recombination_of_districts)
   315616    2.167    0.000  973.168    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1262464    1.535    0.000  684.335    0.001 GerrymanderingMCMC.py:190(__district_size)
243218158  137.181    0.000  561.265    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100    9.945    0.001  304.712    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.043    0.000   41.024    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.058    0.000   39.608    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.279    0.001   39.483    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.095    0.000   27.139    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.194    0.000   14.483    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.097    0.000    2.307    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.294    0.000    0.887    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.755    0.755 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.006    0.006    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
