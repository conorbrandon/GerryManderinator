         5247101867 function calls (5246979828 primitive calls) in 1893.196 seconds
        1   11.806   11.806 1892.462 1892.462 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    6.593    0.001 1880.580    0.186 GerrymanderingMCMC.py:235(recombination_of_districts)
   407484    2.779    0.000 1252.372    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1629936    1.953    0.000  881.627    0.001 GerrymanderingMCMC.py:190(__district_size)
314200758  179.184    0.000  724.287    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10101    9.950    0.001  303.445    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.065    0.000   40.971    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.059    0.000   39.524    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.031    0.001   39.396    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.095    0.000   26.962    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.227    0.000   14.426    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.101    0.000    2.305    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.295    0.000    0.878    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.701    0.701 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.007    0.007 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
