         5385500665 function calls (5385378626 primitive calls) in 1946.271 seconds
        1   11.227   11.227 1945.504 1945.504 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    6.790    0.001 1934.247    0.192 GerrymanderingMCMC.py:235(recombination_of_districts)
   418082    2.949    0.000 1304.713    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1672328    1.994    0.000  920.442    0.001 GerrymanderingMCMC.py:190(__district_size)
325403188  183.940    0.000  753.335    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10101   10.049    0.001  305.321    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.041    0.000   40.763    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.056    0.000   39.358    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.215    0.001   39.240    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.093    0.000   26.858    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.232    0.000   14.434    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.092    0.000    2.215    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.284    0.000    0.858    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.735    0.735 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
