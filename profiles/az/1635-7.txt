         4901449192 function calls (4901327153 primitive calls) in 1781.495 seconds
        1   11.484   11.484 1780.790 1780.790 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.937    0.001 1769.251    0.175 GerrymanderingMCMC.py:235(recombination_of_districts)
   365736    2.560    0.000 1139.796    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1462944    1.723    0.000  803.877    0.001 GerrymanderingMCMC.py:190(__district_size)
283159404  161.365    0.000  655.945    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10105   10.015    0.001  307.160    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.041    0.000   40.930    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.057    0.000   39.510    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.480    0.001   39.389    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.095    0.000   27.060    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.233    0.000   14.625    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.094    0.000    2.285    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.283    0.000    0.851    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.672    0.672 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.006    0.006    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
