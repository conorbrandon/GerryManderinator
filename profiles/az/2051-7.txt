         4884839741 function calls (4884717702 primitive calls) in 1781.178 seconds
        1   11.162   11.162 1780.429 1780.429 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    6.120    0.001 1769.236    0.175 GerrymanderingMCMC.py:235(recombination_of_districts)
   378013    2.662    0.000 1141.878    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1512052    1.967    0.000  804.345    0.001 GerrymanderingMCMC.py:190(__district_size)
282177402  165.606    0.000  658.529    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10104    9.967    0.001  305.301    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.051    0.000   40.395    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.055    0.000   38.946    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.093    0.001   38.811    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.118    0.000   26.788    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.222    0.000   14.639    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.091    0.000    2.220    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.282    0.000    0.848    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.717    0.717 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
