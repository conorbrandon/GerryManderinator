         4334838374 function calls (4334716335 primitive calls) in 1582.752 seconds
        1   11.605   11.605 1581.271 1581.271 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.096    0.001 1569.638    0.155 GerrymanderingMCMC.py:235(recombination_of_districts)
   324233    2.355    0.000  943.440    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1296932    1.548    0.000  663.648    0.001 GerrymanderingMCMC.py:190(__district_size)
235635982  132.010    0.000  543.164    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10101    9.865    0.001  303.114    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.041    0.000   40.677    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.056    0.000   39.283    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.081    0.001   39.163    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.096    0.000   26.919    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.161    0.000   14.266    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.094    0.000    2.222    0.000 GerrymanderingMCMC.py:157(__random_district_label)
        1    0.000    0.000    1.448    1.448 GerrymanderingMCMC.py:1(<module>)
    10100    0.277    0.000    0.867    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
