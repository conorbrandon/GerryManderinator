         5271091861 function calls (5270969822 primitive calls) in 1890.552 seconds
        1   11.715   11.715 1889.850 1889.850 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    6.582    0.001 1878.105    0.186 GerrymanderingMCMC.py:235(recombination_of_districts)
   410414    2.745    0.000 1253.884    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1641656    1.905    0.000  882.600    0.001 GerrymanderingMCMC.py:190(__district_size)
315482734  177.982    0.000  723.351    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10102    9.975    0.001  302.140    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.038    0.000   40.747    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.055    0.000   39.352    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.308    0.001   39.232    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.094    0.000   26.735    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.230    0.000   14.489    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.090    0.000    2.236    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.282    0.000    0.853    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.670    0.670 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
