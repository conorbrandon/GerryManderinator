         5125072533 function calls (5124950494 primitive calls) in 1840.991 seconds
        1   11.750   11.750 1840.214 1840.214 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    6.409    0.001 1828.431    0.181 GerrymanderingMCMC.py:235(recombination_of_districts)
   393773    2.749    0.000 1201.857    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1575092    1.857    0.000  843.956    0.001 GerrymanderingMCMC.py:190(__district_size)
303299846  172.651    0.000  691.006    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10102    9.950    0.001  304.242    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.060    0.000   40.511    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.057    0.000   39.092    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.236    0.001   38.971    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.096    0.000   26.807    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.203    0.000   14.261    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.098    0.000    2.246    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.278    0.000    0.864    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.746    0.746 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
