         4737867697 function calls (4737745658 primitive calls) in 1706.553 seconds
        1   12.072   12.072 1705.802 1705.802 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.745    0.001 1693.701    0.168 GerrymanderingMCMC.py:235(recombination_of_districts)
   360470    2.475    0.000 1067.820    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1441880    1.755    0.000  748.105    0.001 GerrymanderingMCMC.py:190(__district_size)
270046132  150.055    0.000  611.178    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100    9.961    0.001  302.871    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.041    0.000   40.200    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.057    0.000   38.750    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   12.976    0.001   38.628    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.101    0.000   26.564    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.219    0.000   14.325    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.094    0.000    2.261    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.274    0.000    0.856    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.719    0.719 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
