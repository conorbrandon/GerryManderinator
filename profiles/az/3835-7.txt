         4614160112 function calls (4614038073 primitive calls) in 1670.264 seconds
        1   11.561   11.561 1669.537 1669.537 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.512    0.001 1657.945    0.164 GerrymanderingMCMC.py:235(recombination_of_districts)
   346124    2.414    0.000 1033.512    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1384496    1.668    0.000  728.246    0.001 GerrymanderingMCMC.py:190(__district_size)
259581948  147.153    0.000  595.153    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10103    9.977    0.001  301.897    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.040    0.000   40.495    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.056    0.000   39.085    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.431    0.001   38.964    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.094    0.000   26.764    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.194    0.000   14.257    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.089    0.000    2.224    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.280    0.000    0.879    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.694    0.694 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
