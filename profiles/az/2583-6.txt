         5328081918 function calls (5327959879 primitive calls) in 1919.918 seconds
        1   12.298   12.298 1919.163 1919.163 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    6.682    0.001 1906.834    0.189 GerrymanderingMCMC.py:235(recombination_of_districts)
   415387    2.907    0.000 1278.215    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1661548    1.996    0.000  899.278    0.001 GerrymanderingMCMC.py:190(__district_size)
320791064  183.814    0.000  737.523    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10102   10.002    0.001  302.472    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.043    0.000   40.917    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.059    0.000   39.484    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.286    0.001   39.356    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.098    0.000   26.914    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.252    0.000   14.428    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.098    0.000    2.286    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.283    0.000    0.854    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.722    0.722 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
