         4687155262 function calls (4687033223 primitive calls) in 1704.247 seconds
        1   11.330   11.330 1703.487 1703.487 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.594    0.001 1692.129    0.168 GerrymanderingMCMC.py:235(recombination_of_districts)
   354842    2.547    0.000 1060.311    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1419368    1.717    0.000  744.853    0.001 GerrymanderingMCMC.py:190(__district_size)
265900434  150.557    0.000  610.978    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   10.028    0.001  305.695    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.041    0.000   40.744    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.055    0.000   39.338    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.148    0.001   39.221    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.092    0.000   26.829    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.173    0.000   14.407    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.094    0.000    2.235    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.279    0.000    0.840    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.725    0.725 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.032    0.032 GerrymanderingMCMC.py:21(__init__)
        1    0.006    0.006    0.032    0.032 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.007    0.007 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
