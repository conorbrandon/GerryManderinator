         5350688699 function calls (5350566660 primitive calls) in 1934.194 seconds
        1   11.640   11.640 1933.462 1933.462 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    6.775    0.001 1921.754    0.190 GerrymanderingMCMC.py:235(recombination_of_districts)
   406692    2.842    0.000 1292.575    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1626768    2.059    0.000  910.373    0.001 GerrymanderingMCMC.py:190(__district_size)
322164362  182.003    0.000  744.582    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10101   10.024    0.001  304.312    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.041    0.000   40.867    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.057    0.000   39.443    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.294    0.001   39.320    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.095    0.000   27.056    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.254    0.000   14.585    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.094    0.000    2.298    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.282    0.000    0.847    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.704    0.704 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
