         5379445641 function calls (5379323602 primitive calls) in 1945.116 seconds
        1   12.006   12.006 1944.299 1944.299 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    6.764    0.001 1932.264    0.191 GerrymanderingMCMC.py:235(recombination_of_districts)
   420810    2.966    0.000 1299.267    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1683240    2.005    0.000  911.255    0.001 GerrymanderingMCMC.py:190(__district_size)
324714186  182.013    0.000  745.289    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   10.013    0.001  305.081    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.043    0.000   40.805    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.060    0.000   39.314    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.185    0.001   39.187    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.096    0.000   27.052    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.255    0.000   14.559    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.096    0.000    2.372    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.281    0.000    0.864    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.777    0.777 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.036    0.036 GerrymanderingMCMC.py:21(__init__)
        1    0.009    0.009    0.036    0.036 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
