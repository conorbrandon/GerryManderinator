         4286145778 function calls (4286023739 primitive calls) in 1571.729 seconds
        1   10.941   10.941 1570.970 1570.970 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    4.949    0.000 1559.982    0.154 GerrymanderingMCMC.py:235(recombination_of_districts)
   316025    2.121    0.000  937.878    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1264100    1.496    0.000  659.130    0.001 GerrymanderingMCMC.py:190(__district_size)
231809576  132.608    0.000  540.832    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100    9.866    0.001  302.276    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.040    0.000   40.734    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.055    0.000   39.342    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.276    0.001   39.223    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.096    0.000   27.022    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.165    0.000   14.352    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.089    0.000    2.240    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.280    0.000    0.852    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.725    0.725 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.030    0.030 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
