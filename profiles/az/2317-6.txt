         4622564854 function calls (4622442815 primitive calls) in 1674.771 seconds
        1   10.987   10.987 1674.033 1674.033 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.503    0.001 1662.964    0.165 GerrymanderingMCMC.py:235(recombination_of_districts)
   349813    2.405    0.000 1037.810    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1399252    1.647    0.000  731.417    0.001 GerrymanderingMCMC.py:190(__district_size)
259732188  147.766    0.000  599.682    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100    9.925    0.001  304.455    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.040    0.000   40.134    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.055    0.000   38.749    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.153    0.001   38.630    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.093    0.000   26.601    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.189    0.000   14.280    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.103    0.000    2.227    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.286    0.000    0.842    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.705    0.705 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
