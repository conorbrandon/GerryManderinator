         4510285753 function calls (4510163714 primitive calls) in 1634.120 seconds
        1   12.176   12.176 1633.412 1633.412 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.333    0.001 1621.207    0.161 GerrymanderingMCMC.py:235(recombination_of_districts)
   335485    2.357    0.000  997.309    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1341940    1.574    0.000  701.548    0.001 GerrymanderingMCMC.py:190(__district_size)
250604936  141.987    0.000  575.377    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10103    9.891    0.001  302.060    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.041    0.000   40.220    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.059    0.000   38.795    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.061    0.001   38.668    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.095    0.000   26.548    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.193    0.000   14.242    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.095    0.000    2.292    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.279    0.000    0.837    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.674    0.674 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
