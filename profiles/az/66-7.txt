         4619695364 function calls (4619573325 primitive calls) in 1649.823 seconds
        1   11.094   11.094 1649.084 1649.084 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.541    0.001 1637.917    0.162 GerrymanderingMCMC.py:235(recombination_of_districts)
   355013    2.416    0.000 1024.809    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1420052    1.677    0.000  720.476    0.001 GerrymanderingMCMC.py:190(__district_size)
260012680  143.706    0.000  591.681    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10101    9.649    0.001  295.887    0.029 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.039    0.000   40.095    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.055    0.000   38.702    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   12.937    0.001   38.587    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.090    0.000   26.538    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.142    0.000   14.118    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.089    0.000    2.176    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.281    0.000    0.849    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.706    0.706 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
