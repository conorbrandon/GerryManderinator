         5013205443 function calls (5013083404 primitive calls) in 1822.854 seconds
        1   11.590   11.590 1822.065 1822.065 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    6.209    0.001 1810.414    0.179 GerrymanderingMCMC.py:235(recombination_of_districts)
   374907    2.665    0.000 1176.027    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1499628    1.789    0.000  826.907    0.001 GerrymanderingMCMC.py:190(__district_size)
293180058  166.106    0.000  677.507    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10102   10.047    0.001  307.673    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.042    0.000   40.999    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.057    0.000   39.584    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.323    0.001   39.461    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.097    0.000   27.084    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.167    0.000   14.527    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.093    0.000    2.336    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.299    0.000    0.889    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.756    0.756 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.006    0.006    0.030    0.030 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.007    0.007 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
