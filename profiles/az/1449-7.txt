         5591128893 function calls (5591006854 primitive calls) in 2003.887 seconds
        1   11.626   11.626 2003.088 2003.088 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    6.980    0.001 1991.433    0.197 GerrymanderingMCMC.py:235(recombination_of_districts)
   434160    3.077    0.000 1366.715    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1736640    2.074    0.000  965.948    0.001 GerrymanderingMCMC.py:190(__district_size)
343105438  194.663    0.000  790.050    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10102    9.938    0.001  301.788    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.040    0.000   40.447    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.058    0.000   39.016    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.169    0.001   38.892    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.093    0.000   26.745    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.264    0.000   14.482    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.092    0.000    2.241    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.292    0.000    0.872    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.765    0.765 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.006    0.006    0.030    0.030 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.007    0.007 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
