         4969067891 function calls (4968945852 primitive calls) in 1811.265 seconds
        1   11.060   11.060 1810.560 1810.560 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    6.137    0.001 1799.471    0.178 GerrymanderingMCMC.py:235(recombination_of_districts)
   390274    2.702    0.000 1171.918    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1561096    1.919    0.000  823.294    0.001 GerrymanderingMCMC.py:190(__district_size)
289925010  165.608    0.000  674.475    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   10.667    0.001  304.928    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.042    0.000   40.805    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.056    0.000   39.340    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.340    0.001   39.221    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.092    0.000   27.028    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.178    0.000   14.516    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.091    0.000    2.256    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.303    0.000    0.894    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.673    0.673 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.006    0.006    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
