         5142449812 function calls (5142327773 primitive calls) in 1845.421 seconds
        1   11.599   11.599 1844.717 1844.717 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    6.244    0.001 1833.085    0.181 GerrymanderingMCMC.py:235(recombination_of_districts)
   398309    2.723    0.000 1214.757    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1593236    1.883    0.000  855.381    0.001 GerrymanderingMCMC.py:190(__district_size)
305026506  170.832    0.000  702.820    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10103    9.718    0.001  298.834    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.040    0.000   40.312    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.057    0.000   38.888    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.027    0.001   38.760    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.092    0.000   26.725    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.246    0.000   14.328    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.103    0.000    2.229    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.298    0.000    0.887    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.670    0.670 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.006    0.006    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
