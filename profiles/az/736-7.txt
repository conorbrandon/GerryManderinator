         5189081614 function calls (5188959575 primitive calls) in 1883.983 seconds
        1   11.145   11.145 1883.202 1883.202 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    6.419    0.001 1872.024    0.185 GerrymanderingMCMC.py:235(recombination_of_districts)
   396866    2.739    0.000 1241.274    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1587464    1.900    0.000  876.035    0.001 GerrymanderingMCMC.py:190(__district_size)
308224370  176.325    0.000  716.452    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10101   10.059    0.001  305.808    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.039    0.000   40.622    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.055    0.000   39.206    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.060    0.001   39.090    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.101    0.000   26.820    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.165    0.000   14.487    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.096    0.000    2.316    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.299    0.000    0.889    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.748    0.748 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.006    0.006    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
