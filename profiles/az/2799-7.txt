         4749756821 function calls (4749634782 primitive calls) in 1725.993 seconds
        1   11.447   11.447 1725.218 1725.218 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.753    0.001 1713.742    0.170 GerrymanderingMCMC.py:235(recombination_of_districts)
   355594    2.438    0.000 1082.484    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1422376    1.712    0.000  761.819    0.001 GerrymanderingMCMC.py:190(__district_size)
270354284  151.645    0.000  623.234    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10101   10.160    0.001  308.477    0.031 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.041    0.000   40.808    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.056    0.000   39.385    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.128    0.001   39.264    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.094    0.000   26.893    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.201    0.000   14.632    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.091    0.000    2.247    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.281    0.000    0.848    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.742    0.742 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
