         4085881555 function calls (4085759516 primitive calls) in 1488.324 seconds
        1   10.998   10.998 1487.584 1487.584 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    4.656    0.000 1476.526    0.146 GerrymanderingMCMC.py:235(recombination_of_districts)
   293434    2.064    0.000  854.717    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1173736    1.450    0.000  599.730    0.001 GerrymanderingMCMC.py:190(__district_size)
213861730  121.372    0.000  490.943    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100    9.996    0.001  302.857    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.040    0.000   40.239    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.057    0.000   38.836    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   12.900    0.001   38.709    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.092    0.000   26.728    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.150    0.000   14.298    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.091    0.000    2.235    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.271    0.000    0.823    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.707    0.707 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
