         5000560013 function calls (5000437974 primitive calls) in 1810.479 seconds
        1   11.690   11.690 1809.781 1809.781 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    6.156    0.001 1798.062    0.178 GerrymanderingMCMC.py:235(recombination_of_districts)
   379177    2.558    0.000 1170.858    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1516708    1.825    0.000  824.981    0.001 GerrymanderingMCMC.py:190(__district_size)
292051580  168.295    0.000  676.056    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10101   10.047    0.001  304.724    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.042    0.000   40.595    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.058    0.000   39.158    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.123    0.001   39.035    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.093    0.000   26.983    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.203    0.000   14.555    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.092    0.000    2.255    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.282    0.000    0.895    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.666    0.666 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
