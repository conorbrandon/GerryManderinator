         5218669268 function calls (5218547229 primitive calls) in 1865.145 seconds
        1   11.502   11.502 1864.397 1864.397 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    6.365    0.001 1852.865    0.183 GerrymanderingMCMC.py:235(recombination_of_districts)
   404473    2.783    0.000 1226.011    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1617892    1.884    0.000  861.216    0.001 GerrymanderingMCMC.py:190(__district_size)
310944948  170.443    0.000  705.823    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10101   10.024    0.001  303.693    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.043    0.000   40.041    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.057    0.000   38.611    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.007    0.001   38.491    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.112    0.000   26.504    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.231    0.000   14.358    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.092    0.000    2.232    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.279    0.000    0.849    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.716    0.716 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.006    0.006    0.030    0.030 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
