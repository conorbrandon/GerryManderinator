         5020216101 function calls (5020094062 primitive calls) in 1818.813 seconds
        1   11.331   11.331 1818.038 1818.038 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    6.222    0.001 1806.678    0.179 GerrymanderingMCMC.py:235(recombination_of_districts)
   384805    2.648    0.000 1178.930    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1539220    1.826    0.000  829.277    0.001 GerrymanderingMCMC.py:190(__district_size)
294680496  166.348    0.000  679.725    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10101    9.886    0.001  303.504    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.042    0.000   40.669    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.058    0.000   39.218    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.232    0.001   39.091    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.094    0.000   26.965    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.173    0.000   14.385    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.107    0.000    2.319    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.290    0.000    0.864    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.742    0.742 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.006    0.006    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
