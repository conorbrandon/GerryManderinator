         4770619435 function calls (4770497396 primitive calls) in 1717.791 seconds
        1   11.494   11.494 1717.038 1717.038 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.785    0.001 1705.513    0.169 GerrymanderingMCMC.py:235(recombination_of_districts)
   357591    2.441    0.000 1076.510    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1430364    1.693    0.000  757.262    0.001 GerrymanderingMCMC.py:190(__district_size)
272187116  150.594    0.000  620.938    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10103   10.054    0.001  306.448    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.040    0.000   40.705    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.058    0.000   39.278    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.231    0.001   39.155    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.094    0.000   26.886    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.157    0.000   14.383    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.106    0.000    2.273    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.284    0.000    0.842    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.720    0.720 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.006    0.006    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
