         5310011328 function calls (5309889289 primitive calls) in 1904.408 seconds
        1   11.298   11.298 1903.621 1903.621 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    6.626    0.001 1892.290    0.187 GerrymanderingMCMC.py:235(recombination_of_districts)
   405344    2.835    0.000 1262.125    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1621376    1.920    0.000  887.144    0.001 GerrymanderingMCMC.py:190(__district_size)
318803120  178.713    0.000  725.991    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10101   10.137    0.001  306.419    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.042    0.000   40.490    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.059    0.000   38.975    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   12.963    0.001   38.849    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.098    0.000   26.792    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.256    0.000   14.480    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.096    0.000    2.311    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.280    0.000    0.848    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.754    0.754 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.007    0.007 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
