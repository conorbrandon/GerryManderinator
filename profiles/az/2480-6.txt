         4849876233 function calls (4849754194 primitive calls) in 1742.124 seconds
        1   11.197   11.197 1741.296 1741.296 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.990    0.001 1730.042    0.171 GerrymanderingMCMC.py:235(recombination_of_districts)
   370967    2.591    0.000 1109.706    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1483868    1.728    0.000  781.668    0.001 GerrymanderingMCMC.py:190(__district_size)
280146102  155.649    0.000  641.089    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10104    9.634    0.001  300.720    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.043    0.000   40.610    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.056    0.000   39.190    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   12.940    0.001   39.069    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.092    0.000   26.691    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.199    0.000   14.175    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.092    0.000    2.263    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.275    0.000    0.853    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.795    0.795 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
