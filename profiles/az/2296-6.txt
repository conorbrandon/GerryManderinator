         4865492066 function calls (4865370027 primitive calls) in 1753.358 seconds
        1   12.171   12.171 1752.617 1752.617 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.831    0.001 1740.382    0.172 GerrymanderingMCMC.py:235(recombination_of_districts)
   370854    2.569    0.000 1111.526    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1483416    1.737    0.000  780.061    0.001 GerrymanderingMCMC.py:190(__district_size)
280666232  155.992    0.000  639.913    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100    9.928    0.001  302.505    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.042    0.000   40.803    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.058    0.000   39.381    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.172    0.001   39.246    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.098    0.000   27.090    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.188    0.000   14.371    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.097    0.000    2.304    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.280    0.000    0.871    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.708    0.708 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.006    0.006    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
