         5111020971 function calls (5110898932 primitive calls) in 1847.447 seconds
        1   11.290   11.290 1846.705 1846.705 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    6.315    0.001 1835.386    0.182 GerrymanderingMCMC.py:235(recombination_of_districts)
   397243    2.910    0.000 1206.183    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1588972    1.925    0.000  846.861    0.001 GerrymanderingMCMC.py:190(__district_size)
302260152  169.689    0.000  691.559    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10101    9.779    0.001  302.737    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.041    0.000   40.358    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.055    0.000   38.909    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.114    0.001   38.789    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.110    0.000   26.696    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.162    0.000   14.438    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.092    0.000    2.253    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.280    0.000    0.858    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.708    0.708 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.030    0.030 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
