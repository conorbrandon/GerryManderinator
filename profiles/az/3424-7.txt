         4705648507 function calls (4705526468 primitive calls) in 1702.763 seconds
        1   11.014   11.014 1702.026 1702.026 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.625    0.001 1690.982    0.167 GerrymanderingMCMC.py:235(recombination_of_districts)
   352577    2.555    0.000 1067.727    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1410308    1.637    0.000  750.033    0.001 GerrymanderingMCMC.py:190(__district_size)
267100558  148.957    0.000  614.466    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10102    9.839    0.001  300.890    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.042    0.000   40.425    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.055    0.000   38.994    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.100    0.001   38.877    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.091    0.000   26.792    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.127    0.000   14.319    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.091    0.000    2.190    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.298    0.000    0.864    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.707    0.707 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.006    0.006    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
