         4504131746 function calls (4504009707 primitive calls) in 1642.678 seconds
        1   11.658   11.658 1641.971 1641.971 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.339    0.001 1630.283    0.161 GerrymanderingMCMC.py:235(recombination_of_districts)
   329492    2.303    0.000 1003.184    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1317968    1.565    0.000  707.882    0.001 GerrymanderingMCMC.py:190(__district_size)
249758884  142.324    0.000  580.624    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10101   10.180    0.001  304.674    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.042    0.000   41.122    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.057    0.000   39.709    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.389    0.001   39.589    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.094    0.000   27.324    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.226    0.000   14.482    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.110    0.000    2.292    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.287    0.000    0.885    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.675    0.675 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.030    0.030 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
