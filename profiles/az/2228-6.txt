         5059423984 function calls (5059301945 primitive calls) in 1823.631 seconds
        1   11.388   11.388 1822.898 1822.898 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    6.203    0.001 1811.479    0.179 GerrymanderingMCMC.py:235(recombination_of_districts)
   391643    2.689    0.000 1184.533    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1566572    1.899    0.000  832.801    0.001 GerrymanderingMCMC.py:190(__district_size)
297368376  168.686    0.000  683.038    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10101   10.073    0.001  304.408    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.040    0.000   40.554    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.059    0.000   39.103    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.352    0.001   38.980    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.092    0.000   26.933    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.195    0.000   14.369    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.093    0.000    2.231    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.284    0.000    0.861    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.709    0.709 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
