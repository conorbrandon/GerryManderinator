         4831792743 function calls (4831670704 primitive calls) in 1748.356 seconds
        1   11.910   11.910 1747.649 1747.649 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.857    0.001 1735.685    0.172 GerrymanderingMCMC.py:235(recombination_of_districts)
   365050    2.620    0.000 1105.863    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1460200    1.730    0.000  774.097    0.001 GerrymanderingMCMC.py:190(__district_size)
277869090  156.128    0.000  633.078    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10105   10.005    0.001  304.197    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.043    0.000   40.728    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.058    0.000   39.245    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.209    0.001   39.120    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.098    0.000   26.961    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.217    0.000   14.404    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.102    0.000    2.295    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.277    0.000    0.840    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.674    0.674 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
