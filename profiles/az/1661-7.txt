         4938734079 function calls (4938612040 primitive calls) in 1788.196 seconds
        1   11.339   11.339 1787.486 1787.486 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    6.130    0.001 1776.118    0.176 GerrymanderingMCMC.py:235(recombination_of_districts)
   378293    2.606    0.000 1145.248    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1513172    1.800    0.000  804.101    0.001 GerrymanderingMCMC.py:190(__district_size)
287137888  160.948    0.000  658.350    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10103   10.170    0.001  306.352    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.040    0.000   40.814    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.060    0.000   39.344    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.325    0.001   39.217    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.095    0.000   27.038    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.174    0.000   14.553    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.109    0.000    2.310    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.299    0.000    0.890    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.682    0.682 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
