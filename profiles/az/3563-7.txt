         4979190671 function calls (4979068632 primitive calls) in 1790.465 seconds
        1   10.821   10.821 1789.703 1789.703 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    6.154    0.001 1778.853    0.176 GerrymanderingMCMC.py:235(recombination_of_districts)
   376644    2.638    0.000 1156.744    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1506576    1.801    0.000  814.797    0.001 GerrymanderingMCMC.py:190(__district_size)
290201558  160.977    0.000  668.252    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10101    9.955    0.001  303.136    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.040    0.000   40.762    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.056    0.000   39.364    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.216    0.001   39.245    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.094    0.000   27.016    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.194    0.000   14.434    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.098    0.000    2.279    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.282    0.000    0.867    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.730    0.730 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
