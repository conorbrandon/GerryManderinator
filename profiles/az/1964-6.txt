         5337252258 function calls (5337130219 primitive calls) in 1923.235 seconds
        1   11.128   11.128 1922.494 1922.494 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    6.756    0.001 1911.337    0.189 GerrymanderingMCMC.py:235(recombination_of_districts)
   415393    3.027    0.000 1284.378    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1661572    1.965    0.000  902.799    0.001 GerrymanderingMCMC.py:190(__district_size)
321215394  180.890    0.000  741.108    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10102   10.180    0.001  305.089    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.054    0.000   40.540    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.055    0.000   39.108    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   12.965    0.001   38.990    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.091    0.000   26.955    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.160    0.000   14.445    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.101    0.000    2.248    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.279    0.000    0.856    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.708    0.708 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.006    0.006    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
