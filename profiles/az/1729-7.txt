         5371809823 function calls (5371687784 primitive calls) in 1936.733 seconds
        1   11.424   11.424 1935.835 1935.835 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    6.739    0.001 1924.381    0.191 GerrymanderingMCMC.py:235(recombination_of_districts)
   421184    2.960    0.000 1300.346    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1684736    2.020    0.000  914.536    0.001 GerrymanderingMCMC.py:190(__district_size)
324614298  181.674    0.000  749.628    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10102    9.840    0.001  301.270    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.041    0.000   40.725    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.064    0.000   39.306    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.265    0.001   39.174    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.096    0.000   26.851    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.179    0.000   14.452    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.121    0.000    2.357    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.287    0.000    0.878    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.865    0.865 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
