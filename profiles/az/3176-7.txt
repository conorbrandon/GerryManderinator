         4699296525 function calls (4699174486 primitive calls) in 1699.265 seconds
        1   11.708   11.708 1698.558 1698.558 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.658    0.001 1686.823    0.167 GerrymanderingMCMC.py:235(recombination_of_districts)
   352000    2.481    0.000 1062.426    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1408000    1.697    0.000  749.533    0.001 GerrymanderingMCMC.py:190(__district_size)
266832586  150.431    0.000  615.227    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   10.129    0.001  303.316    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.041    0.000   40.815    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.056    0.000   39.415    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.335    0.001   39.293    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.094    0.000   27.053    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.196    0.000   14.324    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.095    0.000    2.250    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.281    0.000    0.866    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.675    0.675 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
