         4575289673 function calls (4575167634 primitive calls) in 1636.275 seconds
        1   11.244   11.244 1635.465 1635.465 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.457    0.001 1624.193    0.161 GerrymanderingMCMC.py:235(recombination_of_districts)
   342346    2.363    0.000 1004.629    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1369384    1.607    0.000  704.448    0.001 GerrymanderingMCMC.py:190(__district_size)
256092020  143.120    0.000  577.902    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100    9.817    0.001  299.109    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.039    0.000   39.988    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.056    0.000   38.593    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.079    0.001   38.472    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.094    0.000   26.430    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.119    0.000   14.140    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.088    0.000    2.207    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.275    0.000    0.845    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.778    0.778 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
