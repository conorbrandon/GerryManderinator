         4386279432 function calls (4386157393 primitive calls) in 1581.861 seconds
        1   11.705   11.705 1581.123 1581.123 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.119    0.001 1569.348    0.155 GerrymanderingMCMC.py:235(recombination_of_districts)
   320116    2.208    0.000  944.849    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1280464    1.530    0.000  664.643    0.001 GerrymanderingMCMC.py:190(__district_size)
239456126  132.092    0.000  544.926    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   10.041    0.001  302.641    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.041    0.000   40.279    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.059    0.000   38.855    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.043    0.001   38.731    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.094    0.000   26.645    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.154    0.000   14.341    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.097    0.000    2.283    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.276    0.000    0.845    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.705    0.705 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
