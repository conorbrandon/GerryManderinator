         5001204006 function calls (5001081967 primitive calls) in 1796.841 seconds
        1   11.548   11.548 1796.115 1796.115 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    6.129    0.001 1784.538    0.177 GerrymanderingMCMC.py:235(recombination_of_districts)
   375594    2.612    0.000 1154.827    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1502376    1.766    0.000  812.715    0.001 GerrymanderingMCMC.py:190(__district_size)
291646630  163.381    0.000  667.634    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10103   10.017    0.001  307.566    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.040    0.000   40.548    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.056    0.000   39.074    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.122    0.001   38.955    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.101    0.000   26.762    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.201    0.000   14.465    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.091    0.000    2.230    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.283    0.000    0.862    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.693    0.693 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
