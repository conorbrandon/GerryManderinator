         4684068879 function calls (4683946840 primitive calls) in 1702.858 seconds
        1   11.649   11.649 1702.012 1702.012 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.708    0.001 1690.331    0.167 GerrymanderingMCMC.py:235(recombination_of_districts)
   352003    2.423    0.000 1062.219    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1408012    1.693    0.000  746.302    0.001 GerrymanderingMCMC.py:190(__district_size)
265578786  151.017    0.000  612.684    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10101   10.038    0.001  303.645    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.040    0.000   41.015    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.060    0.000   39.600    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.398    0.001   39.470    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.094    0.000   27.082    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.189    0.000   14.535    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.113    0.000    2.317    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.291    0.000    0.876    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.788    0.788 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.053    0.053 GerrymanderingMCMC.py:21(__init__)
        1    0.010    0.010    0.052    0.052 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.013    0.013 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
