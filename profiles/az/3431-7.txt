         5160572540 function calls (5160450501 primitive calls) in 1873.253 seconds
        1   11.055   11.055 1872.460 1872.460 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    6.371    0.001 1861.376    0.184 GerrymanderingMCMC.py:235(recombination_of_districts)
   400992    2.772    0.000 1234.607    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1603968    1.978    0.000  867.989    0.001 GerrymanderingMCMC.py:190(__district_size)
306001940  174.042    0.000  712.876    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100    9.865    0.001  306.084    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.050    0.000   41.057    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.058    0.000   39.660    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.348    0.001   39.536    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.094    0.000   27.230    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.215    0.000   14.574    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.093    0.000    2.217    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.289    0.000    0.894    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.761    0.761 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
