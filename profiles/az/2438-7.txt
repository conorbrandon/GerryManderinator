         5013307397 function calls (5013185358 primitive calls) in 1794.063 seconds
        1   12.084   12.084 1793.368 1793.368 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    6.119    0.001 1781.255    0.176 GerrymanderingMCMC.py:235(recombination_of_districts)
   379970    2.653    0.000 1158.651    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1519880    1.784    0.000  813.599    0.001 GerrymanderingMCMC.py:190(__district_size)
293650088  164.221    0.000  667.625    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10102   10.063    0.001  301.801    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.041    0.000   40.477    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.073    0.000   39.011    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.220    0.001   38.874    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.093    0.000   26.748    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.212    0.000   14.461    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.091    0.000    2.260    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.281    0.000    0.850    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.667    0.667 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
