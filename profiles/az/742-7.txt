         4620409521 function calls (4620287482 primitive calls) in 1700.792 seconds
        1   11.303   11.303 1700.055 1700.055 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.571    0.001 1688.722    0.167 GerrymanderingMCMC.py:235(recombination_of_districts)
   348564    2.398    0.000 1060.365    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1394256    1.702    0.000  742.655    0.001 GerrymanderingMCMC.py:190(__district_size)
259890396  148.634    0.000  609.438    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10102   10.093    0.001  304.918    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.041    0.000   41.269    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.056    0.000   39.854    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.485    0.001   39.735    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.112    0.000   27.444    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.218    0.000   14.702    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.090    0.000    2.214    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.294    0.000    0.879    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.704    0.704 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.006    0.006    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
