         4955870885 function calls (4955748846 primitive calls) in 1790.484 seconds
        1   11.621   11.621 1789.619 1789.619 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    6.113    0.001 1777.963    0.176 GerrymanderingMCMC.py:235(recombination_of_districts)
   383960    2.648    0.000 1153.960    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1535840    1.838    0.000  811.112    0.001 GerrymanderingMCMC.py:190(__district_size)
289068214  160.841    0.000  665.848    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10102    9.750    0.001  299.568    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.040    0.000   40.922    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.057    0.000   39.510    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.355    0.001   39.387    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.093    0.000   26.955    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.235    0.000   14.378    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.093    0.000    2.233    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.278    0.000    0.860    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.832    0.832 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
