         5000266052 function calls (5000144013 primitive calls) in 1796.562 seconds
        1   11.261   11.261 1795.849 1795.849 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    6.163    0.001 1784.558    0.177 GerrymanderingMCMC.py:235(recombination_of_districts)
   382971    2.677    0.000 1159.278    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1531884    1.823    0.000  813.963    0.001 GerrymanderingMCMC.py:190(__district_size)
292198386  162.596    0.000  666.999    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10102    9.988    0.001  302.684    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.040    0.000   40.483    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.056    0.000   39.031    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.003    0.001   38.912    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.094    0.000   26.959    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.136    0.000   14.286    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.089    0.000    2.231    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.299    0.000    0.869    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.681    0.681 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
