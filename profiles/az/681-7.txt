         4905581935 function calls (4905459896 primitive calls) in 1758.434 seconds
        1   11.488   11.488 1757.629 1757.629 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.965    0.001 1746.106    0.173 GerrymanderingMCMC.py:235(recombination_of_districts)
   376419    2.551    0.000 1125.402    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1505676    1.777    0.000  790.627    0.001 GerrymanderingMCMC.py:190(__district_size)
284532658  157.736    0.000  645.813    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10101   10.141    0.001  302.113    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.041    0.000   39.948    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.056    0.000   38.555    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   12.858    0.001   38.436    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.091    0.000   26.388    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.145    0.000   14.222    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.090    0.000    2.224    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.273    0.000    0.832    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.772    0.772 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
