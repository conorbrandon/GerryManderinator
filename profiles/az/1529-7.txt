         4774968277 function calls (4774846238 primitive calls) in 1724.342 seconds
        1   12.577   12.577 1723.645 1723.645 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.792    0.001 1711.038    0.169 GerrymanderingMCMC.py:235(recombination_of_districts)
   358002    2.542    0.000 1079.162    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1432008    1.699    0.000  753.621    0.001 GerrymanderingMCMC.py:190(__district_size)
272513590  151.352    0.000  617.688    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10103   10.072    0.001  306.749    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.046    0.000   40.469    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.059    0.000   38.983    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.105    0.001   38.857    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.098    0.000   26.837    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.239    0.000   14.595    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.099    0.000    2.352    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.277    0.000    0.848    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.666    0.666 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
