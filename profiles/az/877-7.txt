         4798772192 function calls (4798650153 primitive calls) in 1714.948 seconds
        1   11.050   11.050 1714.193 1714.193 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.764    0.001 1703.071    0.169 GerrymanderingMCMC.py:235(recombination_of_districts)
   358913    2.478    0.000 1083.187    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1435652    1.724    0.000  759.270    0.001 GerrymanderingMCMC.py:190(__district_size)
274736386  152.691    0.000  621.967    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10101    9.960    0.001  303.057    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.039    0.000   40.156    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.061    0.000   38.776    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   12.928    0.001   38.654    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.091    0.000   26.652    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.145    0.000   14.357    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.088    0.000    2.159    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.277    0.000    0.857    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.731    0.731 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
