         4675101986 function calls (4674979947 primitive calls) in 1705.302 seconds
        1   12.139   12.139 1704.555 1704.555 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.643    0.001 1692.380    0.168 GerrymanderingMCMC.py:235(recombination_of_districts)
   350677    2.475    0.000 1063.559    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1402708    1.684    0.000  745.040    0.001 GerrymanderingMCMC.py:190(__district_size)
264524296  148.944    0.000  611.171    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   10.200    0.001  304.442    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.043    0.000   40.584    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.060    0.000   39.120    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.320    0.001   38.993    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.124    0.000   26.974    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.192    0.000   14.587    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.110    0.000    2.328    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.283    0.000    0.849    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.715    0.715 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
