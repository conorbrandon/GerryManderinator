         5208489775 function calls (5208367736 primitive calls) in 1875.553 seconds
        1   11.543   11.543 1874.824 1874.824 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    6.523    0.001 1863.248    0.184 GerrymanderingMCMC.py:235(recombination_of_districts)
   406702    2.860    0.000 1237.279    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1626808    1.911    0.000  874.031    0.001 GerrymanderingMCMC.py:190(__district_size)
310414416  177.121    0.000  714.011    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   10.121    0.001  303.641    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.038    0.000   40.708    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.057    0.000   39.320    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.219    0.001   39.194    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.094    0.000   26.757    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.189    0.000   14.315    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.096    0.000    2.272    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.281    0.000    0.849    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.697    0.697 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
