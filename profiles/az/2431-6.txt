         5047804351 function calls (5047682312 primitive calls) in 1827.134 seconds
        1   11.004   11.004 1826.437 1826.437 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    6.291    0.001 1815.283    0.180 GerrymanderingMCMC.py:235(recombination_of_districts)
   382980    2.649    0.000 1185.798    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1531920    1.834    0.000  834.624    0.001 GerrymanderingMCMC.py:190(__district_size)
296431610  167.755    0.000  684.482    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10101   10.121    0.001  304.138    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.054    0.000   40.483    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.056    0.000   39.090    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.132    0.001   38.971    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.090    0.000   26.853    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.169    0.000   14.400    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.088    0.000    2.232    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.280    0.000    0.848    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.664    0.664 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.006    0.006    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
