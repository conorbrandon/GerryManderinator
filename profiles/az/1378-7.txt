         5389436680 function calls (5389314641 primitive calls) in 1957.479 seconds
        1   12.263   12.263 1956.771 1956.771 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    6.789    0.001 1944.477    0.193 GerrymanderingMCMC.py:235(recombination_of_districts)
   418034    2.993    0.000 1307.848    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1672136    2.009    0.000  921.373    0.001 GerrymanderingMCMC.py:190(__district_size)
325971192  189.106    0.000  756.182    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10102   10.172    0.001  306.545    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.044    0.000   41.004    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.062    0.000   39.543    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.206    0.001   39.414    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.097    0.000   27.043    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.252    0.000   14.552    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.099    0.000    2.253    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.283    0.000    0.874    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.675    0.675 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
