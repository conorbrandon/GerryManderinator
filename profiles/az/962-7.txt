         5291837206 function calls (5291715167 primitive calls) in 1910.964 seconds
        1   11.566   11.566 1910.187 1910.187 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    6.684    0.001 1898.559    0.188 GerrymanderingMCMC.py:235(recombination_of_districts)
   411290    2.964    0.000 1272.578    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1645160    1.975    0.000  896.471    0.001 GerrymanderingMCMC.py:190(__district_size)
317745172  183.867    0.000  734.345    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10104   10.055    0.001  303.234    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.040    0.000   40.099    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.057    0.000   38.672    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.067    0.001   38.543    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.093    0.000   26.640    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.205    0.000   14.380    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.093    0.000    2.310    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.281    0.000    0.843    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.745    0.745 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
