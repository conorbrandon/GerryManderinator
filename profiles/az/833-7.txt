         4510676143 function calls (4510554104 primitive calls) in 1656.476 seconds
        1   11.164   11.164 1655.739 1655.739 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.400    0.001 1644.530    0.163 GerrymanderingMCMC.py:235(recombination_of_districts)
   332084    2.293    0.000 1015.739    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1328336    1.632    0.000  715.955    0.001 GerrymanderingMCMC.py:190(__district_size)
250907168  146.905    0.000  587.269    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10103    9.950    0.001  304.612    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.041    0.000   41.597    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.065    0.000   40.157    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.334    0.001   40.027    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.093    0.000   27.420    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.188    0.000   14.476    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.102    0.000    2.246    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.282    0.000    0.864    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.704    0.704 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.006    0.006    0.030    0.030 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
