         4035583588 function calls (4035461549 primitive calls) in 1489.091 seconds
        1   11.700   11.700 1488.253 1488.253 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    4.705    0.000 1476.522    0.146 GerrymanderingMCMC.py:235(recombination_of_districts)
   294136    2.122    0.000  851.058    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1176544    1.459    0.000  597.736    0.001 GerrymanderingMCMC.py:190(__district_size)
209860970  121.070    0.000  490.506    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100    9.898    0.001  302.516    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.042    0.000   40.606    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.057    0.000   39.182    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.321    0.001   39.059    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.095    0.000   26.932    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.202    0.000   14.450    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.094    0.000    2.242    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.278    0.000    0.839    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.805    0.805 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.006    0.006    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
