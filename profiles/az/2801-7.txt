         4904621482 function calls (4904499443 primitive calls) in 1763.464 seconds
        1   11.371   11.371 1762.767 1762.767 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.988    0.001 1751.366    0.173 GerrymanderingMCMC.py:235(recombination_of_districts)
   381050    2.646    0.000 1128.312    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1524200    1.781    0.000  791.004    0.001 GerrymanderingMCMC.py:190(__district_size)
284096500  159.860    0.000  648.683    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10102    9.870    0.001  301.888    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.041    0.000   40.105    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.071    0.000   38.695    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.105    0.001   38.557    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.095    0.000   26.545    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.195    0.000   14.365    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.098    0.000    2.316    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.280    0.000    0.843    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.672    0.672 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.006    0.006    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
