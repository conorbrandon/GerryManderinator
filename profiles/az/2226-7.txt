         4737400943 function calls (4737278904 primitive calls) in 1699.326 seconds
        1   11.577   11.577 1698.593 1698.593 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.745    0.001 1686.989    0.167 GerrymanderingMCMC.py:235(recombination_of_districts)
   359745    2.459    0.000 1067.434    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1438980    1.684    0.000  750.788    0.001 GerrymanderingMCMC.py:190(__district_size)
270058910  149.868    0.000  614.917    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10101    9.874    0.001  300.659    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.040    0.000   39.892    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.057    0.000   38.490    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   12.837    0.001   38.368    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.104    0.000   26.405    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.153    0.000   14.264    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.095    0.000    2.251    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.277    0.000    0.840    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.700    0.700 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
