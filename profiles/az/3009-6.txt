         4272905398 function calls (4272783359 primitive calls) in 1550.705 seconds
        1   11.018   11.018 1549.947 1549.947 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.001    0.000 1538.875    0.152 GerrymanderingMCMC.py:235(recombination_of_districts)
   309974    2.202    0.000  913.478    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1239896    1.460    0.000  640.827    0.001 GerrymanderingMCMC.py:190(__district_size)
229952086  129.266    0.000  524.299    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100    9.750    0.001  303.964    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.039    0.000   40.395    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.055    0.000   38.958    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   12.987    0.001   38.841    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.090    0.000   26.727    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.144    0.000   14.274    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.089    0.000    2.190    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.283    0.000    0.854    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.725    0.725 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
