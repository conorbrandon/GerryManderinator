         4598023720 function calls (4597901681 primitive calls) in 1682.566 seconds
        1   11.797   11.797 1681.826 1681.826 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.667    0.001 1669.998    0.165 GerrymanderingMCMC.py:235(recombination_of_districts)
   340605    2.425    0.000 1044.675    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1362420    1.624    0.000  736.136    0.001 GerrymanderingMCMC.py:190(__district_size)
258133966  148.580    0.000  603.702    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100    9.870    0.001  302.743    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.041    0.000   40.724    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.058    0.000   39.297    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.167    0.001   39.172    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.095    0.000   27.001    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.246    0.000   14.494    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.095    0.000    2.292    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.282    0.000    0.864    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.707    0.707 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
