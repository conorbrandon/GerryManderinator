         4789128458 function calls (4789006419 primitive calls) in 1752.711 seconds
        1   11.160   11.160 1751.994 1751.994 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.863    0.001 1740.800    0.172 GerrymanderingMCMC.py:235(recombination_of_districts)
   363613    2.598    0.000 1110.829    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1454452    1.815    0.000  782.770    0.001 GerrymanderingMCMC.py:190(__district_size)
274208278  160.369    0.000  644.352    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100    9.947    0.001  303.552    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.040    0.000   41.521    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.062    0.000   40.055    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.654    0.001   39.929    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.091    0.000   27.423    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.281    0.000   14.616    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.105    0.000    2.283    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.285    0.000    0.864    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.675    0.675 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.006    0.006    0.030    0.030 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
