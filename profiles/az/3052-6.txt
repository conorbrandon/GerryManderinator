         4690327474 function calls (4690205435 primitive calls) in 1703.335 seconds
        1   10.991   10.991 1702.598 1702.598 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.606    0.001 1691.578    0.167 GerrymanderingMCMC.py:235(recombination_of_districts)
   357263    2.492    0.000 1069.293    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1429052    1.715    0.000  753.379    0.001 GerrymanderingMCMC.py:190(__district_size)
266303572  155.050    0.000  615.829    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10101    9.940    0.001  299.352    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.039    0.000   40.918    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.055    0.000   39.535    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.420    0.001   39.417    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.093    0.000   27.110    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.208    0.000   14.310    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.089    0.000    2.151    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.301    0.000    0.866    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.705    0.705 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
