         5128186408 function calls (5128064369 primitive calls) in 1872.328 seconds
        1   11.562   11.562 1871.352 1871.352 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    6.373    0.001 1859.758    0.184 GerrymanderingMCMC.py:235(recombination_of_districts)
   393342    2.792    0.000 1226.826    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1573368    1.949    0.000  861.693    0.001 GerrymanderingMCMC.py:190(__district_size)
303238486  171.136    0.000  706.467    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10101   10.099    0.001  306.633    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.043    0.000   41.368    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.059    0.000   39.934    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.155    0.001   39.807    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.103    0.000   27.365    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.230    0.000   14.748    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.108    0.000    2.331    0.000 GerrymanderingMCMC.py:157(__random_district_label)
        1    0.000    0.000    0.944    0.944 GerrymanderingMCMC.py:1(<module>)
    10100    0.319    0.000    0.917    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.006    0.006    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
