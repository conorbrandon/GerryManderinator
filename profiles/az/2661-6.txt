         5313300497 function calls (5313178458 primitive calls) in 1914.626 seconds
        1   11.346   11.346 1913.868 1913.868 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    6.653    0.001 1902.494    0.188 GerrymanderingMCMC.py:235(recombination_of_districts)
   412463    2.886    0.000 1275.519    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1649852    1.980    0.000  895.515    0.001 GerrymanderingMCMC.py:190(__district_size)
319192906  178.343    0.000  732.699    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10101    9.901    0.001  302.228    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.040    0.000   40.902    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.056    0.000   39.487    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.135    0.001   39.367    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.106    0.000   27.221    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.166    0.000   14.583    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.092    0.000    2.248    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.295    0.000    0.892    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.725    0.725 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.006    0.006    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
