         4959113783 function calls (4958991744 primitive calls) in 1793.418 seconds
        1   11.228   11.228 1792.660 1792.660 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.985    0.001 1781.404    0.176 GerrymanderingMCMC.py:235(recombination_of_districts)
   372729    2.589    0.000 1152.671    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1490916    1.773    0.000  812.603    0.001 GerrymanderingMCMC.py:190(__district_size)
288823566  162.593    0.000  666.257    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10101    9.927    0.001  305.037    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.053    0.000   40.980    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.057    0.000   39.532    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.309    0.001   39.408    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.096    0.000   26.950    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.231    0.000   14.504    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.095    0.000    2.323    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.302    0.000    0.878    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.725    0.725 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.030    0.030 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
