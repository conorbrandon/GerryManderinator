         4407792778 function calls (4407670739 primitive calls) in 1603.397 seconds
        1   11.177   11.177 1602.657 1602.657 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.228    0.001 1591.451    0.158 GerrymanderingMCMC.py:235(recombination_of_districts)
   326532    2.317    0.000  968.050    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1306128    1.556    0.000  681.248    0.001 GerrymanderingMCMC.py:190(__district_size)
241893624  137.306    0.000  557.822    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100    9.882    0.001  302.554    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.040    0.000   40.491    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.055    0.000   39.117    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.117    0.001   38.986    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.091    0.000   26.729    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.221    0.000   14.324    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.091    0.000    2.240    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.272    0.000    0.827    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.708    0.708 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
