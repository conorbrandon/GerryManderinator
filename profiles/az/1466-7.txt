         4733444556 function calls (4733322517 primitive calls) in 1731.513 seconds
        1   11.084   11.084 1730.769 1730.769 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.767    0.001 1719.656    0.170 GerrymanderingMCMC.py:235(recombination_of_districts)
   364698    2.533    0.000 1093.346    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1458792    1.747    0.000  770.149    0.001 GerrymanderingMCMC.py:190(__district_size)
269853262  153.392    0.000  630.875    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100    9.844    0.001  303.631    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.040    0.000   41.177    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.056    0.000   39.784    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.042    0.001   39.664    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.105    0.000   27.230    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.199    0.000   14.472    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.091    0.000    2.253    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.282    0.000    0.858    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.710    0.710 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.006    0.006    0.030    0.030 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.007    0.007 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
