         4496343711 function calls (4496221672 primitive calls) in 1637.683 seconds
        1   10.998   10.998 1636.981 1636.981 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.280    0.001 1625.955    0.161 GerrymanderingMCMC.py:235(recombination_of_districts)
   330945    2.344    0.000 1003.978    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1323780    1.612    0.000  707.237    0.001 GerrymanderingMCMC.py:190(__district_size)
249380264  143.106    0.000  580.466    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10102    9.836    0.001  302.330    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.040    0.000   40.949    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.055    0.000   39.564    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.263    0.001   39.448    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.091    0.000   27.094    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.214    0.000   14.475    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.089    0.000    2.224    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.282    0.000    0.851    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.669    0.669 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
