         4120443824 function calls (4120321785 primitive calls) in 1510.410 seconds
        1   11.440   11.440 1509.653 1509.653 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    4.824    0.000 1498.184    0.148 GerrymanderingMCMC.py:235(recombination_of_districts)
   300967    2.170    0.000  873.848    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1203868    1.480    0.000  614.626    0.001 GerrymanderingMCMC.py:190(__district_size)
217204330  125.747    0.000  503.570    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10101    9.840    0.001  301.293    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.041    0.000   40.834    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.059    0.000   39.411    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.423    0.001   39.285    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.095    0.000   26.892    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.198    0.000   14.426    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.104    0.000    2.260    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.284    0.000    0.851    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.722    0.722 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.031    0.031 GerrymanderingMCMC.py:21(__init__)
        1    0.006    0.006    0.030    0.030 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
