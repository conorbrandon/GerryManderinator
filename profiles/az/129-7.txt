         5013024655 function calls (5012902616 primitive calls) in 1789.224 seconds
        1   11.755   11.755 1788.510 1788.510 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    6.185    0.001 1776.692    0.176 GerrymanderingMCMC.py:235(recombination_of_districts)
   379027    2.686    0.000 1157.062    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1516108    1.779    0.000  813.258    0.001 GerrymanderingMCMC.py:190(__district_size)
293547600  163.161    0.000  667.385    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10101    9.853    0.001  299.527    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.039    0.000   39.705    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.059    0.000   38.294    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   12.898    0.001   38.169    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.095    0.000   26.456    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.173    0.000   14.152    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.097    0.000    2.260    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.293    0.000    0.879    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.681    0.681 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
