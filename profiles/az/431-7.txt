         4785001579 function calls (4784879540 primitive calls) in 1727.769 seconds
        1   11.338   11.338 1727.075 1727.075 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.801    0.001 1715.706    0.170 GerrymanderingMCMC.py:235(recombination_of_districts)
   365459    2.503    0.000 1093.286    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1461836    1.736    0.000  767.939    0.001 GerrymanderingMCMC.py:190(__district_size)
274245556  155.387    0.000  628.974    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10101    9.878    0.001  300.549    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.044    0.000   40.522    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.060    0.000   39.059    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.181    0.001   38.909    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.093    0.000   26.721    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.153    0.000   14.363    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.094    0.000    2.263    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.281    0.000    0.848    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.662    0.662 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
