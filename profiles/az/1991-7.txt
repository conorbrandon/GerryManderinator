         4970358032 function calls (4970235993 primitive calls) in 1790.395 seconds
        1   11.635   11.635 1789.657 1789.657 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.996    0.001 1777.993    0.176 GerrymanderingMCMC.py:235(recombination_of_districts)
   372731    2.529    0.000 1152.774    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1490924    1.805    0.000  811.688    0.001 GerrymanderingMCMC.py:190(__district_size)
289779382  160.638    0.000  663.078    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10101    9.996    0.001  304.426    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.040    0.000   40.604    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.059    0.000   39.164    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.085    0.001   39.039    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.095    0.000   26.782    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.185    0.000   14.327    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.100    0.000    2.277    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.281    0.000    0.844    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.705    0.705 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
