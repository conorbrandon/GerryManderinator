         4984330699 function calls (4984208660 primitive calls) in 1815.160 seconds
        1   11.980   11.980 1814.384 1814.384 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    6.128    0.001 1802.374    0.178 GerrymanderingMCMC.py:235(recombination_of_districts)
   373608    2.674    0.000 1165.564    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1494432    1.848    0.000  821.435    0.001 GerrymanderingMCMC.py:190(__district_size)
290666134  166.666    0.000  673.303    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10101   10.246    0.001  307.898    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.042    0.000   41.466    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.073    0.000   40.021    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.560    0.001   39.880    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.094    0.000   27.377    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.275    0.000   14.606    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.097    0.000    2.297    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.326    0.000    0.926    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.743    0.743 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.030    0.030 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
