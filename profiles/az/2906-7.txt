         4744939111 function calls (4744817072 primitive calls) in 1700.129 seconds
        1   11.438   11.438 1699.434 1699.434 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.812    0.001 1687.958    0.167 GerrymanderingMCMC.py:235(recombination_of_districts)
   360445    2.594    0.000 1071.441    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1441780    1.724    0.000  752.963    0.001 GerrymanderingMCMC.py:190(__district_size)
271066826  149.623    0.000  616.099    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10101    9.881    0.001  299.642    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.040    0.000   39.870    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.056    0.000   38.483    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   12.632    0.001   38.365    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.090    0.000   26.431    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.121    0.000   14.105    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.088    0.000    2.172    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.271    0.000    0.839    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.662    0.662 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
