         4477872939 function calls (4477750900 primitive calls) in 1620.646 seconds
        1   11.745   11.745 1619.878 1619.878 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.263    0.001 1608.104    0.159 GerrymanderingMCMC.py:235(recombination_of_districts)
   326579    2.270    0.000  983.760    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1306316    1.548    0.000  690.662    0.001 GerrymanderingMCMC.py:190(__district_size)
247694544  139.921    0.000  566.045    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10102   10.002    0.001  302.662    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.041    0.000   40.474    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.058    0.000   39.024    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.163    0.001   38.901    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.095    0.000   26.752    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.175    0.000   14.252    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.092    0.000    2.280    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.275    0.000    0.844    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.735    0.735 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.006    0.006    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
