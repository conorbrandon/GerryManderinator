         4670342100 function calls (4670220061 primitive calls) in 1683.093 seconds
        1   11.175   11.175 1682.325 1682.325 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.622    0.001 1671.116    0.165 GerrymanderingMCMC.py:235(recombination_of_districts)
   350466    2.475    0.000 1047.937    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1401864    1.688    0.000  735.800    0.001 GerrymanderingMCMC.py:190(__district_size)
263881170  149.226    0.000  602.222    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10101    9.979    0.001  303.694    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.040    0.000   39.882    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.065    0.000   38.475    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   12.772    0.001   38.343    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.109    0.000   26.556    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.226    0.000   14.391    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.111    0.000    2.309    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.274    0.000    0.846    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.736    0.736 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
