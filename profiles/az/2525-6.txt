         5201556602 function calls (5201434563 primitive calls) in 1877.136 seconds
        1   11.850   11.850 1876.377 1876.377 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    6.551    0.001 1864.498    0.185 GerrymanderingMCMC.py:235(recombination_of_districts)
   396785    2.864    0.000 1234.221    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1587140    1.898    0.000  868.919    0.001 GerrymanderingMCMC.py:190(__district_size)
309948114  176.523    0.000  713.482    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10102   10.047    0.001  304.638    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.041    0.000   40.735    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.058    0.000   39.314    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.241    0.001   39.190    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.103    0.000   26.958    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.254    0.000   14.404    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.092    0.000    2.281    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.289    0.000    0.861    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.726    0.726 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.006    0.006    0.030    0.030 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
