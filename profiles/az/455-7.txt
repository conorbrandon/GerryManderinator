         4563823256 function calls (4563701217 primitive calls) in 1651.603 seconds
        1   11.039   11.039 1650.865 1650.865 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.434    0.001 1639.797    0.162 GerrymanderingMCMC.py:235(recombination_of_districts)
   347051    2.409    0.000 1017.941    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1388204    1.655    0.000  714.295    0.001 GerrymanderingMCMC.py:190(__district_size)
255682466  144.722    0.000  584.948    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10102    9.877    0.001  301.504    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.040    0.000   40.350    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.055    0.000   38.961    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   12.984    0.001   38.843    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.092    0.000   26.744    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.158    0.000   14.255    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.089    0.000    2.203    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.276    0.000    0.834    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.706    0.706 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
