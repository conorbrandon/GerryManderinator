         4988121141 function calls (4987999102 primitive calls) in 1800.212 seconds
        1   12.415   12.415 1799.426 1799.426 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.988    0.001 1786.980    0.177 GerrymanderingMCMC.py:235(recombination_of_districts)
   377841    2.685    0.000 1157.562    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1511364    1.780    0.000  815.774    0.001 GerrymanderingMCMC.py:190(__district_size)
291299948  164.244    0.000  669.581    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10101   10.147    0.001  305.756    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.041    0.000   40.831    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.060    0.000   39.373    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.140    0.001   39.239    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.096    0.000   27.099    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.222    0.000   14.374    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.099    0.000    2.267    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.281    0.000    0.863    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.753    0.753 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
