         4630748815 function calls (4630626776 primitive calls) in 1679.143 seconds
        1   12.008   12.008 1678.405 1678.405 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.512    0.001 1666.366    0.165 GerrymanderingMCMC.py:235(recombination_of_districts)
   346926    2.377    0.000 1032.642    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1387704    1.639    0.000  727.065    0.001 GerrymanderingMCMC.py:190(__district_size)
260573258  145.863    0.000  595.728    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10101   10.202    0.001  309.012    0.031 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.041    0.000   40.641    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.059    0.000   39.194    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.282    0.001   39.068    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.097    0.000   26.816    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.181    0.000   14.376    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.099    0.000    2.283    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.278    0.000    0.858    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.705    0.705 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
