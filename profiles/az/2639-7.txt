         5387929033 function calls (5387806994 primitive calls) in 1932.266 seconds
        1   11.303   11.303 1931.518 1931.518 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    6.678    0.001 1920.187    0.190 GerrymanderingMCMC.py:235(recombination_of_districts)
   416644    2.904    0.000 1295.847    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1666576    1.953    0.000  910.910    0.001 GerrymanderingMCMC.py:190(__district_size)
325531730  183.483    0.000  748.092    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10101    9.844    0.001  303.454    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.040    0.000   40.064    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.056    0.000   38.633    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   12.988    0.001   38.517    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.093    0.000   26.740    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.222    0.000   14.481    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.092    0.000    2.261    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.285    0.000    0.868    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.716    0.716 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.007    0.007 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
