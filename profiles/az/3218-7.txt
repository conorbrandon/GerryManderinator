         4200739292 function calls (4200617253 primitive calls) in 1527.630 seconds
        1   11.973   11.973 1526.859 1526.859 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    4.803    0.000 1514.827    0.150 GerrymanderingMCMC.py:235(recombination_of_districts)
   295539    2.065    0.000  889.544    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1182156    1.403    0.000  625.222    0.001 GerrymanderingMCMC.py:190(__district_size)
223738106  126.925    0.000  513.686    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   10.129    0.001  302.772    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.044    0.000   40.351    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.060    0.000   38.898    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.189    0.001   38.768    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.095    0.000   26.690    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.188    0.000   14.367    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.115    0.000    2.320    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.272    0.000    0.820    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.738    0.738 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
