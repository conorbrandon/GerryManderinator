         4763853112 function calls (4763731073 primitive calls) in 1728.579 seconds
        1   12.005   12.005 1727.870 1727.870 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.771    0.001 1715.831    0.170 GerrymanderingMCMC.py:235(recombination_of_districts)
   364274    2.545    0.000 1087.534    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1457096    1.777    0.000  765.336    0.001 GerrymanderingMCMC.py:190(__district_size)
272286944  154.624    0.000  627.071    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10103   10.015    0.001  305.549    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.042    0.000   40.698    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.059    0.000   39.275    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.205    0.001   39.147    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.100    0.000   26.918    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.180    0.000   14.314    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.107    0.000    2.354    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.288    0.000    0.863    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.676    0.676 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
