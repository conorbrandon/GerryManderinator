         4620462708 function calls (4620340669 primitive calls) in 1688.610 seconds
        1   11.702   11.702 1687.907 1687.907 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.687    0.001 1676.177    0.166 GerrymanderingMCMC.py:235(recombination_of_districts)
   354628    2.455    0.000 1046.536    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1418512    1.686    0.000  738.857    0.001 GerrymanderingMCMC.py:190(__district_size)
259996958  149.828    0.000  605.760    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10103   10.065    0.001  305.943    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.056    0.000   40.934    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.066    0.000   39.480    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.172    0.001   39.348    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.093    0.000   26.997    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.243    0.000   14.458    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.102    0.000    2.288    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.285    0.000    0.876    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.669    0.669 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.006    0.006    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
