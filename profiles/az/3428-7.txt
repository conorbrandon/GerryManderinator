         4821726650 function calls (4821604611 primitive calls) in 1744.234 seconds
        1   11.127   11.127 1743.536 1743.536 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.968    0.001 1732.362    0.172 GerrymanderingMCMC.py:235(recombination_of_districts)
   363987    2.552    0.000 1103.063    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1455948    1.751    0.000  776.940    0.001 GerrymanderingMCMC.py:190(__district_size)
276908890  155.718    0.000  636.509    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10101   10.454    0.001  307.445    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.040    0.000   40.366    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.065    0.000   38.946    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   12.955    0.001   38.813    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.096    0.000   26.813    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.149    0.000   14.332    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.095    0.000    2.297    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.284    0.000    0.855    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.666    0.666 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
