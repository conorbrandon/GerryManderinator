         4429954336 function calls (4429832297 primitive calls) in 1600.858 seconds
        1   11.669   11.669 1600.100 1600.100 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.212    0.001 1588.401    0.157 GerrymanderingMCMC.py:235(recombination_of_districts)
   330569    2.269    0.000  966.272    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1322276    1.544    0.000  679.284    0.001 GerrymanderingMCMC.py:190(__district_size)
243636136  136.510    0.000  556.504    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10103   10.042    0.001  301.908    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.040    0.000   40.094    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.057    0.000   38.662    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   12.951    0.001   38.539    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.091    0.000   26.554    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.179    0.000   14.309    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.094    0.000    2.261    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.284    0.000    0.842    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.725    0.725 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
