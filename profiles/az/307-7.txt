         4408498141 function calls (4408376102 primitive calls) in 1600.653 seconds
        1   11.097   11.097 1599.904 1599.904 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.083    0.001 1588.776    0.157 GerrymanderingMCMC.py:235(recombination_of_districts)
   326418    2.294    0.000  969.263    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1305672    1.545    0.000  682.211    0.001 GerrymanderingMCMC.py:190(__district_size)
241805260  138.687    0.000  556.812    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10101   10.007    0.001  302.129    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.062    0.000   40.083    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.057    0.000   38.648    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   12.998    0.001   38.525    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.093    0.000   26.630    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.209    0.000   14.319    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.090    0.000    2.221    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.277    0.000    0.850    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.717    0.717 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.006    0.006    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
