         4386947519 function calls (4386825480 primitive calls) in 1611.392 seconds
        1   11.655   11.655 1610.616 1610.616 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.240    0.001 1598.930    0.158 GerrymanderingMCMC.py:235(recombination_of_districts)
   324455    2.362    0.000  970.619    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1297820    1.552    0.000  684.026    0.001 GerrymanderingMCMC.py:190(__district_size)
239484114  137.352    0.000  559.391    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10101    9.899    0.001  305.292    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.041    0.000   40.892    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.061    0.000   39.440    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.200    0.001   39.312    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.095    0.000   27.010    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.255    0.000   14.735    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.100    0.000    2.353    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.307    0.000    0.878    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.744    0.744 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
