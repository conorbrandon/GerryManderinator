         5289021557 function calls (5288899518 primitive calls) in 1891.183 seconds
        1   11.321   11.321 1890.370 1890.370 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    6.540    0.001 1879.020    0.186 GerrymanderingMCMC.py:235(recombination_of_districts)
   411715    2.928    0.000 1257.474    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1646860    1.921    0.000  882.217    0.001 GerrymanderingMCMC.py:190(__district_size)
317009436  175.400    0.000  722.106    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100    9.799    0.001  300.402    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.040    0.000   40.564    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.059    0.000   39.152    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.184    0.001   39.026    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.095    0.000   26.918    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.170    0.000   14.413    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.095    0.000    2.299    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.285    0.000    0.861    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.780    0.780 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
