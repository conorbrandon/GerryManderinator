         4777174679 function calls (4777052640 primitive calls) in 1732.674 seconds
        1   11.779   11.779 1731.906 1731.906 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.743    0.001 1720.096    0.170 GerrymanderingMCMC.py:235(recombination_of_districts)
   355882    2.603    0.000 1095.089    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1423528    1.739    0.000  770.826    0.001 GerrymanderingMCMC.py:190(__district_size)
273883492  152.875    0.000  631.002    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10101   10.227    0.001  302.084    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.042    0.000   41.109    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.058    0.000   39.706    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.108    0.001   39.584    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.092    0.000   26.961    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.232    0.000   14.400    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.091    0.000    2.247    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.277    0.000    0.846    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.736    0.736 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.006    0.006    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
