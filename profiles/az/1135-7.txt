         4494418403 function calls (4494296364 primitive calls) in 1621.986 seconds
        1   12.046   12.046 1621.257 1621.257 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.393    0.001 1609.177    0.159 GerrymanderingMCMC.py:235(recombination_of_districts)
   336821    2.330    0.000  984.692    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1347284    1.619    0.000  691.504    0.001 GerrymanderingMCMC.py:190(__district_size)
248947866  140.881    0.000  566.767    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100    9.899    0.001  301.935    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.042    0.000   40.208    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.060    0.000   38.779    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.045    0.001   38.651    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.094    0.000   26.729    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.281    0.000   14.370    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.097    0.000    2.284    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.282    0.000    0.858    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.697    0.697 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
