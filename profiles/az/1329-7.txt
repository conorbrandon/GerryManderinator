         4633758548 function calls (4633636509 primitive calls) in 1668.572 seconds
        1   12.045   12.045 1667.850 1667.850 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.547    0.001 1655.775    0.164 GerrymanderingMCMC.py:235(recombination_of_districts)
   348236    2.364    0.000 1029.925    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1392944    1.666    0.000  723.330    0.001 GerrymanderingMCMC.py:190(__district_size)
260706798  147.125    0.000  593.645    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10102    9.863    0.001  303.057    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.044    0.000   40.298    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.058    0.000   38.855    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.154    0.001   38.731    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.095    0.000   26.564    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.221    0.000   14.442    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.094    0.000    2.268    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.274    0.000    0.829    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.690    0.690 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
