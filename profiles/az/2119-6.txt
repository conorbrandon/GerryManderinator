         4757002225 function calls (4756880186 primitive calls) in 1708.628 seconds
        1   11.540   11.540 1707.814 1707.814 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.838    0.001 1696.244    0.168 GerrymanderingMCMC.py:235(recombination_of_districts)
   359325    2.476    0.000 1073.132    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1437300    1.683    0.000  751.988    0.001 GerrymanderingMCMC.py:190(__district_size)
271481908  151.355    0.000  614.286    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10101    9.819    0.001  301.898    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.042    0.000   40.380    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.057    0.000   38.951    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.121    0.001   38.826    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.094    0.000   26.707    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.176    0.000   14.253    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.114    0.000    2.305    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.274    0.000    0.827    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.782    0.782 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
