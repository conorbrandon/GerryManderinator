         4412349920 function calls (4412227881 primitive calls) in 1609.834 seconds
        1   11.175   11.175 1609.093 1609.093 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.238    0.001 1597.889    0.158 GerrymanderingMCMC.py:235(recombination_of_districts)
   326383    2.284    0.000  974.058    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1305532    1.633    0.000  686.664    0.001 GerrymanderingMCMC.py:190(__district_size)
242213372  138.923    0.000  562.154    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10101   10.077    0.001  302.945    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.040    0.000   40.875    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.056    0.000   39.452    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.151    0.001   39.334    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.093    0.000   27.014    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.165    0.000   14.409    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.089    0.000    2.223    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.280    0.000    0.851    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.702    0.702 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.035    0.035 GerrymanderingMCMC.py:21(__init__)
        1    0.006    0.006    0.035    0.035 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
