         4871186863 function calls (4871064824 primitive calls) in 1747.145 seconds
        1   10.991   10.991 1746.404 1746.404 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    6.007    0.001 1735.384    0.172 GerrymanderingMCMC.py:235(recombination_of_districts)
   373174    2.599    0.000 1113.434    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1492696    1.729    0.000  783.281    0.001 GerrymanderingMCMC.py:190(__district_size)
281305722  156.717    0.000  642.539    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10102   10.062    0.001  303.430    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.038    0.000   40.192    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.056    0.000   38.785    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.000    0.001   38.669    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.096    0.000   26.682    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.184    0.000   14.304    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.086    0.000    2.163    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.282    0.000    0.845    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.709    0.709 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
