         5064865911 function calls (5064743872 primitive calls) in 1827.644 seconds
        1   11.750   11.750 1826.828 1826.828 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    6.297    0.001 1815.049    0.180 GerrymanderingMCMC.py:235(recombination_of_districts)
   384711    2.667    0.000 1182.674    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1538844    1.834    0.000  832.903    0.001 GerrymanderingMCMC.py:190(__district_size)
298018324  165.943    0.000  682.584    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10103   10.081    0.001  307.214    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.043    0.000   40.960    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.062    0.000   39.512    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.205    0.001   39.375    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.094    0.000   26.926    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.264    0.000   14.435    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.095    0.000    2.233    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.282    0.000    0.853    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.772    0.772 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.040    0.040 GerrymanderingMCMC.py:21(__init__)
        1    0.007    0.007    0.040    0.040 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.009    0.009 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
