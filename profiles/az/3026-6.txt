         5240581924 function calls (5240459885 primitive calls) in 1887.802 seconds
        1   11.811   11.811 1887.050 1887.050 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    6.550    0.001 1875.204    0.186 GerrymanderingMCMC.py:235(recombination_of_districts)
   404615    2.828    0.000 1244.919    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1618460    1.988    0.000  875.542    0.001 GerrymanderingMCMC.py:190(__district_size)
312295044  177.726    0.000  716.907    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10103   10.142    0.001  305.133    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.043    0.000   40.786    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.072    0.000   39.352    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.375    0.001   39.211    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.102    0.000   26.864    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.231    0.000   14.561    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.098    0.000    2.265    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.284    0.000    0.866    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.719    0.719 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
