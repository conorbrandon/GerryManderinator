         4688312684 function calls (4688190645 primitive calls) in 1686.929 seconds
        1   11.784   11.784 1686.231 1686.231 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.651    0.001 1674.419    0.166 GerrymanderingMCMC.py:235(recombination_of_districts)
   354108    2.458    0.000 1053.541    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1416432    1.664    0.000  739.816    0.001 GerrymanderingMCMC.py:190(__district_size)
265877930  146.854    0.000  605.331    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100    9.881    0.001  299.529    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.042    0.000   40.843    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.058    0.000   39.453    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.065    0.001   39.328    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.098    0.000   26.879    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.206    0.000   14.307    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.089    0.000    2.208    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.277    0.000    0.878    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.666    0.666 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
