         5285822932 function calls (5285700893 primitive calls) in 1904.607 seconds
        1   11.078   11.078 1903.868 1903.868 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    6.605    0.001 1892.676    0.187 GerrymanderingMCMC.py:235(recombination_of_districts)
   414279    2.954    0.000 1266.883    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1657116    2.084    0.000  890.550    0.001 GerrymanderingMCMC.py:190(__district_size)
317134986  179.747    0.000  732.410    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10103    9.794    0.001  304.041    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.040    0.000   40.846    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.058    0.000   39.429    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.248    0.001   39.303    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.093    0.000   26.987    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.243    0.000   14.475    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.098    0.000    2.284    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.290    0.000    0.872    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.707    0.707 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.006    0.006    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
