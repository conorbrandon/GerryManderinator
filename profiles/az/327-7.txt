         4656443444 function calls (4656321405 primitive calls) in 1671.848 seconds
        1   10.998   10.998 1671.078 1671.078 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.547    0.001 1660.050    0.164 GerrymanderingMCMC.py:235(recombination_of_districts)
   349630    2.436    0.000 1038.757    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1398520    1.648    0.000  729.642    0.001 GerrymanderingMCMC.py:190(__district_size)
262893218  146.674    0.000  598.553    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10101   10.088    0.001  300.847    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.038    0.000   40.514    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.056    0.000   39.145    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.188    0.001   39.017    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.091    0.000   26.846    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.137    0.000   14.328    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.092    0.000    2.186    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.273    0.000    0.841    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.738    0.738 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
