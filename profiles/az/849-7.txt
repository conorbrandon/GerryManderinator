         5144651633 function calls (5144529594 primitive calls) in 1836.368 seconds
        1   11.070   11.070 1835.644 1835.644 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    6.183    0.001 1824.527    0.181 GerrymanderingMCMC.py:235(recombination_of_districts)
   392864    2.768    0.000 1205.704    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1571456    1.876    0.000  849.339    0.001 GerrymanderingMCMC.py:190(__district_size)
304724720  172.952    0.000  697.539    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10101    9.803    0.001  299.799    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.053    0.000   40.423    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.088    0.000   39.018    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.130    0.001   38.869    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.092    0.000   26.793    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.211    0.000   14.486    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.088    0.000    2.209    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.280    0.000    0.848    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.705    0.705 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.006    0.006    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
