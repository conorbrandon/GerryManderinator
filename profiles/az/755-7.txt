         4661647723 function calls (4661525684 primitive calls) in 1684.263 seconds
        1   12.568   12.568 1683.530 1683.530 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.585    0.001 1670.930    0.165 GerrymanderingMCMC.py:235(recombination_of_districts)
   345223    2.424    0.000 1042.958    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1380892    1.670    0.000  732.836    0.001 GerrymanderingMCMC.py:190(__district_size)
263119956  146.301    0.000  599.575    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10101   10.066    0.001  304.415    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.044    0.000   40.610    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.073    0.000   39.111    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.177    0.001   38.970    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.101    0.000   26.816    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.223    0.000   14.450    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.120    0.000    2.306    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.277    0.000    0.837    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.700    0.700 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
