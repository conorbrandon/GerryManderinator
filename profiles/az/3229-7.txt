         5118489027 function calls (5118366988 primitive calls) in 1849.390 seconds
        1   12.419   12.419 1848.665 1848.665 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    6.347    0.001 1836.218    0.182 GerrymanderingMCMC.py:235(recombination_of_districts)
   398927    2.704    0.000 1205.886    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1595708    1.918    0.000  848.443    0.001 GerrymanderingMCMC.py:190(__district_size)
302741388  167.221    0.000  693.450    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10102   10.284    0.001  303.937    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.042    0.000   40.984    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.060    0.000   39.533    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.387    0.001   39.408    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.098    0.000   27.024    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.225    0.000   14.464    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.113    0.000    2.352    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.280    0.000    0.846    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.689    0.689 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.006    0.006    0.030    0.030 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
