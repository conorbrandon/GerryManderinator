         4891338535 function calls (4891216496 primitive calls) in 1758.640 seconds
        1   12.134   12.134 1757.934 1757.934 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.995    0.001 1745.769    0.173 GerrymanderingMCMC.py:235(recombination_of_districts)
   371329    2.574    0.000 1117.019    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1485316    1.765    0.000  785.016    0.001 GerrymanderingMCMC.py:190(__district_size)
283291110  159.264    0.000  644.268    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10103   10.023    0.001  303.264    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.042    0.000   40.431    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.060    0.000   38.974    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.275    0.001   38.847    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.101    0.000   26.730    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.253    0.000   14.360    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.096    0.000    2.273    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.312    0.000    0.880    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.673    0.673 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.030    0.030 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
