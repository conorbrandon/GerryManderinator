         5244818441 function calls (5244696402 primitive calls) in 1891.079 seconds
        1   12.046   12.046 1890.378 1890.378 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    6.492    0.001 1878.302    0.186 GerrymanderingMCMC.py:235(recombination_of_districts)
   395698    2.828    0.000 1247.318    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1582792    1.884    0.000  878.817    0.001 GerrymanderingMCMC.py:190(__district_size)
312350402  178.266    0.000  720.777    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   10.083    0.001  307.186    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.041    0.000   40.735    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.059    0.000   39.272    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.201    0.001   39.145    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.105    0.000   27.034    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.237    0.000   14.588    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.098    0.000    2.297    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.291    0.000    0.859    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.669    0.669 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
