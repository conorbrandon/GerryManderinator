         4824727384 function calls (4824605345 primitive calls) in 1729.588 seconds
        1   11.507   11.507 1728.848 1728.848 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.852    0.001 1717.311    0.170 GerrymanderingMCMC.py:235(recombination_of_districts)
   372341    2.582    0.000 1096.548    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1489364    1.745    0.000  767.871    0.001 GerrymanderingMCMC.py:190(__district_size)
277652998  153.550    0.000  628.091    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10101    9.784    0.001  299.143    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.040    0.000   40.157    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.058    0.000   38.758    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   12.965    0.001   38.634    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.094    0.000   26.516    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.207    0.000   14.273    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.094    0.000    2.225    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.272    0.000    0.831    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.708    0.708 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
