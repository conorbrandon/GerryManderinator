         4145651414 function calls (4145529375 primitive calls) in 1506.453 seconds
        1   11.360   11.360 1505.727 1505.727 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    4.752    0.000 1494.337    0.148 GerrymanderingMCMC.py:235(recombination_of_districts)
   299932    2.100    0.000  873.830    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1199728    1.459    0.000  614.260    0.001 GerrymanderingMCMC.py:190(__district_size)
219397188  122.955    0.000  502.717    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100    9.970    0.001  300.986    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.041    0.000   40.133    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.057    0.000   38.708    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   12.996    0.001   38.586    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.094    0.000   26.565    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.150    0.000   14.212    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.091    0.000    2.253    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.274    0.000    0.825    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.694    0.694 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
