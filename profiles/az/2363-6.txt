         4624205873 function calls (4624083834 primitive calls) in 1669.248 seconds
        1   12.070   12.070 1668.547 1668.547 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.466    0.001 1656.447    0.164 GerrymanderingMCMC.py:235(recombination_of_districts)
   341552    2.379    0.000 1027.480    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1366208    1.614    0.000  722.119    0.001 GerrymanderingMCMC.py:190(__district_size)
260327544  144.525    0.000  591.456    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10101   10.066    0.001  303.081    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.043    0.000   40.255    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.058    0.000   38.818    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.101    0.001   38.692    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.099    0.000   26.675    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.214    0.000   14.351    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.098    0.000    2.289    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.279    0.000    0.853    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.672    0.672 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
