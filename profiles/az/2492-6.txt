         5238457254 function calls (5238335215 primitive calls) in 1888.577 seconds
        1   11.988   11.988 1887.878 1887.878 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    6.444    0.001 1875.855    0.186 GerrymanderingMCMC.py:235(recombination_of_districts)
   405902    2.734    0.000 1244.471    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1623608    1.940    0.000  875.790    0.001 GerrymanderingMCMC.py:190(__district_size)
313053782  178.442    0.000  719.481    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10103   10.013    0.001  308.440    0.031 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.039    0.000   40.651    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.059    0.000   39.225    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.098    0.001   39.097    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.096    0.000   26.947    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.192    0.000   14.330    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.095    0.000    2.271    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.282    0.000    0.892    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.670    0.670 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
