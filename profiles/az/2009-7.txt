         4519024883 function calls (4518902844 primitive calls) in 1625.795 seconds
        1   10.997   10.997 1625.100 1625.100 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.354    0.001 1614.073    0.160 GerrymanderingMCMC.py:235(recombination_of_districts)
   336418    2.265    0.000  994.879    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1345672    1.662    0.000  699.243    0.001 GerrymanderingMCMC.py:190(__district_size)
251269640  139.821    0.000  573.682    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100    9.849    0.001  299.960    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.041    0.000   40.506    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.056    0.000   39.103    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.167    0.001   38.985    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.093    0.000   26.797    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.197    0.000   14.362    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.109    0.000    2.242    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.275    0.000    0.862    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.665    0.665 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
