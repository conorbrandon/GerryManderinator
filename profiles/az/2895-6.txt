         4902882479 function calls (4902760440 primitive calls) in 1774.236 seconds
        1   11.115   11.115 1773.500 1773.500 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.966    0.001 1762.178    0.174 GerrymanderingMCMC.py:235(recombination_of_districts)
   376101    2.585    0.000 1134.660    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1504404    1.794    0.000  798.819    0.001 GerrymanderingMCMC.py:190(__district_size)
283572328  159.543    0.000  654.849    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10101   10.018    0.001  304.802    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.040    0.000   41.162    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.056    0.000   39.772    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.442    0.001   39.652    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.092    0.000   27.250    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.228    0.000   14.453    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.089    0.000    2.222    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.305    0.000    0.901    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.703    0.703 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.007    0.007 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
