         5685424436 function calls (5685302397 primitive calls) in 2038.493 seconds
        1   12.468   12.468 2037.789 2037.789 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    7.252    0.001 2025.279    0.201 GerrymanderingMCMC.py:235(recombination_of_districts)
   451723    3.116    0.000 1392.309    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1806892    2.119    0.000  981.148    0.001 GerrymanderingMCMC.py:190(__district_size)
350939296  198.552    0.000  804.628    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   10.116    0.001  306.159    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.043    0.000   40.576    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.058    0.000   39.098    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.348    0.001   38.972    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.099    0.000   27.000    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.242    0.000   14.372    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.094    0.000    2.311    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.287    0.000    0.868    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.671    0.671 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
