         4719499241 function calls (4719377202 primitive calls) in 1714.555 seconds
        1   11.388   11.388 1713.813 1713.813 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.731    0.001 1702.394    0.169 GerrymanderingMCMC.py:235(recombination_of_districts)
   355518    2.474    0.000 1082.364    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1422072    1.676    0.000  763.661    0.001 GerrymanderingMCMC.py:190(__district_size)
268894380  152.292    0.000  627.061    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10102    9.748    0.001  299.158    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.039    0.000   40.890    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.056    0.000   39.487    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.292    0.001   39.367    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.090    0.000   27.115    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.211    0.000   14.305    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.091    0.000    2.223    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.284    0.000    0.864    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.709    0.709 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
