         5041978298 function calls (5041856259 primitive calls) in 1824.463 seconds
        1   11.333   11.333 1823.670 1823.670 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    6.178    0.001 1812.307    0.179 GerrymanderingMCMC.py:235(recombination_of_districts)
   378414    2.625    0.000 1182.656    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1513656    1.795    0.000  835.211    0.001 GerrymanderingMCMC.py:190(__district_size)
295878786  168.375    0.000  683.989    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10102    9.814    0.001  304.227    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.041    0.000   40.784    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.056    0.000   39.370    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.177    0.001   39.250    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.093    0.000   26.966    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.180    0.000   14.393    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.105    0.000    2.363    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.279    0.000    0.851    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.760    0.760 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.006    0.006    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
