         4376365588 function calls (4376243549 primitive calls) in 1579.350 seconds
        1   11.568   11.568 1578.593 1578.593 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.094    0.001 1566.996    0.155 GerrymanderingMCMC.py:235(recombination_of_districts)
   319857    2.250    0.000  946.867    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1279428    1.557    0.000  666.089    0.001 GerrymanderingMCMC.py:190(__district_size)
238675986  135.754    0.000  544.491    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10101    9.801    0.001  302.128    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.041    0.000   40.126    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.059    0.000   38.693    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.141    0.001   38.572    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.096    0.000   26.582    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.169    0.000   14.307    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.090    0.000    2.213    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.287    0.000    0.850    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.703    0.703 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.052    0.052 GerrymanderingMCMC.py:21(__init__)
        1    0.006    0.006    0.051    0.051 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
