         4233679152 function calls (4233557113 primitive calls) in 1522.164 seconds
        1   11.345   11.345 1521.449 1521.449 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    4.794    0.000 1510.075    0.150 GerrymanderingMCMC.py:235(recombination_of_districts)
   301979    2.075    0.000  891.971    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1207916    1.411    0.000  625.814    0.001 GerrymanderingMCMC.py:190(__district_size)
226603090  125.539    0.000  512.478    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10101    9.941    0.001  301.234    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.040    0.000   39.733    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.055    0.000   38.310    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   12.688    0.001   38.192    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.095    0.000   26.732    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.172    0.000   14.243    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.096    0.000    2.252    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.276    0.000    0.850    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.683    0.683 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.028    0.028 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
