         4768568192 function calls (4768446153 primitive calls) in 1716.118 seconds
        1   11.869   11.869 1715.380 1715.380 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.707    0.001 1703.479    0.169 GerrymanderingMCMC.py:235(recombination_of_districts)
   362432    2.526    0.000 1078.959    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1449728    1.723    0.000  758.825    0.001 GerrymanderingMCMC.py:190(__district_size)
272310474  150.173    0.000  621.888    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   10.172    0.001  303.641    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.041    0.000   40.437    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.068    0.000   38.993    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.293    0.001   38.860    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.094    0.000   26.672    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.152    0.000   14.239    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.104    0.000    2.269    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.280    0.000    0.838    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.705    0.705 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
