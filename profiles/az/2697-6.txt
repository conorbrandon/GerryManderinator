         4586497799 function calls (4586375760 primitive calls) in 1650.789 seconds
        1   10.950   10.950 1650.057 1650.057 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.444    0.001 1639.034    0.162 GerrymanderingMCMC.py:235(recombination_of_districts)
   331680    2.289    0.000 1019.696    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1326720    1.588    0.000  713.538    0.001 GerrymanderingMCMC.py:190(__district_size)
257005454  145.185    0.000  583.926    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100    9.903    0.001  302.573    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.039    0.000   39.485    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.054    0.000   38.092    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   12.735    0.001   37.976    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.090    0.000   26.165    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.171    0.000   14.413    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.094    0.000    2.209    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.273    0.000    0.834    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.698    0.698 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
