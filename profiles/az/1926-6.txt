         4590591624 function calls (4590469585 primitive calls) in 1666.640 seconds
        1   11.789   11.789 1665.931 1665.931 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.565    0.001 1654.112    0.164 GerrymanderingMCMC.py:235(recombination_of_districts)
   332762    2.388    0.000 1029.911    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1331048    1.561    0.000  724.751    0.001 GerrymanderingMCMC.py:190(__district_size)
257261048  144.234    0.000  594.722    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100    9.863    0.001  301.601    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.042    0.000   40.726    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.058    0.000   39.322    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.362    0.001   39.199    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.094    0.000   27.008    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.175    0.000   14.383    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.093    0.000    2.266    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.292    0.000    0.879    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.677    0.677 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.007    0.007 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
