         5219776858 function calls (5219654819 primitive calls) in 1874.721 seconds
        1   11.431   11.431 1873.979 1873.979 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    6.419    0.001 1862.499    0.184 GerrymanderingMCMC.py:235(recombination_of_districts)
   407338    2.713    0.000 1237.892    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1629352    1.922    0.000  873.026    0.001 GerrymanderingMCMC.py:190(__district_size)
311103424  178.268    0.000  716.204    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   10.027    0.001  303.253    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.043    0.000   40.526    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.058    0.000   39.109    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.248    0.001   38.983    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.094    0.000   26.789    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.218    0.000   14.388    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.093    0.000    2.252    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.297    0.000    0.867    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.708    0.708 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.006    0.006    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
