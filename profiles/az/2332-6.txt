         4957749109 function calls (4957627070 primitive calls) in 1875.462 seconds
        1   11.661   11.661 1874.742 1874.742 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    6.090    0.001 1863.051    0.184 GerrymanderingMCMC.py:235(recombination_of_districts)
   380163    2.684    0.000 1211.197    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1520652    1.931    0.000  869.583    0.001 GerrymanderingMCMC.py:190(__district_size)
288337290  172.971    0.000  722.152    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10102    9.919    0.001  330.548    0.033 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.040    0.000   40.497    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.056    0.000   39.046    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.215    0.001   38.926    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.094    0.000   26.861    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.209    0.000   14.494    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.118    0.000    2.268    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.292    0.000    0.889    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.688    0.688 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
