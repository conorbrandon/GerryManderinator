         4839828498 function calls (4839706459 primitive calls) in 1759.007 seconds
        1   11.255   11.255 1758.302 1758.302 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.900    0.001 1747.015    0.173 GerrymanderingMCMC.py:235(recombination_of_districts)
   360367    2.580    0.000 1114.007    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1441468    1.717    0.000  784.503    0.001 GerrymanderingMCMC.py:190(__district_size)
278399252  157.374    0.000  644.659    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   10.263    0.001  308.774    0.031 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.040    0.000   41.101    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.060    0.000   39.614    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.296    0.001   39.485    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.122    0.000   27.241    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.150    0.000   14.382    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.115    0.000    2.346    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.286    0.000    0.864    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.672    0.672 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.006    0.006    0.030    0.030 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
