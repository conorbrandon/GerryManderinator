         5148121955 function calls (5147999916 primitive calls) in 1846.647 seconds
        1   11.901   11.901 1845.807 1845.807 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    6.250    0.001 1833.845    0.182 GerrymanderingMCMC.py:235(recombination_of_districts)
   390363    2.605    0.000 1210.941    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1561452    1.845    0.000  854.149    0.001 GerrymanderingMCMC.py:190(__district_size)
305356956  170.961    0.000  699.472    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100    9.969    0.001  301.159    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.042    0.000   40.652    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.060    0.000   39.195    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.055    0.001   39.051    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.097    0.000   26.951    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.162    0.000   14.297    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.094    0.000    2.240    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.301    0.000    0.862    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.779    0.779 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.056    0.056 GerrymanderingMCMC.py:21(__init__)
        1    0.032    0.032    0.056    0.056 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
