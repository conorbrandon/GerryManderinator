         4762008010 function calls (4761885971 primitive calls) in 1732.639 seconds
        1   11.946   11.946 1731.944 1731.944 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.857    0.001 1719.967    0.170 GerrymanderingMCMC.py:235(recombination_of_districts)
   355078    2.415    0.000 1082.843    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1420312    1.709    0.000  761.053    0.001 GerrymanderingMCMC.py:190(__district_size)
271639570  154.252    0.000  624.522    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10103   10.169    0.001  308.507    0.031 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.042    0.000   40.721    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.058    0.000   39.280    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.274    0.001   39.146    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.096    0.000   26.869    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.204    0.000   14.494    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.096    0.000    2.304    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.291    0.000    0.859    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.662    0.662 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
