         5169674215 function calls (5169552176 primitive calls) in 1870.651 seconds
        1   11.125   11.125 1869.345 1869.345 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    6.472    0.001 1858.169    0.184 GerrymanderingMCMC.py:235(recombination_of_districts)
   388607    2.736    0.000 1229.237    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1554428    1.853    0.000  865.241    0.001 GerrymanderingMCMC.py:190(__district_size)
307022514  175.620    0.000  710.173    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   10.094    0.001  305.414    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.041    0.000   40.757    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.071    0.000   39.316    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.020    0.001   39.179    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.095    0.000   27.025    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.212    0.000   14.505    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.092    0.000    2.338    0.000 GerrymanderingMCMC.py:157(__random_district_label)
        1    0.000    0.000    1.273    1.273 GerrymanderingMCMC.py:1(<module>)
    10100    0.303    0.000    0.905    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
