         5394188753 function calls (5394066714 primitive calls) in 1952.557 seconds
        1   11.406   11.406 1951.821 1951.821 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    6.899    0.001 1940.370    0.192 GerrymanderingMCMC.py:235(recombination_of_districts)
   422333    2.973    0.000 1312.422    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1689332    2.070    0.000  923.830    0.001 GerrymanderingMCMC.py:190(__district_size)
326171658  188.873    0.000  756.673    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100    9.794    0.001  303.974    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.041    0.000   41.144    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.058    0.000   39.723    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.491    0.001   39.598    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.094    0.000   27.187    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.231    0.000   14.509    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.095    0.000    2.297    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.306    0.000    0.891    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.704    0.704 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
