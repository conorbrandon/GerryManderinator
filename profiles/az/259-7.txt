         4999007081 function calls (4998885042 primitive calls) in 1802.056 seconds
        1   11.787   11.787 1801.290 1801.290 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    6.078    0.001 1789.470    0.177 GerrymanderingMCMC.py:235(recombination_of_districts)
   380874    2.688    0.000 1163.743    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1523496    1.811    0.000  821.108    0.001 GerrymanderingMCMC.py:190(__district_size)
292048024  166.971    0.000  674.651    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10101   10.017    0.001  303.115    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.040    0.000   40.159    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.059    0.000   38.692    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.086    0.001   38.567    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.098    0.000   26.602    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.181    0.000   14.306    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.125    0.000    2.325    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.296    0.000    0.883    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.734    0.734 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
