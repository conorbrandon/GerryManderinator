         5174660799 function calls (5174538760 primitive calls) in 1855.316 seconds
        1   11.490   11.490 1854.573 1854.573 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    6.363    0.001 1843.053    0.182 GerrymanderingMCMC.py:235(recombination_of_districts)
   393332    2.812    0.000 1214.269    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1573328    1.832    0.000  853.879    0.001 GerrymanderingMCMC.py:190(__district_size)
306883574  172.491    0.000  698.661    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10102   10.293    0.001  306.889    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.042    0.000   40.490    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.058    0.000   39.055    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.310    0.001   38.931    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.097    0.000   26.901    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.197    0.000   14.467    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.114    0.000    2.307    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.289    0.000    0.863    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.711    0.711 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
