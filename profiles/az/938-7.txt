         4912718452 function calls (4912596413 primitive calls) in 1777.884 seconds
        1   11.370   11.370 1777.148 1777.148 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.995    0.001 1765.720    0.175 GerrymanderingMCMC.py:235(recombination_of_districts)
   375020    2.650    0.000 1140.014    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1500080    1.777    0.000  802.332    0.001 GerrymanderingMCMC.py:190(__district_size)
284652528  163.016    0.000  658.339    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100    9.921    0.001  304.583    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.040    0.000   40.871    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.056    0.000   39.478    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.336    0.001   39.359    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.092    0.000   26.951    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.253    0.000   14.504    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.089    0.000    2.266    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.297    0.000    0.866    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.704    0.704 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
