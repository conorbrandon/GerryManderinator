         5033188995 function calls (5033066956 primitive calls) in 1800.624 seconds
        1   11.366   11.366 1799.831 1799.831 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    6.150    0.001 1788.434    0.177 GerrymanderingMCMC.py:235(recombination_of_districts)
   384753    2.575    0.000 1163.000    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1539012    1.792    0.000  816.120    0.001 GerrymanderingMCMC.py:190(__district_size)
294757132  164.077    0.000  668.399    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10101    9.974    0.001  304.482    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.038    0.000   40.300    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.056    0.000   38.891    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   12.997    0.001   38.771    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.092    0.000   26.587    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.174    0.000   14.427    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.090    0.000    2.246    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.291    0.000    0.870    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.761    0.761 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
