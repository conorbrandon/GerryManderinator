         5153224749 function calls (5153102710 primitive calls) in 1862.699 seconds
        1   11.528   11.528 1861.998 1861.998 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    6.381    0.001 1850.413    0.183 GerrymanderingMCMC.py:235(recombination_of_districts)
   391658    2.779    0.000 1221.771    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1566632    1.877    0.000  858.738    0.001 GerrymanderingMCMC.py:190(__district_size)
305765652  173.199    0.000  703.286    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100    9.800    0.001  302.653    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.042    0.000   40.662    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.059    0.000   39.212    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.383    0.001   39.087    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.097    0.000   27.010    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.203    0.000   14.575    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.098    0.000    2.273    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.294    0.000    0.861    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.668    0.668 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
