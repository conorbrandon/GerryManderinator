         5379674587 function calls (5379552548 primitive calls) in 1931.027 seconds
        1   12.240   12.240 1930.274 1930.274 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    6.830    0.001 1917.970    0.190 GerrymanderingMCMC.py:235(recombination_of_districts)
   421558    2.878    0.000 1285.055    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1686232    1.989    0.000  901.548    0.001 GerrymanderingMCMC.py:190(__district_size)
325071988  178.784    0.000  736.925    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10103   10.097    0.001  308.623    0.031 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.042    0.000   40.310    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.059    0.000   38.809    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   12.915    0.001   38.684    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.097    0.000   26.713    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.185    0.000   14.418    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.097    0.000    2.265    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.276    0.000    0.849    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.720    0.720 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
