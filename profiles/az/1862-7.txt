         4766282514 function calls (4766160475 primitive calls) in 1715.125 seconds
        1   11.611   11.611 1713.784 1713.784 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.716    0.001 1702.125    0.169 GerrymanderingMCMC.py:235(recombination_of_districts)
   348673    2.336    0.000 1078.202    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1394692    1.625    0.000  760.199    0.001 GerrymanderingMCMC.py:190(__district_size)
272055288  151.225    0.000  623.410    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100    9.880    0.001  301.623    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.042    0.000   40.123    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.056    0.000   38.711    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   12.986    0.001   38.591    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.102    0.000   26.675    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.175    0.000   14.256    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.093    0.000    2.214    0.000 GerrymanderingMCMC.py:157(__random_district_label)
        1    0.000    0.000    1.288    1.288 GerrymanderingMCMC.py:1(<module>)
    10100    0.291    0.000    0.863    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.050    0.050 GerrymanderingMCMC.py:21(__init__)
        1    0.019    0.019    0.050    0.050 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
