         4789803188 function calls (4789681149 primitive calls) in 1735.845 seconds
        1   12.835   12.835 1735.116 1735.116 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.865    0.001 1722.235    0.171 GerrymanderingMCMC.py:235(recombination_of_districts)
   368665    2.570    0.000 1088.182    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1474660    1.725    0.000  765.753    0.001 GerrymanderingMCMC.py:190(__district_size)
274429190  154.417    0.000  628.357    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10101   10.065    0.001  307.038    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.045    0.000   40.611    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.060    0.000   39.142    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.135    0.001   39.014    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.097    0.000   26.737    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.241    0.000   14.314    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.097    0.000    2.278    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.275    0.000    0.850    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.696    0.696 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
