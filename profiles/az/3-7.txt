         4848434177 function calls (4848312138 primitive calls) in 1736.288 seconds
        1   10.863   10.863 1732.617 1732.617 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.802    0.001 1721.721    0.170 GerrymanderingMCMC.py:235(recombination_of_districts)
   359066    2.474    0.000 1107.035    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1436264    1.694    0.000  779.219    0.001 GerrymanderingMCMC.py:190(__district_size)
279413014  154.642    0.000  638.378    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10101    9.756    0.001  298.418    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.038    0.000   40.480    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.056    0.000   39.095    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.308    0.001   38.975    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.089    0.000   26.808    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.142    0.000   14.254    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
        1    0.000    0.000    3.620    3.620 GerrymanderingMCMC.py:1(<module>)
    30300    0.089    0.000    2.274    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.284    0.000    0.852    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.037    0.037 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.036    0.036 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.013    0.013 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
