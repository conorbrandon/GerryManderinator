         5199228876 function calls (5199106837 primitive calls) in 1877.503 seconds
        1   11.335   11.335 1876.786 1876.786 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    6.426    0.001 1865.422    0.185 GerrymanderingMCMC.py:235(recombination_of_districts)
   402694    2.880    0.000 1237.257    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1610776    2.017    0.000  870.496    0.001 GerrymanderingMCMC.py:190(__district_size)
309037288  173.846    0.000  713.023    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10102    9.975    0.001  305.097    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.041    0.000   40.967    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.056    0.000   39.549    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.147    0.001   39.429    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.092    0.000   27.049    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.197    0.000   14.602    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.094    0.000    2.223    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.297    0.000    0.867    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.683    0.683 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.006    0.006    0.030    0.030 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
