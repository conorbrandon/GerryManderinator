         4936951067 function calls (4936829028 primitive calls) in 1777.655 seconds
        1   11.127   11.127 1776.609 1776.609 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    6.126    0.001 1765.453    0.175 GerrymanderingMCMC.py:235(recombination_of_districts)
   376051    2.774    0.000 1134.516    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1504204    1.808    0.000  795.437    0.001 GerrymanderingMCMC.py:190(__district_size)
286369030  160.080    0.000  650.096    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10102   10.074    0.001  305.810    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.041    0.000   40.717    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.066    0.000   39.276    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.117    0.001   39.143    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.096    0.000   27.003    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.185    0.000   14.452    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.098    0.000    2.320    0.000 GerrymanderingMCMC.py:157(__random_district_label)
        1    0.000    0.000    0.990    0.990 GerrymanderingMCMC.py:1(<module>)
    10100    0.291    0.000    0.891    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.052    0.052 GerrymanderingMCMC.py:21(__init__)
        1    0.006    0.006    0.052    0.052 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
