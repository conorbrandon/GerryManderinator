         5006178577 function calls (5006056538 primitive calls) in 1810.509 seconds
        1   11.702   11.702 1809.790 1809.790 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    6.131    0.001 1798.057    0.178 GerrymanderingMCMC.py:235(recombination_of_districts)
   380228    2.683    0.000 1169.988    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1520912    1.783    0.000  824.554    0.001 GerrymanderingMCMC.py:190(__district_size)
292332566  167.059    0.000  677.597    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10102    9.969    0.001  305.368    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.041    0.000   40.525    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.058    0.000   39.097    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.165    0.001   38.973    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.093    0.000   26.860    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.251    0.000   14.473    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.093    0.000    2.275    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.288    0.000    0.859    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.687    0.687 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.006    0.006    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
