         5024342744 function calls (5024220705 primitive calls) in 1825.160 seconds
        1   11.601   11.601 1824.454 1824.454 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    6.224    0.001 1812.784    0.179 GerrymanderingMCMC.py:235(recombination_of_districts)
   387721    2.717    0.000 1180.705    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1550884    1.866    0.000  829.391    0.001 GerrymanderingMCMC.py:190(__district_size)
294454854  165.359    0.000  679.366    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10103   10.569    0.001  306.642    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.053    0.000   40.821    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.058    0.000   39.396    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.131    0.001   39.273    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.093    0.000   26.888    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.173    0.000   14.382    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.092    0.000    2.253    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.281    0.000    0.858    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.672    0.672 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.006    0.006    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
