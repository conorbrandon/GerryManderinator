         4140487634 function calls (4140365595 primitive calls) in 1513.839 seconds
        1   11.274   11.274 1513.067 1513.067 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    4.854    0.000 1501.763    0.149 GerrymanderingMCMC.py:235(recombination_of_districts)
   299637    2.146    0.000  876.707    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1198548    1.451    0.000  614.973    0.001 GerrymanderingMCMC.py:190(__district_size)
218891114  124.898    0.000  502.552    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   10.076    0.001  304.477    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.041    0.000   40.496    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.058    0.000   39.073    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.365    0.001   38.949    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.097    0.000   26.773    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.143    0.000   14.402    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.094    0.000    2.279    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.275    0.000    0.829    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.738    0.738 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
