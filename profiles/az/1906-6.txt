         4786793090 function calls (4786671051 primitive calls) in 1731.753 seconds
        1   11.100   11.100 1731.032 1731.032 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.753    0.001 1719.891    0.170 GerrymanderingMCMC.py:235(recombination_of_districts)
   357013    2.517    0.000 1093.609    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1428052    1.702    0.000  771.205    0.001 GerrymanderingMCMC.py:190(__district_size)
273946002  153.862    0.000  630.282    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10101    9.830    0.001  304.134    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.040    0.000   41.043    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.056    0.000   39.627    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.114    0.001   39.506    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.093    0.000   27.188    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.220    0.000   14.516    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.096    0.000    2.277    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.275    0.000    0.854    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.687    0.687 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
