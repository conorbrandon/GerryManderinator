         5330810902 function calls (5330688863 primitive calls) in 1915.690 seconds
        1   12.113   12.113 1914.921 1914.921 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    6.606    0.001 1902.778    0.188 GerrymanderingMCMC.py:235(recombination_of_districts)
   414398    2.878    0.000 1274.470    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1657592    1.946    0.000  895.303    0.001 GerrymanderingMCMC.py:190(__district_size)
320336412  178.726    0.000  733.285    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10101   10.109    0.001  306.585    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.042    0.000   40.236    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.059    0.000   38.771    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   12.910    0.001   38.644    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.103    0.000   26.586    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.290    0.000   14.655    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.106    0.000    2.328    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.308    0.000    0.892    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.737    0.737 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
