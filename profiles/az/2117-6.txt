         5126192430 function calls (5126070391 primitive calls) in 1849.718 seconds
        1   11.150   11.150 1849.020 1849.020 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    6.408    0.001 1837.839    0.182 GerrymanderingMCMC.py:235(recombination_of_districts)
   396843    2.752    0.000 1214.379    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1587372    1.880    0.000  856.312    0.001 GerrymanderingMCMC.py:190(__district_size)
303269986  172.644    0.000  700.502    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10103    9.973    0.001  303.142    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.042    0.000   40.833    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.056    0.000   39.426    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.344    0.001   39.306    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.097    0.000   27.052    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.250    0.000   14.452    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.093    0.000    2.260    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.288    0.000    0.880    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.667    0.667 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
