         4817455166 function calls (4817333127 primitive calls) in 1731.109 seconds
        1   11.591   11.591 1730.365 1730.365 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.856    0.001 1718.742    0.170 GerrymanderingMCMC.py:235(recombination_of_districts)
   359426    2.495    0.000 1090.969    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1437704    1.717    0.000  766.993    0.001 GerrymanderingMCMC.py:190(__district_size)
276119092  155.556    0.000  629.186    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10103   10.195    0.001  305.576    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.042    0.000   40.268    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.062    0.000   38.825    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.017    0.001   38.687    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.100    0.000   26.737    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.266    0.000   14.427    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.094    0.000    2.307    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.279    0.000    0.845    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.711    0.711 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
