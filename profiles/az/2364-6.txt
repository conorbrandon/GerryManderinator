         4447331196 function calls (4447209157 primitive calls) in 1613.680 seconds
        1   11.771   11.771 1612.925 1612.925 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.256    0.001 1601.121    0.159 GerrymanderingMCMC.py:235(recombination_of_districts)
   327343    2.309    0.000  977.103    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1309372    1.557    0.000  687.923    0.001 GerrymanderingMCMC.py:190(__district_size)
245131308  138.283    0.000  564.505    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   10.195    0.001  304.360    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.040    0.000   40.521    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.062    0.000   39.096    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.236    0.001   38.968    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.098    0.000   26.795    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.227    0.000   14.305    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.097    0.000    2.303    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.276    0.000    0.833    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.722    0.722 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.006    0.006    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
