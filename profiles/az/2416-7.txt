         4696725004 function calls (4696602965 primitive calls) in 1685.737 seconds
        1   11.134   11.134 1684.966 1684.966 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.651    0.001 1673.803    0.166 GerrymanderingMCMC.py:235(recombination_of_districts)
   350450    2.369    0.000 1050.407    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1401800    1.666    0.000  739.185    0.001 GerrymanderingMCMC.py:190(__district_size)
265708610  149.023    0.000  606.164    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100    9.833    0.001  302.853    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.038    0.000   39.757    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.059    0.000   38.368    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   12.854    0.001   38.244    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.095    0.000   26.451    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.164    0.000   14.359    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.095    0.000    2.276    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.273    0.000    0.827    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.738    0.738 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
