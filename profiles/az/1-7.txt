         4771775581 function calls (4771653542 primitive calls) in 1719.169 seconds
        1   10.978   10.978 1715.494 1715.494 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.653    0.001 1704.316    0.169 GerrymanderingMCMC.py:235(recombination_of_districts)
   357834    2.494    0.000 1081.586    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1431336    1.724    0.000  762.418    0.001 GerrymanderingMCMC.py:190(__district_size)
272441092  153.222    0.000  625.025    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10101    9.909    0.001  301.577    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.040    0.000   40.375    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.055    0.000   38.980    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   12.953    0.001   38.856    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.094    0.000   26.768    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.190    0.000   14.408    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
        1    0.000    0.000    3.598    3.598 GerrymanderingMCMC.py:1(<module>)
    30300    0.088    0.000    2.295    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.275    0.000    0.854    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.058    0.058 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.057    0.057 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.035    0.035 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
