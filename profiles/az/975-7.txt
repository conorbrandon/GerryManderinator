         5002689617 function calls (5002567578 primitive calls) in 1779.649 seconds
        1   10.996   10.996 1778.892 1778.892 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    6.178    0.001 1767.863    0.175 GerrymanderingMCMC.py:235(recombination_of_districts)
   385307    2.697    0.000 1149.221    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1541228    1.871    0.000  807.597    0.001 GerrymanderingMCMC.py:190(__district_size)
292587860  165.844    0.000  663.200    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10101    9.882    0.001  301.673    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.040    0.000   39.693    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.064    0.000   38.298    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   12.786    0.001   38.173    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.094    0.000   26.314    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.150    0.000   14.215    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.085    0.000    2.189    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.275    0.000    0.844    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.725    0.725 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
