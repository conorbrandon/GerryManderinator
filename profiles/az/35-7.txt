         5027072513 function calls (5026950474 primitive calls) in 1811.840 seconds
        1   11.067   11.067 1808.168 1808.168 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    6.148    0.001 1797.065    0.178 GerrymanderingMCMC.py:235(recombination_of_districts)
   381311    2.638    0.000 1171.206    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1525244    1.791    0.000  823.008    0.001 GerrymanderingMCMC.py:190(__district_size)
294591478  165.106    0.000  676.197    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10101    9.885    0.001  304.698    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.039    0.000   40.625    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.057    0.000   39.210    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   12.931    0.001   39.086    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.093    0.000   26.798    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.190    0.000   14.533    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
        1    0.000    0.000    3.618    3.618 GerrymanderingMCMC.py:1(<module>)
    30300    0.093    0.000    2.280    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.280    0.000    0.874    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.037    0.037 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.037    0.037 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.015    0.015 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
