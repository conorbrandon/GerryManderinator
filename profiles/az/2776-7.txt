         4819490007 function calls (4819367968 primitive calls) in 1755.704 seconds
        1   11.084   11.084 1754.965 1754.965 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.925    0.001 1743.851    0.173 GerrymanderingMCMC.py:235(recombination_of_districts)
   365003    2.503    0.000 1111.366    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1460012    1.712    0.000  783.268    0.001 GerrymanderingMCMC.py:190(__district_size)
276905928  159.004    0.000  643.228    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100    9.998    0.001  305.821    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.039    0.000   41.061    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.056    0.000   39.663    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.189    0.001   39.545    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.092    0.000   27.098    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.201    0.000   14.481    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.093    0.000    2.244    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.283    0.000    0.853    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.707    0.707 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.006    0.006    0.030    0.030 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
