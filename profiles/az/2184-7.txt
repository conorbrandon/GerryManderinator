         4441947048 function calls (4441825009 primitive calls) in 1620.657 seconds
        1   11.206   11.206 1619.918 1619.918 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.348    0.001 1608.683    0.159 GerrymanderingMCMC.py:235(recombination_of_districts)
   325849    2.353    0.000  982.594    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1303396    1.560    0.000  689.750    0.001 GerrymanderingMCMC.py:190(__district_size)
244577696  139.606    0.000  563.120    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10102    9.812    0.001  302.619    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.041    0.000   40.720    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.068    0.000   39.320    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.261    0.001   39.189    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.092    0.000   26.927    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.242    0.000   14.423    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.090    0.000    2.228    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.275    0.000    0.838    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.706    0.706 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.006    0.006    0.030    0.030 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.007    0.007 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
