         4659702442 function calls (4659580403 primitive calls) in 1683.093 seconds
        1   11.404   11.404 1682.362 1682.362 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.589    0.001 1670.922    0.165 GerrymanderingMCMC.py:235(recombination_of_districts)
   355528    2.480    0.000 1045.371    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1422112    1.712    0.000  732.398    0.001 GerrymanderingMCMC.py:190(__district_size)
263120370  147.182    0.000  599.376    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   10.273    0.001  304.267    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.042    0.000   40.185    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.055    0.000   38.738    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   12.890    0.001   38.609    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.092    0.000   26.664    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.144    0.000   14.378    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.092    0.000    2.261    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.273    0.000    0.846    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.698    0.698 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
