         4770240686 function calls (4770118647 primitive calls) in 1707.545 seconds
        1   10.978   10.978 1706.838 1706.838 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.751    0.001 1695.832    0.168 GerrymanderingMCMC.py:235(recombination_of_districts)
   357457    2.499    0.000 1077.235    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1429828    1.718    0.000  758.974    0.001 GerrymanderingMCMC.py:190(__district_size)
272725266  156.552    0.000  623.826    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10101   10.102    0.001  300.741    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.041    0.000   39.850    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.055    0.000   38.464    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   12.969    0.001   38.347    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.122    0.000   26.587    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.181    0.000   14.202    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.089    0.000    2.214    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.280    0.000    0.839    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.674    0.674 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
