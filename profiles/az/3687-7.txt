         5414311419 function calls (5414189380 primitive calls) in 1964.525 seconds
        1   11.229   11.229 1963.784 1963.784 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    6.802    0.001 1952.480    0.193 GerrymanderingMCMC.py:235(recombination_of_districts)
   424660    3.020    0.000 1317.365    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1698640    2.029    0.000  928.965    0.001 GerrymanderingMCMC.py:190(__district_size)
327848244  185.518    0.000  761.290    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10101   10.509    0.001  310.026    0.031 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.041    0.000   41.028    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.057    0.000   39.619    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.222    0.001   39.499    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.092    0.000   26.923    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.238    0.000   14.527    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.091    0.000    2.254    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.293    0.000    0.882    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.709    0.709 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
