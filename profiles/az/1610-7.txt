         4548834453 function calls (4548712414 primitive calls) in 1638.936 seconds
        1   10.900   10.900 1638.165 1638.165 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.391    0.001 1627.236    0.161 GerrymanderingMCMC.py:235(recombination_of_districts)
   342218    2.319    0.000 1006.675    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1368872    1.682    0.000  708.397    0.001 GerrymanderingMCMC.py:190(__district_size)
254020126  143.445    0.000  581.287    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10103    9.622    0.001  299.219    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.038    0.000   40.958    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.057    0.000   39.547    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.196    0.001   39.427    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.098    0.000   26.944    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.170    0.000   14.328    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.091    0.000    2.204    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.280    0.000    0.859    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.738    0.738 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
