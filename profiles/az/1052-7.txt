         4369546600 function calls (4369424561 primitive calls) in 1596.585 seconds
        1   11.068   11.068 1595.871 1595.871 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.123    0.001 1584.764    0.157 GerrymanderingMCMC.py:235(recombination_of_districts)
   318448    2.277    0.000  956.295    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1273792    1.582    0.000  673.243    0.001 GerrymanderingMCMC.py:190(__district_size)
238583206  135.169    0.000  550.935    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10101    9.835    0.001  301.645    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.041    0.000   41.163    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.078    0.000   39.732    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.410    0.001   39.576    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.094    0.000   27.201    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.223    0.000   14.321    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.099    0.000    2.284    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.282    0.000    0.861    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.682    0.682 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
