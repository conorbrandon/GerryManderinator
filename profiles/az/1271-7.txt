         5256105176 function calls (5255983137 primitive calls) in 1879.271 seconds
        1   11.605   11.605 1878.581 1878.581 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    6.542    0.001 1866.935    0.185 GerrymanderingMCMC.py:235(recombination_of_districts)
   410798    2.785    0.000 1244.243    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1643192    1.973    0.000  875.987    0.001 GerrymanderingMCMC.py:190(__district_size)
314344110  177.182    0.000  719.210    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10101    9.866    0.001  302.271    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.054    0.000   40.448    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.058    0.000   39.005    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.063    0.001   38.881    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.092    0.000   26.582    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.203    0.000   14.311    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.091    0.000    2.214    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.289    0.000    0.856    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.667    0.667 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
