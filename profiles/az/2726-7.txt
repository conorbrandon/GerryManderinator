         4822493473 function calls (4822371434 primitive calls) in 1714.982 seconds
        1   10.901   10.901 1714.224 1714.224 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.787    0.001 1703.295    0.169 GerrymanderingMCMC.py:235(recombination_of_districts)
   361279    2.555    0.000 1088.894    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1445116    1.728    0.000  763.532    0.001 GerrymanderingMCMC.py:190(__district_size)
276799812  152.827    0.000  624.757    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10101    9.556    0.001  298.783    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.048    0.000   39.775    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.056    0.000   38.353    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   12.583    0.001   38.234    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.089    0.000   26.444    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.149    0.000   14.336    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.090    0.000    2.197    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.296    0.000    0.874    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.726    0.726 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.006    0.006    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
