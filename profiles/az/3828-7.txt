         4473002145 function calls (4472880106 primitive calls) in 1626.858 seconds
        1   11.072   11.072 1626.125 1626.125 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.269    0.001 1615.023    0.160 GerrymanderingMCMC.py:235(recombination_of_districts)
   333513    2.334    0.000  987.845    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1334052    1.596    0.000  693.013    0.001 GerrymanderingMCMC.py:190(__district_size)
246886808  141.010    0.000  568.729    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10103   10.083    0.001  306.066    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.040    0.000   40.979    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.056    0.000   39.549    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.149    0.001   39.431    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.092    0.000   27.128    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.190    0.000   14.587    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.090    0.000    2.214    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.283    0.000    0.866    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.700    0.700 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
