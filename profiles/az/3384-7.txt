         5199256292 function calls (5199134253 primitive calls) in 1884.100 seconds
        1   11.651   11.651 1883.398 1883.398 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    6.589    0.001 1871.717    0.185 GerrymanderingMCMC.py:235(recombination_of_districts)
   393665    2.762    0.000 1234.790    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1574660    1.881    0.000  867.834    0.001 GerrymanderingMCMC.py:190(__district_size)
309093168  173.038    0.000  710.893    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10101   10.183    0.001  310.327    0.031 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.042    0.000   41.053    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.059    0.000   39.597    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.073    0.001   39.472    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.096    0.000   27.190    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.204    0.000   14.706    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.096    0.000    2.369    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.325    0.000    0.914    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.669    0.669 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
