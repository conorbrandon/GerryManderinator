         5074633586 function calls (5074511547 primitive calls) in 1832.541 seconds
        1   11.946   11.946 1831.796 1831.796 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    6.224    0.001 1819.734    0.180 GerrymanderingMCMC.py:235(recombination_of_districts)
   386314    2.671    0.000 1192.059    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1545256    1.829    0.000  839.796    0.001 GerrymanderingMCMC.py:190(__district_size)
298432412  169.448    0.000  689.431    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10103   10.029    0.001  304.731    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.041    0.000   40.424    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.059    0.000   38.993    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.130    0.001   38.868    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.094    0.000   26.793    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.203    0.000   14.410    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.093    0.000    2.262    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.283    0.000    0.867    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.720    0.720 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
