         5130100444 function calls (5129978405 primitive calls) in 1843.826 seconds
        1   11.177   11.177 1843.052 1843.052 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    6.377    0.001 1831.847    0.181 GerrymanderingMCMC.py:235(recombination_of_districts)
   400858    2.832    0.000 1207.695    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1603432    1.916    0.000  847.612    0.001 GerrymanderingMCMC.py:190(__district_size)
303629918  171.677    0.000  692.696    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10101    9.971    0.001  303.701    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.040    0.000   40.143    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.055    0.000   38.755    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   12.881    0.001   38.638    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.090    0.000   26.614    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.203    0.000   14.466    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.090    0.000    2.239    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.278    0.000    0.846    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.742    0.742 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
