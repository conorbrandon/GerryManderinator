         4453087155 function calls (4452965116 primitive calls) in 1611.379 seconds
        1   11.583   11.583 1610.512 1610.512 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.266    0.001 1598.896    0.158 GerrymanderingMCMC.py:235(recombination_of_districts)
   332059    2.313    0.000  974.272    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1328236    1.605    0.000  685.243    0.001 GerrymanderingMCMC.py:190(__district_size)
245231482  139.540    0.000  561.876    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100    9.840    0.001  303.439    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.040    0.000   40.760    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.064    0.000   39.343    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.284    0.001   39.217    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.097    0.000   27.005    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.180    0.000   14.338    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.093    0.000    2.229    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.306    0.000    0.905    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.834    0.834 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
