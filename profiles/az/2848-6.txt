         4624697601 function calls (4624575562 primitive calls) in 1677.869 seconds
        1   11.895   11.895 1677.164 1677.164 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.584    0.001 1665.201    0.165 GerrymanderingMCMC.py:235(recombination_of_districts)
   354626    2.486    0.000 1038.001    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1418504    1.688    0.000  728.837    0.001 GerrymanderingMCMC.py:190(__district_size)
260759954  149.544    0.000  597.820    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10101    9.869    0.001  302.270    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.040    0.000   40.842    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.058    0.000   39.394    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.238    0.001   39.270    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.093    0.000   26.989    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.293    0.000   14.395    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.092    0.000    2.261    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.287    0.000    0.849    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.673    0.673 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
