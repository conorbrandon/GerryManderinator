         5209124377 function calls (5209002338 primitive calls) in 1872.618 seconds
        1   11.489   11.489 1871.888 1871.888 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    6.449    0.001 1860.370    0.184 GerrymanderingMCMC.py:235(recombination_of_districts)
   404117    2.852    0.000 1233.697    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1616468    1.915    0.000  865.572    0.001 GerrymanderingMCMC.py:190(__district_size)
309838798  172.757    0.000  709.069    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   10.061    0.001  306.272    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.040    0.000   40.332    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.056    0.000   38.878    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.006    0.001   38.758    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.094    0.000   26.699    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.165    0.000   14.432    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.091    0.000    2.246    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.280    0.000    0.854    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.697    0.697 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
