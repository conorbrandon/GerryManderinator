         5444444431 function calls (5444322392 primitive calls) in 1955.199 seconds
        1   11.297   11.297 1954.413 1954.413 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    6.867    0.001 1943.045    0.192 GerrymanderingMCMC.py:235(recombination_of_districts)
   414813    2.931    0.000 1314.653    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1659252    2.062    0.000  927.246    0.001 GerrymanderingMCMC.py:190(__district_size)
329944270  189.035    0.000  760.312    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10101   10.146    0.001  305.239    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.039    0.000   40.822    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.060    0.000   39.404    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.250    0.001   39.280    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.092    0.000   26.969    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.229    0.000   14.645    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.090    0.000    2.246    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.291    0.000    0.900    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.752    0.752 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
