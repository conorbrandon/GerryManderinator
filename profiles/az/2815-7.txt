         4782126534 function calls (4782004495 primitive calls) in 1712.560 seconds
        1   11.188   11.188 1711.771 1711.771 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.707    0.001 1700.498    0.168 GerrymanderingMCMC.py:235(recombination_of_districts)
   358246    2.496    0.000 1082.537    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1432984    1.698    0.000  761.521    0.001 GerrymanderingMCMC.py:190(__district_size)
273920956  150.320    0.000  624.164    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10101    9.727    0.001  298.539    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.040    0.000   40.206    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.058    0.000   38.815    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   12.901    0.001   38.694    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.093    0.000   26.440    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.171    0.000   14.271    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.089    0.000    2.198    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.272    0.000    0.833    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.756    0.756 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
