         4984236181 function calls (4984114142 primitive calls) in 1806.898 seconds
        1   12.403   12.403 1806.193 1806.193 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    6.073    0.001 1793.733    0.178 GerrymanderingMCMC.py:235(recombination_of_districts)
   380334    2.593    0.000 1163.134    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1521336    1.770    0.000  818.959    0.001 GerrymanderingMCMC.py:190(__district_size)
291011364  161.847    0.000  670.310    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10101   10.083    0.001  304.560    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.043    0.000   40.985    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.072    0.000   39.528    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.340    0.001   39.387    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.096    0.000   27.016    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.231    0.000   14.486    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.097    0.000    2.333    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.282    0.000    0.864    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.672    0.672 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
