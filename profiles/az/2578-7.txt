         4859391681 function calls (4859269642 primitive calls) in 1745.523 seconds
        1   11.375   11.375 1744.818 1744.818 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.906    0.001 1733.412    0.172 GerrymanderingMCMC.py:235(recombination_of_districts)
   371052    2.587    0.000 1114.901    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1484208    1.724    0.000  784.545    0.001 GerrymanderingMCMC.py:190(__district_size)
280142164  157.454    0.000  643.491    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100    9.870    0.001  299.950    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.052    0.000   40.295    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.056    0.000   38.836    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   12.969    0.001   38.714    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.113    0.000   26.711    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.192    0.000   14.310    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.094    0.000    2.311    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.288    0.000    0.873    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.672    0.672 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.006    0.006    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.007    0.007 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
