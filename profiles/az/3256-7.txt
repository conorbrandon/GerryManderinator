         5139784198 function calls (5139662159 primitive calls) in 1872.560 seconds
        1   11.725   11.725 1871.851 1871.851 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    6.461    0.001 1860.082    0.184 GerrymanderingMCMC.py:235(recombination_of_districts)
   400201    2.875    0.000 1229.187    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1600804    1.964    0.000  862.011    0.001 GerrymanderingMCMC.py:190(__district_size)
304450240  171.098    0.000  704.809    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10101   10.040    0.001  305.682    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.040    0.000   41.012    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.057    0.000   39.567    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.236    0.001   39.446    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.103    0.000   27.235    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.191    0.000   14.562    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.093    0.000    2.257    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.283    0.000    0.879    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.676    0.676 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.006    0.006    0.030    0.030 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
