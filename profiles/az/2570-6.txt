         5087234691 function calls (5087112652 primitive calls) in 1823.600 seconds
        1   11.325   11.325 1822.888 1822.888 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    6.329    0.001 1811.533    0.179 GerrymanderingMCMC.py:235(recombination_of_districts)
   389450    2.691    0.000 1184.221    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1557800    1.858    0.000  830.865    0.001 GerrymanderingMCMC.py:190(__district_size)
299905042  168.814    0.000  681.212    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10102    9.768    0.001  303.823    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.040    0.000   40.499    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.057    0.000   39.072    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.361    0.001   38.948    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.096    0.000   26.810    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.185    0.000   14.471    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.098    0.000    2.324    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.304    0.000    0.863    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.679    0.679 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
