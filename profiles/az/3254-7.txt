         4607362666 function calls (4607240627 primitive calls) in 1678.094 seconds
        1   11.593   11.593 1677.351 1677.351 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.578    0.001 1665.727    0.165 GerrymanderingMCMC.py:235(recombination_of_districts)
   350029    2.474    0.000 1040.318    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1400116    1.678    0.000  731.128    0.001 GerrymanderingMCMC.py:190(__district_size)
258941642  146.457    0.000  598.140    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10105    9.867    0.001  300.914    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.041    0.000   41.151    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.058    0.000   39.715    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.409    0.001   39.589    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.095    0.000   27.173    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.266    0.000   14.486    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.098    0.000    2.316    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.292    0.000    0.878    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.710    0.710 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.006    0.006    0.030    0.030 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
