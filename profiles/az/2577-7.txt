         5441722639 function calls (5441600600 primitive calls) in 1956.030 seconds
        1   11.437   11.437 1955.253 1955.253 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    6.765    0.001 1943.785    0.192 GerrymanderingMCMC.py:235(recombination_of_districts)
   419687    2.890    0.000 1318.125    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1678748    2.008    0.000  924.922    0.001 GerrymanderingMCMC.py:190(__district_size)
330855054  186.375    0.000  756.654    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10103    9.754    0.001  301.057    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.041    0.000   41.190    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.056    0.000   39.794    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.350    0.001   39.672    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.094    0.000   27.225    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.185    0.000   14.455    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.110    0.000    2.275    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.283    0.000    0.889    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.744    0.744 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
