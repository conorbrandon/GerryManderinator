         4652695405 function calls (4652573366 primitive calls) in 1672.368 seconds
        1   11.745   11.745 1671.634 1671.634 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.665    0.001 1659.860    0.164 GerrymanderingMCMC.py:235(recombination_of_districts)
   353333    2.391    0.000 1038.150    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1413332    1.717    0.000  730.234    0.001 GerrymanderingMCMC.py:190(__district_size)
262409528  147.146    0.000  597.222    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100    9.918    0.001  302.830    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.043    0.000   39.795    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.056    0.000   38.368    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   12.877    0.001   38.248    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.108    0.000   26.494    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.197    0.000   14.294    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.090    0.000    2.212    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.273    0.000    0.847    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.702    0.702 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
