         4715188668 function calls (4715066629 primitive calls) in 1714.246 seconds
        1   11.848   11.848 1713.487 1713.487 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.757    0.001 1701.581    0.168 GerrymanderingMCMC.py:235(recombination_of_districts)
   354661    2.463    0.000 1069.605    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1418644    1.711    0.000  750.938    0.001 GerrymanderingMCMC.py:190(__district_size)
267525222  151.396    0.000  614.617    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   10.111    0.001  307.862    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.042    0.000   40.583    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.057    0.000   39.142    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.171    0.001   39.020    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.098    0.000   26.970    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.222    0.000   14.545    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.099    0.000    2.274    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.294    0.000    0.876    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.726    0.726 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.006    0.006    0.030    0.030 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
