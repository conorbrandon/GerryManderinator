         5183818973 function calls (5183696934 primitive calls) in 1871.397 seconds
        1   11.200   11.200 1870.693 1870.693 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    6.491    0.001 1859.464    0.184 GerrymanderingMCMC.py:235(recombination_of_districts)
   400940    2.863    0.000 1235.950    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1603760    1.915    0.000  870.304    0.001 GerrymanderingMCMC.py:190(__district_size)
308299766  175.620    0.000  715.379    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10102    9.760    0.001  303.162    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.040    0.000   40.704    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.055    0.000   39.294    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.209    0.001   39.176    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.092    0.000   27.009    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.218    0.000   14.385    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.091    0.000    2.234    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.293    0.000    0.871    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.671    0.671 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.006    0.006    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
