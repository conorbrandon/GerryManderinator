         4692479465 function calls (4692357426 primitive calls) in 1688.662 seconds
        1   11.013   11.013 1687.964 1687.964 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.630    0.001 1676.907    0.166 GerrymanderingMCMC.py:235(recombination_of_districts)
   343989    2.372    0.000 1056.715    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1375956    1.635    0.000  743.039    0.001 GerrymanderingMCMC.py:190(__district_size)
265402184  150.144    0.000  608.571    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10103   10.001    0.001  301.158    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.039    0.000   39.765    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.055    0.000   38.371    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   12.940    0.001   38.254    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.092    0.000   26.458    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.192    0.000   14.324    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.090    0.000    2.209    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.291    0.000    0.849    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.666    0.666 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
