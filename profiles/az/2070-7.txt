         4981252001 function calls (4981129962 primitive calls) in 1800.036 seconds
        1   11.805   11.805 1799.337 1799.337 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    6.033    0.001 1787.484    0.177 GerrymanderingMCMC.py:235(recombination_of_districts)
   376993    2.588    0.000 1161.495    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1507972    1.835    0.000  816.628    0.001 GerrymanderingMCMC.py:190(__district_size)
290553672  163.197    0.000  668.882    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10105   10.095    0.001  304.066    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.041    0.000   40.799    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.059    0.000   39.348    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.391    0.001   39.222    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.094    0.000   27.121    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.197    0.000   14.495    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.096    0.000    2.301    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.303    0.000    0.876    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.667    0.667 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
