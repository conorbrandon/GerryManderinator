         4567739434 function calls (4567617395 primitive calls) in 1644.306 seconds
        1   11.257   11.257 1643.535 1643.535 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.406    0.001 1632.231    0.162 GerrymanderingMCMC.py:235(recombination_of_districts)
   331303    2.348    0.000 1013.090    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1325212    1.552    0.000  712.786    0.001 GerrymanderingMCMC.py:190(__district_size)
255375186  145.351    0.000  584.166    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100    9.749    0.001  300.025    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.040    0.000   40.613    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.055    0.000   39.196    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   12.972    0.001   39.076    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.094    0.000   26.807    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.174    0.000   14.310    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.091    0.000    2.187    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.274    0.000    0.836    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.740    0.740 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
