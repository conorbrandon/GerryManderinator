         4777279642 function calls (4777157603 primitive calls) in 1729.598 seconds
        1   11.808   11.808 1728.897 1728.897 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.765    0.001 1717.057    0.170 GerrymanderingMCMC.py:235(recombination_of_districts)
   368389    2.519    0.000 1091.217    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1473556    1.757    0.000  768.227    0.001 GerrymanderingMCMC.py:190(__district_size)
272913324  156.833    0.000  628.190    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10102   10.219    0.001  305.495    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.040    0.000   40.424    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.058    0.000   38.998    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.002    0.001   38.875    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.092    0.000   26.696    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.229    0.000   14.452    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.089    0.000    2.248    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.277    0.000    0.842    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.668    0.668 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.006    0.006    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
