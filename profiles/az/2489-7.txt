         4605844843 function calls (4605722804 primitive calls) in 1659.534 seconds
        1   11.193   11.193 1658.835 1658.835 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.455    0.001 1647.612    0.163 GerrymanderingMCMC.py:235(recombination_of_districts)
   347552    2.361    0.000 1026.252    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1390208    1.642    0.000  720.637    0.001 GerrymanderingMCMC.py:190(__district_size)
259149878  143.985    0.000  591.242    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10102    9.888    0.001  301.256    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.040    0.000   40.480    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.055    0.000   39.054    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.309    0.001   38.937    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.090    0.000   26.720    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.164    0.000   14.281    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.091    0.000    2.234    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.274    0.000    0.842    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.667    0.667 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
