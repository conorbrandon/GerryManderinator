         4702506844 function calls (4702384805 primitive calls) in 1688.527 seconds
        1   11.254   11.254 1687.781 1687.781 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.653    0.001 1676.497    0.166 GerrymanderingMCMC.py:235(recombination_of_districts)
   358809    2.514    0.000 1052.909    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1435236    1.722    0.000  740.820    0.001 GerrymanderingMCMC.py:190(__district_size)
266791454  149.796    0.000  606.335    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   10.219    0.001  301.617    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.048    0.000   40.470    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.060    0.000   38.988    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.067    0.001   38.861    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.094    0.000   26.854    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.158    0.000   14.280    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.109    0.000    2.321    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.274    0.000    0.848    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.713    0.713 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
