         4625737333 function calls (4625615294 primitive calls) in 1663.353 seconds
        1   11.378   11.378 1662.658 1662.658 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.529    0.001 1651.251    0.163 GerrymanderingMCMC.py:235(recombination_of_districts)
   352250    2.466    0.000 1030.458    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1409000    1.684    0.000  723.795    0.001 GerrymanderingMCMC.py:190(__district_size)
260109304  146.855    0.000  592.871    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100    9.993    0.001  301.805    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.039    0.000   39.958    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.056    0.000   38.538    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   12.888    0.001   38.419    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.091    0.000   26.604    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.170    0.000   14.368    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.092    0.000    2.255    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.300    0.000    0.861    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.664    0.664 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
