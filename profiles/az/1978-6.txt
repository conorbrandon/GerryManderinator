         4632019950 function calls (4631897911 primitive calls) in 1670.755 seconds
        1   11.047   11.047 1670.007 1670.007 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.557    0.001 1658.929    0.164 GerrymanderingMCMC.py:235(recombination_of_districts)
   351450    2.497    0.000 1036.945    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1405800    1.632    0.000  729.433    0.001 GerrymanderingMCMC.py:190(__district_size)
261040900  147.721    0.000  598.025    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10101   10.057    0.001  302.200    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.040    0.000   40.032    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.061    0.000   38.612    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   12.973    0.001   38.489    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.102    0.000   26.585    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.130    0.000   14.263    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.090    0.000    2.197    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.280    0.000    0.842    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.715    0.715 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
