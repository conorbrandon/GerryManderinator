         5287973444 function calls (5287851405 primitive calls) in 1909.426 seconds
        1   11.776   11.776 1908.695 1908.695 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    6.655    0.001 1896.864    0.188 GerrymanderingMCMC.py:235(recombination_of_districts)
   408603    2.900    0.000 1269.430    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1634412    1.967    0.000  896.318    0.001 GerrymanderingMCMC.py:190(__district_size)
317554844  182.240    0.000  734.937    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100    9.846    0.001  302.231    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.042    0.000   41.273    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.058    0.000   39.844    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.388    0.001   39.720    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.095    0.000   27.171    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.215    0.000   14.430    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.092    0.000    2.274    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.291    0.000    0.872    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.697    0.697 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.006    0.006    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
