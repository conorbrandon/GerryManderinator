         5310721072 function calls (5310599033 primitive calls) in 1917.698 seconds
        1   11.608   11.608 1916.997 1916.997 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    6.640    0.001 1905.356    0.189 GerrymanderingMCMC.py:235(recombination_of_districts)
   413465    2.819    0.000 1274.780    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1653860    2.009    0.000  899.052    0.001 GerrymanderingMCMC.py:190(__district_size)
318665318  182.995    0.000  737.262    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10102   10.011    0.001  306.046    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.043    0.000   40.700    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.058    0.000   39.271    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.131    0.001   39.143    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.094    0.000   26.866    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.280    0.000   14.530    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.098    0.000    2.278    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.282    0.000    0.855    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.668    0.668 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
