         4578797016 function calls (4578674977 primitive calls) in 1664.703 seconds
        1   11.401   11.401 1664.007 1664.007 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.528    0.001 1652.576    0.164 GerrymanderingMCMC.py:235(recombination_of_districts)
   347243    2.440    0.000 1027.295    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1388972    1.656    0.000  722.654    0.001 GerrymanderingMCMC.py:190(__district_size)
256483414  145.116    0.000  591.445    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10103    9.998    0.001  303.803    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.041    0.000   40.774    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.059    0.000   39.367    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.209    0.001   39.242    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.094    0.000   26.846    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.163    0.000   14.350    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.127    0.000    2.325    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.278    0.000    0.898    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.664    0.664 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
