         5088037137 function calls (5087915098 primitive calls) in 1834.136 seconds
        1   11.474   11.474 1833.399 1833.399 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    6.280    0.001 1821.896    0.180 GerrymanderingMCMC.py:235(recombination_of_districts)
   387157    2.669    0.000 1191.209    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1548628    1.838    0.000  837.411    0.001 GerrymanderingMCMC.py:190(__district_size)
299803536  166.031    0.000  685.681    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10103    9.814    0.001  305.190    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.039    0.000   40.726    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.057    0.000   39.292    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.143    0.001   39.134    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.097    0.000   26.871    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.199    0.000   14.579    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.101    0.000    2.268    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.280    0.000    0.857    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.704    0.704 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.006    0.006    0.030    0.030 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
