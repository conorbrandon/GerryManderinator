         5087721200 function calls (5087599161 primitive calls) in 1858.622 seconds
        1   11.272   11.272 1857.850 1857.850 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    6.327    0.001 1846.549    0.183 GerrymanderingMCMC.py:235(recombination_of_districts)
   395298    2.755    0.000 1217.903    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1581192    1.914    0.000  855.543    0.001 GerrymanderingMCMC.py:190(__district_size)
300054356  171.048    0.000  701.178    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   10.016    0.001  304.670    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.040    0.000   40.818    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.058    0.000   39.401    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.253    0.001   39.278    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.101    0.000   27.033    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.213    0.000   14.614    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.094    0.000    2.330    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.309    0.000    0.877    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.740    0.740 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.028    0.028 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
