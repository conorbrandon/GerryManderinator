         4502917527 function calls (4502795488 primitive calls) in 1626.552 seconds
        1   11.187   11.187 1625.845 1625.845 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.264    0.001 1614.628    0.160 GerrymanderingMCMC.py:235(recombination_of_districts)
   329882    2.328    0.000  994.795    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1319528    1.596    0.000  699.744    0.001 GerrymanderingMCMC.py:190(__district_size)
249492834  140.552    0.000  572.149    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10101    9.842    0.001  301.129    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.041    0.000   40.190    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.058    0.000   38.810    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.125    0.001   38.687    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.094    0.000   26.716    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.174    0.000   14.338    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.095    0.000    2.240    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.273    0.000    0.826    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.675    0.675 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.006    0.006    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
