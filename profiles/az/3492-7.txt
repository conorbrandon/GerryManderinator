         4496544939 function calls (4496422900 primitive calls) in 1623.376 seconds
        1   11.742   11.742 1622.636 1622.636 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.319    0.001 1610.862    0.159 GerrymanderingMCMC.py:235(recombination_of_districts)
   331533    2.285    0.000  990.308    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1326132    1.627    0.000  695.264    0.001 GerrymanderingMCMC.py:190(__district_size)
249610976  140.540    0.000  570.131    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10103    9.873    0.001  299.405    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.051    0.000   40.201    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.057    0.000   38.795    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   12.968    0.001   38.660    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.102    0.000   26.564    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.195    0.000   14.270    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.092    0.000    2.235    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.275    0.000    0.829    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.707    0.707 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
