         4539403853 function calls (4539281814 primitive calls) in 1652.925 seconds
        1   11.114   11.114 1652.190 1652.190 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.446    0.001 1640.936    0.162 GerrymanderingMCMC.py:235(recombination_of_districts)
   335837    2.300    0.000 1016.563    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1343348    1.606    0.000  715.554    0.001 GerrymanderingMCMC.py:190(__district_size)
252905342  143.666    0.000  587.795    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10102    9.989    0.001  303.584    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.040    0.000   40.630    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.057    0.000   39.246    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.132    0.001   39.125    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.110    0.000   26.831    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.191    0.000   14.453    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.090    0.000    2.227    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.291    0.000    0.877    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.700    0.700 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
