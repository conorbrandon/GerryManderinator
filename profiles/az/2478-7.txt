         5238382639 function calls (5238260600 primitive calls) in 1881.391 seconds
        1   11.898   11.898 1880.625 1880.625 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    6.513    0.001 1868.681    0.185 GerrymanderingMCMC.py:235(recombination_of_districts)
   409907    2.834    0.000 1241.905    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1639628    1.954    0.000  870.297    0.001 GerrymanderingMCMC.py:190(__district_size)
313050630  172.549    0.000  712.192    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   10.001    0.001  301.724    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.041    0.000   40.621    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.058    0.000   39.199    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.086    0.001   39.073    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.109    0.000   26.909    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.165    0.000   14.389    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.094    0.000    2.269    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.281    0.000    0.855    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.734    0.734 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.006    0.006    0.030    0.030 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
