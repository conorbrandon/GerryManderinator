         4292115802 function calls (4291993763 primitive calls) in 1557.645 seconds
        1   11.146   11.146 1556.917 1556.917 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    4.895    0.000 1545.744    0.153 GerrymanderingMCMC.py:235(recombination_of_districts)
   310525    2.257    0.000  926.897    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1242100    1.468    0.000  651.867    0.001 GerrymanderingMCMC.py:190(__district_size)
231943496  130.464    0.000  533.177    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10102   10.067    0.001  301.318    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.046    0.000   40.727    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.056    0.000   39.338    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.117    0.001   39.217    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.089    0.000   26.893    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.167    0.000   14.360    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.088    0.000    2.222    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.278    0.000    0.910    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.695    0.695 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
