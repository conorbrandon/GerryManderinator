         4928206698 function calls (4928084659 primitive calls) in 1797.583 seconds
        1   11.216   11.216 1796.830 1796.830 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    6.033    0.001 1785.585    0.177 GerrymanderingMCMC.py:235(recombination_of_districts)
   380365    2.608    0.000 1157.533    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1521460    1.853    0.000  815.180    0.001 GerrymanderingMCMC.py:190(__district_size)
286746306  164.570    0.000  667.264    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10102    9.898    0.001  305.023    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.039    0.000   41.335    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.057    0.000   39.939    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.389    0.001   39.819    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.093    0.000   27.336    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.264    0.000   14.555    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.091    0.000    2.177    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.288    0.000    0.854    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.720    0.720 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.006    0.006    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
