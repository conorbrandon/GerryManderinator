         4745445680 function calls (4745323641 primitive calls) in 1714.102 seconds
        1   11.976   11.976 1713.310 1713.310 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.764    0.001 1701.302    0.168 GerrymanderingMCMC.py:235(recombination_of_districts)
   353952    2.473    0.000 1073.867    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1415808    1.721    0.000  756.514    0.001 GerrymanderingMCMC.py:190(__district_size)
270717148  151.813    0.000  619.208    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100    9.907    0.001  304.281    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.041    0.000   40.599    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.058    0.000   39.138    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.079    0.001   39.012    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.096    0.000   26.742    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.225    0.000   14.370    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.099    0.000    2.289    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.278    0.000    0.834    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.759    0.759 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
