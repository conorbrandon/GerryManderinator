         4781924912 function calls (4781802873 primitive calls) in 1714.202 seconds
        1   11.314   11.314 1713.455 1713.455 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.767    0.001 1702.113    0.169 GerrymanderingMCMC.py:235(recombination_of_districts)
   363934    2.494    0.000 1081.438    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1455736    1.771    0.000  760.322    0.001 GerrymanderingMCMC.py:190(__district_size)
273682750  153.907    0.000  621.326    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10101    9.820    0.001  300.814    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.040    0.000   40.327    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.055    0.000   38.932    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.060    0.001   38.813    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.104    0.000   26.683    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.178    0.000   14.189    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.092    0.000    2.194    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.276    0.000    0.849    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.715    0.715 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
