         5127255238 function calls (5127133199 primitive calls) in 1826.663 seconds
        1   10.885   10.885 1825.870 1825.870 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    6.233    0.001 1814.956    0.180 GerrymanderingMCMC.py:235(recombination_of_districts)
   400107    2.711    0.000 1197.478    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1600428    1.844    0.000  842.193    0.001 GerrymanderingMCMC.py:190(__district_size)
303450400  168.987    0.000  691.520    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10102    9.804    0.001  298.827    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.037    0.000   40.352    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.055    0.000   38.986    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.031    0.001   38.868    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.091    0.000   26.604    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.204    0.000   14.315    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.086    0.000    2.209    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.280    0.000    0.838    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.757    0.757 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.033    0.033 GerrymanderingMCMC.py:21(__init__)
        1    0.006    0.006    0.033    0.033 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.007    0.007 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
