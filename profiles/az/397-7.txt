         5218448763 function calls (5218326724 primitive calls) in 1866.775 seconds
        1   11.327   11.327 1866.073 1866.073 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    6.466    0.001 1854.714    0.184 GerrymanderingMCMC.py:235(recombination_of_districts)
   404657    2.838    0.000 1229.088    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1618628    1.932    0.000  864.123    0.001 GerrymanderingMCMC.py:190(__district_size)
311126456  173.310    0.000  709.419    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10101   10.095    0.001  303.885    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.041    0.000   40.292    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.056    0.000   38.866    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.019    0.001   38.748    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.090    0.000   26.568    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.186    0.000   14.444    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.091    0.000    2.209    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.279    0.000    0.854    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.669    0.669 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
