         4769021909 function calls (4768899870 primitive calls) in 1737.134 seconds
        1   11.259   11.259 1736.399 1736.399 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.764    0.001 1725.087    0.171 GerrymanderingMCMC.py:235(recombination_of_districts)
   362437    2.539    0.000 1101.783    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1449748    1.724    0.000  775.640    0.001 GerrymanderingMCMC.py:190(__district_size)
273105050  151.624    0.000  634.601    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10103    9.919    0.001  301.404    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.039    0.000   40.695    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.056    0.000   39.286    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.063    0.001   39.164    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.093    0.000   26.965    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.141    0.000   14.369    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.094    0.000    2.272    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.279    0.000    0.869    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.709    0.709 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
