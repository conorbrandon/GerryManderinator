         4539619451 function calls (4539497412 primitive calls) in 1636.576 seconds
        1   11.729   11.729 1635.880 1635.880 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.369    0.001 1624.122    0.161 GerrymanderingMCMC.py:235(recombination_of_districts)
   340446    2.444    0.000 1001.364    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1361784    1.593    0.000  704.201    0.001 GerrymanderingMCMC.py:190(__district_size)
253065128  141.209    0.000  575.585    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10101    9.890    0.001  301.139    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.041    0.000   40.576    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.057    0.000   39.148    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.173    0.001   39.028    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.094    0.000   26.702    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.194    0.000   14.316    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.091    0.000    2.197    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.279    0.000    0.859    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.664    0.664 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
