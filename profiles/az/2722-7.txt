         5203236719 function calls (5203114680 primitive calls) in 1888.880 seconds
        1   11.295   11.295 1888.142 1888.142 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    6.481    0.001 1876.817    0.186 GerrymanderingMCMC.py:235(recombination_of_districts)
   404866    2.815    0.000 1243.752    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1619464    1.939    0.000  871.923    0.001 GerrymanderingMCMC.py:190(__district_size)
309662560  176.708    0.000  714.542    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   10.106    0.001  307.342    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.042    0.000   41.505    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.058    0.000   40.033    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.660    0.001   39.909    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.096    0.000   27.408    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.261    0.000   14.735    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.098    0.000    2.350    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.285    0.000    0.858    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.707    0.707 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
