         5101438466 function calls (5101316427 primitive calls) in 1855.416 seconds
        1   11.467   11.467 1854.679 1854.679 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    6.328    0.001 1843.184    0.182 GerrymanderingMCMC.py:235(recombination_of_districts)
   390667    2.755    0.000 1213.115    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1562668    1.870    0.000  851.403    0.001 GerrymanderingMCMC.py:190(__district_size)
300702722  170.377    0.000  696.244    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10102   10.130    0.001  306.838    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.042    0.000   40.441    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.056    0.000   38.997    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.003    0.001   38.874    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.092    0.000   26.874    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.201    0.000   14.714    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.092    0.000    2.249    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.276    0.000    0.842    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.703    0.703 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.006    0.006    0.030    0.030 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
