         4790612704 function calls (4790490665 primitive calls) in 1727.342 seconds
        1   11.380   11.380 1726.605 1726.605 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.898    0.001 1715.186    0.170 GerrymanderingMCMC.py:235(recombination_of_districts)
   358312    2.494    0.000 1088.416    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1433248    1.664    0.000  765.052    0.001 GerrymanderingMCMC.py:190(__district_size)
274345536  154.396    0.000  626.647    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10101   10.243    0.001  304.724    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.043    0.000   40.473    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.074    0.000   39.053    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.140    0.001   38.898    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.100    0.000   26.843    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.191    0.000   14.381    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.097    0.000    2.270    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.296    0.000    0.865    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.704    0.704 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
