         4549368621 function calls (4549246582 primitive calls) in 1639.072 seconds
        1   12.007   12.007 1638.366 1638.366 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.453    0.001 1626.330    0.161 GerrymanderingMCMC.py:235(recombination_of_districts)
   343612    2.371    0.000 1005.646    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1374448    1.602    0.000  705.924    0.001 GerrymanderingMCMC.py:190(__district_size)
254759322  140.728    0.000  577.890    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10102    9.990    0.001  299.789    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.040    0.000   40.142    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.057    0.000   38.718    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.015    0.001   38.595    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.103    0.000   26.474    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.170    0.000   14.114    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.093    0.000    2.215    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.289    0.000    0.848    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.673    0.673 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
