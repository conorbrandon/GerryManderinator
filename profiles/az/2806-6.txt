         4610989363 function calls (4610867324 primitive calls) in 1672.461 seconds
        1   11.554   11.554 1671.717 1671.717 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.466    0.001 1660.121    0.164 GerrymanderingMCMC.py:235(recombination_of_districts)
   341367    2.391    0.000 1031.451    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1365468    1.628    0.000  725.253    0.001 GerrymanderingMCMC.py:190(__district_size)
258853154  146.789    0.000  594.948    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10101    9.881    0.001  303.366    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.040    0.000   40.184    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.064    0.000   38.781    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.030    0.001   38.654    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.095    0.000   26.627    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.183    0.000   14.554    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.095    0.000    2.258    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.270    0.000    0.815    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.712    0.712 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
