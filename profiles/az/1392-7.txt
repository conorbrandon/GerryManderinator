         4717540195 function calls (4717418156 primitive calls) in 1700.176 seconds
        1   12.111   12.111 1699.463 1699.463 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.702    0.001 1687.275    0.167 GerrymanderingMCMC.py:235(recombination_of_districts)
   349727    2.504    0.000 1057.781    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1398908    1.649    0.000  743.109    0.001 GerrymanderingMCMC.py:190(__district_size)
267862904  147.228    0.000  609.378    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   10.178    0.001  305.657    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.042    0.000   40.486    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.071    0.000   39.026    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.200    0.001   38.866    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.096    0.000   26.741    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.233    0.000   14.442    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.113    0.000    2.320    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.282    0.000    0.863    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.686    0.686 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.006    0.006    0.030    0.030 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.007    0.007 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
