         5035230142 function calls (5035108103 primitive calls) in 1822.722 seconds
        1   12.010   12.010 1821.947 1821.947 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    6.259    0.001 1809.864    0.179 GerrymanderingMCMC.py:235(recombination_of_districts)
   378831    2.707    0.000 1178.033    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1515324    1.794    0.000  829.286    0.001 GerrymanderingMCMC.py:190(__district_size)
294914694  168.152    0.000  680.598    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10104   10.146    0.001  305.750    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.044    0.000   40.813    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.082    0.000   39.353    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.244    0.001   39.201    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.096    0.000   26.929    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.225    0.000   14.549    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.097    0.000    2.307    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.278    0.000    0.846    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.742    0.742 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.006    0.006    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
