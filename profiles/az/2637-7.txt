         5264865581 function calls (5264743542 primitive calls) in 1876.785 seconds
        1   10.908   10.908 1876.095 1876.095 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    6.519    0.001 1865.159    0.185 GerrymanderingMCMC.py:235(recombination_of_districts)
   405243    2.764    0.000 1241.260    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1620972    1.938    0.000  874.679    0.001 GerrymanderingMCMC.py:190(__district_size)
314718852  175.395    0.000  717.352    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   10.280    0.001  305.089    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.039    0.000   40.062    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.055    0.000   38.636    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   12.975    0.001   38.518    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.091    0.000   26.504    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.161    0.000   14.243    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.089    0.000    2.186    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.277    0.000    0.839    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.658    0.658 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
