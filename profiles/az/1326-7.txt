         4894349386 function calls (4894227347 primitive calls) in 1766.733 seconds
        1   11.392   11.392 1765.842 1765.842 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.976    0.001 1754.421    0.174 GerrymanderingMCMC.py:235(recombination_of_districts)
   374331    2.582    0.000 1124.815    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1497324    1.758    0.000  790.741    0.001 GerrymanderingMCMC.py:190(__district_size)
283181966  159.312    0.000  647.719    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   10.048    0.001  307.287    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.040    0.000   40.779    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.057    0.000   39.363    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.090    0.001   39.239    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.093    0.000   27.116    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.192    0.000   14.400    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.093    0.000    2.344    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.283    0.000    0.871    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.859    0.859 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
