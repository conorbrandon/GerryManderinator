         4823852874 function calls (4823730835 primitive calls) in 1735.804 seconds
        1   11.607   11.607 1734.923 1734.923 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.969    0.001 1723.282    0.171 GerrymanderingMCMC.py:235(recombination_of_districts)
   374927    2.618    0.000 1101.315    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1499708    1.856    0.000  773.616    0.001 GerrymanderingMCMC.py:190(__district_size)
277130922  156.825    0.000  632.915    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10101    9.754    0.001  299.984    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.040    0.000   40.187    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.057    0.000   38.754    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.170    0.001   38.633    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.094    0.000   26.641    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.199    0.000   14.392    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.093    0.000    2.249    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.286    0.000    0.861    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.847    0.847 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
