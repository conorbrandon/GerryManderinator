         4561240888 function calls (4561118849 primitive calls) in 1671.963 seconds
        1   11.535   11.535 1671.186 1671.186 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.512    0.001 1659.621    0.164 GerrymanderingMCMC.py:235(recombination_of_districts)
   340646    2.372    0.000 1031.479    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1362584    1.663    0.000  725.542    0.001 GerrymanderingMCMC.py:190(__district_size)
254493110  146.770    0.000  595.340    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   10.037    0.001  304.328    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.044    0.000   41.079    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.059    0.000   39.612    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.496    0.001   39.486    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.095    0.000   27.121    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.244    0.000   14.613    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.093    0.000    2.251    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.287    0.000    0.870    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.757    0.757 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
