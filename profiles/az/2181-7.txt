         5219284144 function calls (5219162105 primitive calls) in 1856.854 seconds
        1   11.566   11.566 1855.635 1855.635 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    6.514    0.001 1844.039    0.183 GerrymanderingMCMC.py:235(recombination_of_districts)
   405462    2.803    0.000 1220.438    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1621848    1.909    0.000  857.123    0.001 GerrymanderingMCMC.py:190(__district_size)
311095120  170.662    0.000  700.825    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10104    9.970    0.001  302.159    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.040    0.000   39.689    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.058    0.000   38.265    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   12.756    0.001   38.140    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.095    0.000   26.256    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.152    0.000   14.204    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.095    0.000    2.255    0.000 GerrymanderingMCMC.py:157(__random_district_label)
        1    0.000    0.000    1.187    1.187 GerrymanderingMCMC.py:1(<module>)
    10100    0.274    0.000    0.855    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
