         5369839607 function calls (5369717568 primitive calls) in 1924.177 seconds
        1   11.548   11.548 1923.382 1923.382 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    6.628    0.001 1911.805    0.189 GerrymanderingMCMC.py:235(recombination_of_districts)
   423427    2.941    0.000 1286.694    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1693708    2.035    0.000  906.896    0.001 GerrymanderingMCMC.py:190(__district_size)
323384104  183.800    0.000  741.644    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10102   10.024    0.001  303.221    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.040    0.000   40.157    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.057    0.000   38.758    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.039    0.001   38.625    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.095    0.000   26.690    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.226    0.000   14.459    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.095    0.000    2.276    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.310    0.000    0.867    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.762    0.762 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
