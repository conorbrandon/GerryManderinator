         5208335100 function calls (5208213061 primitive calls) in 1861.043 seconds
        1   11.454   11.454 1857.404 1857.404 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    6.606    0.001 1845.914    0.183 GerrymanderingMCMC.py:235(recombination_of_districts)
   403982    2.745    0.000 1223.382    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1615928    1.921    0.000  860.902    0.001 GerrymanderingMCMC.py:190(__district_size)
309788804  173.604    0.000  704.362    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10101    9.885    0.001  302.119    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.041    0.000   39.930    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.057    0.000   38.513    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   12.950    0.001   38.389    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.094    0.000   26.435    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.202    0.000   14.321    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
        1    0.000    0.000    3.625    3.625 GerrymanderingMCMC.py:1(<module>)
    30300    0.090    0.000    2.257    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.286    0.000    0.856    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.030    0.030 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.007    0.007 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
