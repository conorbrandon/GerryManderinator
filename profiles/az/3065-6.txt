         4142402719 function calls (4142280680 primitive calls) in 1512.842 seconds
        1   11.673   11.673 1512.086 1512.086 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    4.796    0.000 1500.381    0.149 GerrymanderingMCMC.py:235(recombination_of_districts)
   300753    2.084    0.000  873.752    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1203012    1.437    0.000  611.895    0.001 GerrymanderingMCMC.py:190(__district_size)
219061444  122.279    0.000  501.241    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10103   10.000    0.001  303.513    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.041    0.000   41.039    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.058    0.000   39.605    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.387    0.001   39.482    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.093    0.000   27.035    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.190    0.000   14.366    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.106    0.000    2.265    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.283    0.000    0.837    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.723    0.723 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
