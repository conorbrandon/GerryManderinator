         5037554015 function calls (5037431976 primitive calls) in 1809.702 seconds
        1   12.391   12.391 1808.973 1808.973 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    6.239    0.001 1796.548    0.178 GerrymanderingMCMC.py:235(recombination_of_districts)
   379054    2.605    0.000 1168.818    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1516216    1.788    0.000  820.963    0.001 GerrymanderingMCMC.py:190(__district_size)
295508098  165.724    0.000  672.188    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100    9.961    0.001  302.558    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.039    0.000   40.740    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.059    0.000   39.310    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.127    0.001   39.185    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.097    0.000   26.886    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.234    0.000   14.408    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.095    0.000    2.273    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.277    0.000    0.853    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.696    0.696 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
