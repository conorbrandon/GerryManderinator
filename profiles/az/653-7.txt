         4911101010 function calls (4910978971 primitive calls) in 1771.450 seconds
        1   11.298   11.298 1770.746 1770.746 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    6.067    0.001 1759.402    0.174 GerrymanderingMCMC.py:235(recombination_of_districts)
   379282    2.654    0.000 1132.405    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1517128    1.825    0.000  798.055    0.001 GerrymanderingMCMC.py:190(__district_size)
284465660  158.822    0.000  654.064    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   10.065    0.001  306.738    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.041    0.000   40.775    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.058    0.000   39.375    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.097    0.001   39.253    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.091    0.000   26.945    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.159    0.000   14.448    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.091    0.000    2.251    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.287    0.000    0.852    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.670    0.670 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
