         4781617830 function calls (4781495791 primitive calls) in 1717.652 seconds
        1   11.879   11.879 1716.919 1716.919 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.837    0.001 1705.009    0.169 GerrymanderingMCMC.py:235(recombination_of_districts)
   366275    2.541    0.000 1081.462    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1465100    1.734    0.000  759.896    0.001 GerrymanderingMCMC.py:190(__district_size)
273688758  153.560    0.000  623.613    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10103   10.058    0.001  303.323    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.042    0.000   39.991    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.064    0.000   38.573    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.005    0.001   38.443    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.094    0.000   26.557    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.145    0.000   14.253    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.105    0.000    2.288    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.275    0.000    0.839    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.700    0.700 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
