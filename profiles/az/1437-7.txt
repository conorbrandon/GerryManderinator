         4418149054 function calls (4418027015 primitive calls) in 1582.255 seconds
        1   10.888   10.888 1581.520 1581.520 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.228    0.001 1570.564    0.156 GerrymanderingMCMC.py:235(recombination_of_districts)
   323511    2.238    0.000  953.209    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1294044    1.501    0.000  669.750    0.001 GerrymanderingMCMC.py:190(__district_size)
242223256  132.250    0.000  548.643    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10101    9.928    0.001  300.335    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.039    0.000   39.887    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.055    0.000   38.477    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   12.636    0.001   38.361    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.090    0.000   26.444    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.122    0.000   14.141    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.089    0.000    2.181    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.291    0.000    0.859    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.702    0.702 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
