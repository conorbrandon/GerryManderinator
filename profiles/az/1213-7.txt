         4468877529 function calls (4468755490 primitive calls) in 1626.456 seconds
        1   11.368   11.368 1625.711 1625.711 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.381    0.001 1614.033    0.160 GerrymanderingMCMC.py:235(recombination_of_districts)
   335261    2.348    0.000  985.456    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1341044    1.602    0.000  691.971    0.001 GerrymanderingMCMC.py:190(__district_size)
246424572  139.189    0.000  567.627    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10102   10.104    0.001  307.762    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.039    0.000   40.701    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.056    0.000   39.242    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.123    0.001   39.122    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.090    0.000   26.833    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.149    0.000   14.417    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.090    0.000    2.206    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.291    0.000    0.853    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.713    0.713 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.006    0.006    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
