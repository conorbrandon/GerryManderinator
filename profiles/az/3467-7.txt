         4656351905 function calls (4656229866 primitive calls) in 1711.790 seconds
        1   11.166   11.166 1711.020 1711.020 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.504    0.001 1699.785    0.168 GerrymanderingMCMC.py:235(recombination_of_districts)
   343631    2.515    0.000 1070.670    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1374524    1.666    0.000  754.047    0.001 GerrymanderingMCMC.py:190(__district_size)
262309734  150.648    0.000  617.947    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   10.049    0.001  305.147    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.041    0.000   40.983    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.056    0.000   39.576    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.225    0.001   39.454    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.097    0.000   27.184    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.215    0.000   14.781    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.096    0.000    2.301    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.277    0.000    0.839    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.737    0.737 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
