         4130617934 function calls (4130495895 primitive calls) in 1525.703 seconds
        1   11.615   11.615 1524.969 1524.969 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    4.808    0.000 1513.314    0.150 GerrymanderingMCMC.py:235(recombination_of_districts)
   300712    2.151    0.000  885.676    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1202848    1.457    0.000  624.003    0.001 GerrymanderingMCMC.py:190(__district_size)
218203752  126.282    0.000  511.040    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10101   10.450    0.001  304.982    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.041    0.000   41.414    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.057    0.000   39.989    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.460    0.001   39.864    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.091    0.000   27.230    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.201    0.000   14.491    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.105    0.000    2.239    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.276    0.000    0.841    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.701    0.701 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.006    0.006    0.030    0.030 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
