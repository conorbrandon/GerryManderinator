         4872072389 function calls (4871950350 primitive calls) in 1766.795 seconds
        1   11.134   11.134 1766.093 1766.093 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.876    0.001 1754.914    0.174 GerrymanderingMCMC.py:235(recombination_of_districts)
   370111    2.621    0.000 1127.803    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1480444    1.845    0.000  794.961    0.001 GerrymanderingMCMC.py:190(__district_size)
281411866  162.077    0.000  650.404    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10102    9.935    0.001  303.614    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.039    0.000   40.513    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.059    0.000   39.078    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.156    0.001   38.955    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.093    0.000   26.917    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.234    0.000   14.406    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.087    0.000    2.209    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.339    0.000    0.900    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.670    0.670 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
