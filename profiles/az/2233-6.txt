         4746211071 function calls (4746089032 primitive calls) in 1723.709 seconds
        1   11.423   11.423 1723.034 1723.034 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.696    0.001 1711.580    0.169 GerrymanderingMCMC.py:235(recombination_of_districts)
   355713    2.473    0.000 1080.958    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1422852    1.739    0.000  760.846    0.001 GerrymanderingMCMC.py:190(__district_size)
270491638  153.430    0.000  622.286    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10102   10.151    0.001  307.109    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.039    0.000   40.939    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.057    0.000   39.509    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.199    0.001   39.378    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.093    0.000   27.066    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.310    0.000   14.628    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.094    0.000    2.264    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.297    0.000    0.871    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.642    0.642 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.030    0.030 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
