         4871886030 function calls (4871763991 primitive calls) in 1779.392 seconds
        1   11.798   11.798 1778.584 1778.584 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.956    0.001 1766.756    0.175 GerrymanderingMCMC.py:235(recombination_of_districts)
   372690    2.653    0.000 1137.292    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1490760    1.782    0.000  801.655    0.001 GerrymanderingMCMC.py:190(__district_size)
281719622  161.489    0.000  657.326    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10101   10.159    0.001  305.173    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.042    0.000   41.200    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.057    0.000   39.734    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.100    0.001   39.611    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.098    0.000   27.193    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.187    0.000   14.482    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.092    0.000    2.243    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.288    0.000    0.894    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.775    0.775 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
