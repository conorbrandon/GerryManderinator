         5586798064 function calls (5586676025 primitive calls) in 1984.068 seconds
        1   11.145   11.145 1983.290 1983.290 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    7.019    0.001 1972.099    0.195 GerrymanderingMCMC.py:235(recombination_of_districts)
   443921    2.991    0.000 1350.642    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1775684    2.074    0.000  950.642    0.001 GerrymanderingMCMC.py:190(__district_size)
342968202  190.159    0.000  779.461    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10102    9.738    0.001  300.042    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.038    0.000   40.016    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.054    0.000   38.612    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.031    0.001   38.496    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.092    0.000   26.532    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.184    0.000   14.264    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.090    0.000    2.211    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.279    0.000    0.847    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.746    0.746 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.028    0.028 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
