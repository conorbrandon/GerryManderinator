         4569157085 function calls (4569035046 primitive calls) in 1647.370 seconds
        1   11.468   11.468 1646.586 1646.586 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.394    0.001 1635.089    0.162 GerrymanderingMCMC.py:235(recombination_of_districts)
   340700    2.349    0.000 1013.847    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1362800    1.618    0.000  712.463    0.001 GerrymanderingMCMC.py:190(__district_size)
255581600  143.837    0.000  583.387    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10103   10.074    0.001  301.992    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.040    0.000   39.986    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.055    0.000   38.602    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   12.935    0.001   38.485    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.098    0.000   26.380    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.134    0.000   14.122    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.091    0.000    2.212    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.267    0.000    0.816    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.751    0.751 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
