         4982233168 function calls (4982111129 primitive calls) in 1810.923 seconds
        1   12.400   12.400 1810.206 1810.206 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    6.119    0.001 1797.778    0.178 GerrymanderingMCMC.py:235(recombination_of_districts)
   375714    2.661    0.000 1165.105    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1502856    1.766    0.000  820.389    0.001 GerrymanderingMCMC.py:190(__district_size)
290555124  164.500    0.000  671.910    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10102   10.128    0.001  305.308    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.042    0.000   41.259    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.059    0.000   39.787    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.372    0.001   39.660    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.095    0.000   27.215    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.268    0.000   14.579    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.096    0.000    2.292    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.309    0.000    0.916    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.697    0.697 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.030    0.030 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
