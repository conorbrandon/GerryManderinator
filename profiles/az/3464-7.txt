         5300586500 function calls (5300464461 primitive calls) in 1914.422 seconds
        1   11.819   11.819 1913.686 1913.686 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    6.639    0.001 1901.820    0.188 GerrymanderingMCMC.py:235(recombination_of_districts)
   410283    2.868    0.000 1269.758    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1641132    1.999    0.000  893.555    0.001 GerrymanderingMCMC.py:190(__district_size)
318194282  178.154    0.000  730.984    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10103    9.947    0.001  304.641    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.040    0.000   41.055    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.056    0.000   39.636    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.227    0.001   39.513    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.093    0.000   27.080    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.232    0.000   14.506    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.093    0.000    2.273    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.285    0.000    0.899    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.718    0.718 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.030    0.030 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
