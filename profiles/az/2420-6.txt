         4701437895 function calls (4701315856 primitive calls) in 1708.783 seconds
        1   11.306   11.306 1708.044 1708.044 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.677    0.001 1696.707    0.168 GerrymanderingMCMC.py:235(recombination_of_districts)
   351103    2.482    0.000 1071.408    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1404412    1.662    0.000  753.704    0.001 GerrymanderingMCMC.py:190(__district_size)
266614572  153.973    0.000  618.419    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100    9.888    0.001  303.324    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.041    0.000   40.282    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.056    0.000   38.883    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.123    0.001   38.763    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.095    0.000   26.796    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.247    0.000   14.547    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.089    0.000    2.213    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.288    0.000    0.869    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.708    0.708 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
