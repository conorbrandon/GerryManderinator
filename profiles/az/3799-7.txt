         4814946775 function calls (4814824736 primitive calls) in 1744.314 seconds
        1   12.187   12.187 1743.575 1743.575 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.888    0.001 1731.359    0.171 GerrymanderingMCMC.py:235(recombination_of_districts)
   365860    2.566    0.000 1103.285    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1463440    1.737    0.000  774.119    0.001 GerrymanderingMCMC.py:190(__district_size)
276319452  154.315    0.000  634.409    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100    9.930    0.001  304.953    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.042    0.000   40.778    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.059    0.000   39.359    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.306    0.001   39.233    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.096    0.000   26.980    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.215    0.000   14.581    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.095    0.000    2.250    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.290    0.000    0.882    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.706    0.706 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
