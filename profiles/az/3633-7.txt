         5169479580 function calls (5169357541 primitive calls) in 1876.388 seconds
        1   11.723   11.723 1875.635 1875.635 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    6.443    0.001 1863.883    0.185 GerrymanderingMCMC.py:235(recombination_of_districts)
   401294    2.819    0.000 1236.676    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1605176    1.914    0.000  871.581    0.001 GerrymanderingMCMC.py:190(__district_size)
306689602  174.401    0.000  713.288    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10102   10.000    0.001  303.099    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.041    0.000   40.794    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.056    0.000   39.372    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.324    0.001   39.249    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.099    0.000   27.060    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.226    0.000   14.468    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.095    0.000    2.272    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.293    0.000    0.866    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.720    0.720 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
