         4967165317 function calls (4967043278 primitive calls) in 1807.380 seconds
        1   11.543   11.543 1806.679 1806.679 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    6.040    0.001 1795.099    0.178 GerrymanderingMCMC.py:235(recombination_of_districts)
   372654    2.635    0.000 1161.057    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1490616    1.796    0.000  817.490    0.001 GerrymanderingMCMC.py:190(__district_size)
289105080  168.147    0.000  671.477    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10101   10.217    0.001  307.722    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.067    0.000   41.119    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.057    0.000   39.664    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.382    0.001   39.541    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.095    0.000   27.168    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.310    0.000   14.676    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.095    0.000    2.311    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.298    0.000    0.881    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.669    0.669 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
