         4848301301 function calls (4848179262 primitive calls) in 1759.293 seconds
        1   11.400   11.400 1758.501 1758.501 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    6.001    0.001 1747.071    0.173 GerrymanderingMCMC.py:235(recombination_of_districts)
   370838    2.593    0.000 1116.525    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1483352    1.792    0.000  784.702    0.001 GerrymanderingMCMC.py:190(__district_size)
279552284  159.008    0.000  643.255    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10101   10.092    0.001  304.633    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.041    0.000   40.948    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.058    0.000   39.491    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.162    0.001   39.368    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.094    0.000   27.228    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.185    0.000   14.431    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.095    0.000    2.300    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.277    0.000    0.850    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.760    0.760 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
