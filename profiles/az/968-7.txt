         4733891734 function calls (4733769695 primitive calls) in 1704.722 seconds
        1   11.294   11.294 1703.945 1703.945 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.695    0.001 1692.601    0.168 GerrymanderingMCMC.py:235(recombination_of_districts)
   347329    2.448    0.000 1068.315    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1389316    1.655    0.000  752.311    0.001 GerrymanderingMCMC.py:190(__district_size)
269677798  152.896    0.000  616.363    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10104   10.070    0.001  302.764    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.041    0.000   40.331    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.057    0.000   38.923    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.138    0.001   38.803    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.091    0.000   26.731    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.181    0.000   14.364    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.103    0.000    2.248    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.275    0.000    0.843    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.744    0.744 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
