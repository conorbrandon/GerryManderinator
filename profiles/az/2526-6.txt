         4635767892 function calls (4635645853 primitive calls) in 1683.262 seconds
        1   12.705   12.705 1682.544 1682.544 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.609    0.001 1669.809    0.165 GerrymanderingMCMC.py:235(recombination_of_districts)
   350567    2.436    0.000 1039.213    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1402268    1.660    0.000  730.020    0.001 GerrymanderingMCMC.py:190(__district_size)
261217810  147.859    0.000  599.703    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   10.044    0.001  305.186    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.043    0.000   40.777    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.059    0.000   39.360    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.197    0.001   39.221    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.103    0.000   26.942    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.172    0.000   14.331    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.094    0.000    2.269    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.286    0.000    0.885    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.686    0.686 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
