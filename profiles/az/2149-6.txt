         5168886484 function calls (5168764445 primitive calls) in 1864.098 seconds
        1   11.194   11.194 1863.005 1863.005 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    6.551    0.001 1851.763    0.183 GerrymanderingMCMC.py:235(recombination_of_districts)
   402643    2.771    0.000 1223.617    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1610572    1.962    0.000  858.927    0.001 GerrymanderingMCMC.py:190(__district_size)
307191088  172.230    0.000  704.091    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10102    9.960    0.001  304.636    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.046    0.000   40.441    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.056    0.000   39.029    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.073    0.001   38.912    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.095    0.000   26.809    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.142    0.000   14.433    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.099    0.000    2.271    0.000 GerrymanderingMCMC.py:157(__random_district_label)
        1    0.000    0.000    1.060    1.060 GerrymanderingMCMC.py:1(<module>)
    10100    0.282    0.000    0.866    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
