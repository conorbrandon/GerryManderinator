         5078068371 function calls (5077946332 primitive calls) in 1832.148 seconds
        1   11.774   11.774 1831.408 1831.408 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    6.202    0.001 1819.603    0.180 GerrymanderingMCMC.py:235(recombination_of_districts)
   394006    2.785    0.000 1189.549    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1576024    1.864    0.000  837.316    0.001 GerrymanderingMCMC.py:190(__district_size)
298900296  169.262    0.000  685.169    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10101   10.169    0.001  306.824    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.041    0.000   40.120    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.058    0.000   38.681    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   12.845    0.001   38.553    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.125    0.000   26.661    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.230    0.000   14.419    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.102    0.000    2.314    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.296    0.000    0.872    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.707    0.707 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
