         5224896576 function calls (5224774537 primitive calls) in 1880.706 seconds
        1   11.720   11.720 1879.998 1879.998 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    6.593    0.001 1868.249    0.185 GerrymanderingMCMC.py:235(recombination_of_districts)
   401056    2.792    0.000 1240.721    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1604224    1.937    0.000  873.900    0.001 GerrymanderingMCMC.py:190(__district_size)
311455548  173.880    0.000  715.388    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   10.009    0.001  304.689    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.041    0.000   40.759    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.064    0.000   39.297    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.206    0.001   39.158    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.108    0.000   26.898    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.292    0.000   14.526    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.098    0.000    2.303    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.282    0.000    0.850    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.676    0.676 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
