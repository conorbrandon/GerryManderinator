         4875284926 function calls (4875162887 primitive calls) in 1769.835 seconds
        1   11.782   11.782 1769.026 1769.026 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    6.017    0.001 1757.197    0.174 GerrymanderingMCMC.py:235(recombination_of_districts)
   369202    2.668    0.000 1126.093    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1476808    1.792    0.000  791.018    0.001 GerrymanderingMCMC.py:190(__district_size)
281533906  157.756    0.000  646.100    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   10.123    0.001  306.614    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.047    0.000   40.762    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.060    0.000   39.310    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.293    0.001   39.182    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.096    0.000   26.910    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.297    0.000   14.718    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.100    0.000    2.309    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.280    0.000    0.869    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.776    0.776 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.006    0.006    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
