         5296678498 function calls (5296556459 primitive calls) in 1892.149 seconds
        1   11.675   11.675 1891.449 1891.449 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    6.528    0.001 1879.745    0.186 GerrymanderingMCMC.py:235(recombination_of_districts)
   414636    2.826    0.000 1255.508    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1658544    1.948    0.000  882.761    0.001 GerrymanderingMCMC.py:190(__district_size)
317696002  175.563    0.000  723.460    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10103    9.838    0.001  302.058    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.040    0.000   40.604    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.057    0.000   39.203    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.002    0.001   39.082    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.095    0.000   26.915    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.207    0.000   14.362    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.092    0.000    2.226    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.281    0.000    0.869    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.671    0.671 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
