         4705787279 function calls (4705665240 primitive calls) in 1700.726 seconds
        1   11.675   11.675 1700.016 1700.016 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.611    0.001 1688.296    0.167 GerrymanderingMCMC.py:235(recombination_of_districts)
   354951    2.536    0.000 1060.573    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1419804    1.657    0.000  745.760    0.001 GerrymanderingMCMC.py:190(__district_size)
266660054  149.427    0.000  611.940    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10101   10.004    0.001  304.672    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.048    0.000   40.521    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.058    0.000   39.089    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.043    0.001   38.967    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.093    0.000   26.887    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.229    0.000   14.443    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.093    0.000    2.313    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.280    0.000    0.855    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.678    0.678 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
