         5222465035 function calls (5222342996 primitive calls) in 1884.341 seconds
        1   12.117   12.117 1883.608 1883.608 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    6.567    0.001 1871.462    0.185 GerrymanderingMCMC.py:235(recombination_of_districts)
   400096    2.825    0.000 1241.581    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1600384    1.951    0.000  874.717    0.001 GerrymanderingMCMC.py:190(__district_size)
311250682  178.143    0.000  718.415    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10102    9.966    0.001  304.941    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.041    0.000   41.263    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.061    0.000   39.836    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.539    0.001   39.704    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.096    0.000   27.201    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.280    0.000   14.523    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.100    0.000    2.308    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.302    0.000    0.883    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.699    0.699 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.006    0.006    0.030    0.030 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
