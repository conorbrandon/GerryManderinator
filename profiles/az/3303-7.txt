         5079567400 function calls (5079445361 primitive calls) in 1837.291 seconds
        1   11.316   11.316 1836.519 1836.519 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    6.314    0.001 1825.163    0.181 GerrymanderingMCMC.py:235(recombination_of_districts)
   389825    2.773    0.000 1198.264    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1559300    1.898    0.000  841.604    0.001 GerrymanderingMCMC.py:190(__district_size)
299674880  166.660    0.000  688.642    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10101    9.900    0.001  304.793    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.039    0.000   40.953    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.057    0.000   39.494    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.204    0.001   39.372    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.094    0.000   27.057    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.256    0.000   14.492    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.094    0.000    2.240    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.281    0.000    0.851    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.734    0.734 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.006    0.006    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
