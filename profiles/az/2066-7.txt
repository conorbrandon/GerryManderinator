         4174387373 function calls (4174265334 primitive calls) in 1507.885 seconds
        1   11.119   11.119 1507.136 1507.136 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    4.693    0.000 1495.987    0.148 GerrymanderingMCMC.py:235(recombination_of_districts)
   295442    2.057    0.000  880.447    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1181768    1.395    0.000  618.839    0.001 GerrymanderingMCMC.py:190(__district_size)
221201610  124.096    0.000  505.851    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10101    9.884    0.001  298.935    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.040    0.000   40.316    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.056    0.000   38.903    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.106    0.001   38.785    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.089    0.000   26.704    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.187    0.000   14.341    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.088    0.000    2.193    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.276    0.000    0.834    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.717    0.717 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
