         4635920741 function calls (4635798702 primitive calls) in 1683.547 seconds
        1   12.004   12.004 1682.805 1682.805 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.726    0.001 1670.768    0.165 GerrymanderingMCMC.py:235(recombination_of_districts)
   346741    2.376    0.000 1044.725    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1386964    1.675    0.000  733.878    0.001 GerrymanderingMCMC.py:190(__district_size)
261237352  150.627    0.000  600.737    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   10.090    0.001  302.954    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.050    0.000   40.536    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.059    0.000   39.094    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.300    0.001   38.965    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.096    0.000   26.704    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.219    0.000   14.419    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.097    0.000    2.301    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.280    0.000    0.848    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.709    0.709 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.006    0.006    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
