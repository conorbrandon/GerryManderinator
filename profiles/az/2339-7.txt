         4818952705 function calls (4818830666 primitive calls) in 1714.686 seconds
        1   11.548   11.548 1713.533 1713.533 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.844    0.001 1701.889    0.169 GerrymanderingMCMC.py:235(recombination_of_districts)
   360463    2.425    0.000 1083.961    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1441852    1.685    0.000  760.791    0.001 GerrymanderingMCMC.py:190(__district_size)
277197660  153.109    0.000  622.393    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100    9.668    0.001  298.730    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.041    0.000   39.804    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.056    0.000   38.434    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.098    0.001   38.314    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.092    0.000   26.444    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.188    0.000   14.221    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.102    0.000    2.237    0.000 GerrymanderingMCMC.py:157(__random_district_label)
        1    0.000    0.000    1.084    1.084 GerrymanderingMCMC.py:1(<module>)
    10100    0.293    0.000    0.844    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.065    0.065 GerrymanderingMCMC.py:21(__init__)
        1    0.006    0.006    0.065    0.065 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.019    0.019 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
