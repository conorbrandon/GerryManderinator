         4857459731 function calls (4857337692 primitive calls) in 1756.204 seconds
        1   12.181   12.181 1755.409 1755.409 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    6.015    0.001 1743.185    0.173 GerrymanderingMCMC.py:235(recombination_of_districts)
   366643    2.541    0.000 1111.422    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1466572    1.728    0.000  780.590    0.001 GerrymanderingMCMC.py:190(__district_size)
279933346  155.227    0.000  640.349    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   10.073    0.001  305.995    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.042    0.000   40.508    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.058    0.000   39.078    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.120    0.001   38.954    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.149    0.000   26.937    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.192    0.000   14.319    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.094    0.000    2.278    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.281    0.000    0.847    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.762    0.762 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
