         4999229300 function calls (4999107261 primitive calls) in 1815.516 seconds
        1   11.159   11.159 1814.759 1814.759 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.984    0.001 1803.567    0.179 GerrymanderingMCMC.py:235(recombination_of_districts)
   380934    2.673    0.000 1178.507    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1523736    1.878    0.000  837.037    0.001 GerrymanderingMCMC.py:190(__district_size)
291698624  164.539    0.000  690.292    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10105    9.781    0.001  302.581    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.042    0.000   40.389    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.054    0.000   38.999    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.023    0.001   38.881    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.090    0.000   26.841    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.211    0.000   14.494    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.089    0.000    2.168    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.282    0.000    0.854    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.725    0.725 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
