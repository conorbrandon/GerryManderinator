         5279005975 function calls (5278883936 primitive calls) in 1897.067 seconds
        1   12.019   12.019 1896.367 1896.367 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    6.579    0.001 1884.318    0.187 GerrymanderingMCMC.py:235(recombination_of_districts)
   401455    2.734    0.000 1254.361    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1605820    1.875    0.000  882.505    0.001 GerrymanderingMCMC.py:190(__district_size)
316278642  178.702    0.000  723.668    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10101   10.212    0.001  306.793    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.041    0.000   40.721    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.058    0.000   39.279    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.256    0.001   39.154    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.096    0.000   26.896    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.183    0.000   14.431    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.093    0.000    2.274    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.283    0.000    0.853    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.668    0.668 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
