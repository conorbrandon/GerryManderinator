         4537939070 function calls (4537817031 primitive calls) in 1642.486 seconds
        1   11.432   11.432 1641.753 1641.753 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.411    0.001 1630.291    0.161 GerrymanderingMCMC.py:235(recombination_of_districts)
   348957    2.457    0.000 1011.765    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1395828    1.652    0.000  708.830    0.001 GerrymanderingMCMC.py:190(__district_size)
253404642  141.766    0.000  579.817    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10105    9.734    0.001  299.812    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.041    0.000   40.401    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.056    0.000   38.977    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.001    0.001   38.856    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.090    0.000   26.662    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.164    0.000   14.234    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.096    0.000    2.217    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.275    0.000    0.835    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.701    0.701 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
