         4705448762 function calls (4705326723 primitive calls) in 1703.890 seconds
        1   11.005   11.005 1703.180 1703.180 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.626    0.001 1692.147    0.168 GerrymanderingMCMC.py:235(recombination_of_districts)
   351740    2.407    0.000 1068.501    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1406960    1.720    0.000  749.564    0.001 GerrymanderingMCMC.py:190(__district_size)
267542696  149.207    0.000  614.700    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10101    9.876    0.001  301.556    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.056    0.000   40.808    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.056    0.000   39.397    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.128    0.001   39.279    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.103    0.000   27.049    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.176    0.000   14.357    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.089    0.000    2.199    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.276    0.000    0.848    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.677    0.677 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.006    0.006    0.030    0.030 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
