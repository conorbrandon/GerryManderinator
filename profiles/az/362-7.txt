         4647460996 function calls (4647338957 primitive calls) in 1678.413 seconds
        1   10.879   10.879 1677.624 1677.624 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.538    0.001 1666.695    0.165 GerrymanderingMCMC.py:235(recombination_of_districts)
   341458    2.383    0.000 1048.579    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1365832    1.604    0.000  739.489    0.001 GerrymanderingMCMC.py:190(__district_size)
262380620  148.273    0.000  606.399    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10103    9.819    0.001  300.085    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.040    0.000   40.452    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.055    0.000   39.081    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.428    0.001   38.962    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.091    0.000   26.825    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.167    0.000   14.238    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.089    0.000    2.192    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.291    0.000    0.866    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.757    0.757 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.006    0.006    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
