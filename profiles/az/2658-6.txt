         4589465221 function calls (4589343182 primitive calls) in 1682.537 seconds
        1   11.678   11.678 1681.830 1681.830 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.421    0.001 1670.119    0.165 GerrymanderingMCMC.py:235(recombination_of_districts)
   333308    2.432    0.000 1041.041    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1333232    1.611    0.000  733.424    0.001 GerrymanderingMCMC.py:190(__district_size)
257171320  145.709    0.000  601.016    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10101   10.017    0.001  304.175    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.040    0.000   41.662    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.057    0.000   40.225    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.667    0.001   40.094    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.094    0.000   27.454    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.196    0.000   14.651    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.093    0.000    2.259    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.291    0.000    0.870    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.673    0.673 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.006    0.006    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
