         5109143368 function calls (5109021329 primitive calls) in 1831.223 seconds
        1   11.544   11.544 1830.520 1830.520 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    6.260    0.001 1818.947    0.180 GerrymanderingMCMC.py:235(recombination_of_districts)
   398537    2.747    0.000 1192.279    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1594148    1.861    0.000  839.663    0.001 GerrymanderingMCMC.py:190(__district_size)
301531694  168.957    0.000  687.563    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10101   10.057    0.001  303.418    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.041    0.000   40.353    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.056    0.000   38.918    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   12.914    0.001   38.796    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.094    0.000   26.865    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.157    0.000   14.322    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.092    0.000    2.266    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.287    0.000    0.864    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.671    0.671 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
