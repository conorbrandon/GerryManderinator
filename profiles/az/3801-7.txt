         4703701672 function calls (4703579633 primitive calls) in 1699.310 seconds
        1   11.622   11.622 1698.579 1698.579 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.763    0.001 1686.927    0.167 GerrymanderingMCMC.py:235(recombination_of_districts)
   355327    2.521    0.000 1064.326    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1421308    1.691    0.000  747.075    0.001 GerrymanderingMCMC.py:190(__district_size)
267449098  152.851    0.000  612.110    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   10.026    0.001  303.461    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.041    0.000   40.164    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.058    0.000   38.743    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.123    0.001   38.619    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.094    0.000   26.581    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.202    0.000   14.277    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.093    0.000    2.223    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.277    0.000    0.843    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.698    0.698 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.006    0.006    0.030    0.030 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
