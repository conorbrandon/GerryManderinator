         4817832442 function calls (4817710403 primitive calls) in 1724.872 seconds
        1   11.780   11.780 1724.012 1724.012 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.851    0.001 1712.188    0.170 GerrymanderingMCMC.py:235(recombination_of_districts)
   368022    2.500    0.000 1087.657    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1472088    1.738    0.000  763.023    0.001 GerrymanderingMCMC.py:190(__district_size)
276451700  154.681    0.000  625.596    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10101    9.847    0.001  303.339    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.053    0.000   40.757    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.058    0.000   39.278    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.236    0.001   39.140    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.095    0.000   27.130    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.205    0.000   14.307    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.116    0.000    2.305    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.319    0.000    0.906    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.837    0.837 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
