         5255059797 function calls (5254937758 primitive calls) in 1878.504 seconds
        1   11.522   11.522 1877.809 1877.809 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    6.493    0.001 1866.259    0.185 GerrymanderingMCMC.py:235(recombination_of_districts)
   406794    2.790    0.000 1244.872    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1627176    1.935    0.000  874.597    0.001 GerrymanderingMCMC.py:190(__district_size)
314301618  179.827    0.000  715.494    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100    9.851    0.001  300.753    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.040    0.000   40.613    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.056    0.000   39.182    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.377    0.001   39.062    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.092    0.000   26.855    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.207    0.000   14.423    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.091    0.000    2.190    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.289    0.000    0.866    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.663    0.663 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
