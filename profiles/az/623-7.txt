         5419867316 function calls (5419745277 primitive calls) in 1938.646 seconds
        1   10.955   10.955 1937.928 1937.928 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    6.701    0.001 1926.945    0.191 GerrymanderingMCMC.py:235(recombination_of_districts)
   422582    3.009    0.000 1304.663    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1690328    2.007    0.000  919.571    0.001 GerrymanderingMCMC.py:190(__district_size)
328205212  188.742    0.000  753.309    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10105    9.975    0.001  302.675    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.039    0.000   40.293    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.055    0.000   38.930    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.157    0.001   38.815    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.090    0.000   26.643    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.176    0.000   14.347    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.085    0.000    2.199    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.289    0.000    0.859    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.685    0.685 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
