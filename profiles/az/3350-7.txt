         4127862108 function calls (4127740069 primitive calls) in 1504.743 seconds
        1   11.243   11.243 1503.948 1503.948 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    4.764    0.000 1492.658    0.148 GerrymanderingMCMC.py:235(recombination_of_districts)
   294646    2.044    0.000  870.909    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1178584    1.472    0.000  610.154    0.001 GerrymanderingMCMC.py:190(__district_size)
217341682  122.723    0.000  497.464    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100    9.806    0.001  301.367    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.039    0.000   40.144    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.056    0.000   38.719    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.023    0.001   38.596    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.091    0.000   26.577    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.171    0.000   14.463    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.093    0.000    2.246    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.279    0.000    0.839    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.762    0.762 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
