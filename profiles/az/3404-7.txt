         4990206115 function calls (4990084076 primitive calls) in 1814.176 seconds
        1   11.750   11.750 1813.418 1813.418 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    6.223    0.001 1801.600    0.178 GerrymanderingMCMC.py:235(recombination_of_districts)
   386165    2.725    0.000 1173.339    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1544660    1.904    0.000  824.165    0.001 GerrymanderingMCMC.py:190(__district_size)
292365462  165.520    0.000  674.215    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   10.013    0.001  302.636    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.045    0.000   40.490    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.059    0.000   39.059    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.145    0.001   38.932    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.099    0.000   26.951    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.216    0.000   14.496    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.115    0.000    2.361    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.281    0.000    0.846    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.725    0.725 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.030    0.030 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
