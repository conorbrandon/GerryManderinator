         5401472919 function calls (5401350880 primitive calls) in 1962.278 seconds
        1   11.953   11.953 1961.436 1961.436 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    6.767    0.001 1949.446    0.193 GerrymanderingMCMC.py:235(recombination_of_districts)
   420590    2.926    0.000 1317.937    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1682360    2.002    0.000  928.774    0.001 GerrymanderingMCMC.py:190(__district_size)
326764170  183.437    0.000  759.345    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10102   10.278    0.001  306.249    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.041    0.000   40.928    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.058    0.000   39.463    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.336    0.001   39.340    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.108    0.000   27.207    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.240    0.000   14.627    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.097    0.000    2.297    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.281    0.000    0.865    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.809    0.809 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.007    0.007 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
