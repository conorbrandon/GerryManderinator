         4589387250 function calls (4589265211 primitive calls) in 1657.673 seconds
        1   11.785   11.785 1656.969 1656.969 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.479    0.001 1645.103    0.163 GerrymanderingMCMC.py:235(recombination_of_districts)
   335909    2.331    0.000 1018.858    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1343636    1.570    0.000  715.204    0.001 GerrymanderingMCMC.py:190(__district_size)
257125654  141.969    0.000  586.325    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100    9.804    0.001  303.384    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.042    0.000   40.206    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.058    0.000   38.771    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   12.937    0.001   38.647    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.112    0.000   26.781    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.191    0.000   14.379    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.094    0.000    2.287    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.278    0.000    0.839    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.672    0.672 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
