         5185404562 function calls (5185282523 primitive calls) in 1845.777 seconds
        1   11.446   11.446 1845.086 1845.086 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    6.442    0.001 1833.603    0.182 GerrymanderingMCMC.py:235(recombination_of_districts)
   399517    2.662    0.000 1212.048    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1598068    1.882    0.000  852.829    0.001 GerrymanderingMCMC.py:190(__district_size)
308184636  170.097    0.000  697.745    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10101    9.798    0.001  301.020    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.041    0.000   39.818    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.056    0.000   38.377    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   12.757    0.001   38.258    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.108    0.000   26.657    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.182    0.000   14.211    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.090    0.000    2.207    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.303    0.000    0.895    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.667    0.667 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
