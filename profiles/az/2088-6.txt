         5005461158 function calls (5005339119 primitive calls) in 1795.734 seconds
        1   11.323   11.323 1794.927 1794.927 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    6.241    0.001 1783.574    0.177 GerrymanderingMCMC.py:235(recombination_of_districts)
   389483    2.657    0.000 1163.980    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1557932    1.827    0.000  816.198    0.001 GerrymanderingMCMC.py:190(__district_size)
293376680  163.268    0.000  668.948    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10102    9.616    0.001  298.630    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.040    0.000   40.075    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.057    0.000   38.651    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   12.953    0.001   38.528    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.099    0.000   26.594    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.142    0.000   14.241    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.108    0.000    2.321    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.285    0.000    0.859    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.779    0.779 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
