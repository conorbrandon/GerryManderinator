         4496590193 function calls (4496468154 primitive calls) in 1615.403 seconds
        1   11.169   11.169 1614.702 1614.702 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.283    0.001 1603.503    0.159 GerrymanderingMCMC.py:235(recombination_of_districts)
   330516    2.255    0.000  986.324    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1322064    1.562    0.000  692.366    0.001 GerrymanderingMCMC.py:190(__district_size)
249894548  141.253    0.000  568.732    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100    9.872    0.001  299.717    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.038    0.000   40.222    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.055    0.000   38.773    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   12.986    0.001   38.655    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.091    0.000   26.463    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.133    0.000   14.091    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.090    0.000    2.199    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.272    0.000    0.822    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.668    0.668 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
