         4765039665 function calls (4764917626 primitive calls) in 1710.713 seconds
        1   11.606   11.606 1710.013 1710.013 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.787    0.001 1698.379    0.168 GerrymanderingMCMC.py:235(recombination_of_districts)
   363233    2.620    0.000 1078.468    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1452932    1.769    0.000  757.725    0.001 GerrymanderingMCMC.py:190(__district_size)
272236322  152.421    0.000  621.204    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10101    9.860    0.001  300.659    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.039    0.000   40.280    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.062    0.000   38.861    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.190    0.001   38.735    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.093    0.000   26.821    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.175    0.000   14.226    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.090    0.000    2.231    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.280    0.000    0.865    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.668    0.668 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
