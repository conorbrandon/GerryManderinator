         4676745873 function calls (4676623834 primitive calls) in 1684.250 seconds
        1   12.590   12.590 1683.509 1683.509 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.685    0.001 1670.888    0.165 GerrymanderingMCMC.py:235(recombination_of_districts)
   349589    2.459    0.000 1046.963    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1398356    1.672    0.000  735.676    0.001 GerrymanderingMCMC.py:190(__district_size)
265216010  147.423    0.000  603.496    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   10.084    0.001  300.779    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.043    0.000   40.596    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.060    0.000   39.153    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.178    0.001   39.011    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.098    0.000   26.652    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.154    0.000   14.211    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.100    0.000    2.340    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.277    0.000    0.836    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.708    0.708 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.006    0.006    0.030    0.030 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.007    0.007 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
