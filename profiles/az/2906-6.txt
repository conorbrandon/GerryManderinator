         4796997912 function calls (4796875873 primitive calls) in 1724.348 seconds
        1   11.201   11.201 1723.643 1723.643 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.842    0.001 1712.411    0.170 GerrymanderingMCMC.py:235(recombination_of_districts)
   364457    2.613    0.000 1089.401    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1457828    1.702    0.000  764.585    0.001 GerrymanderingMCMC.py:190(__district_size)
274750912  155.584    0.000  626.889    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10103    9.959    0.001  304.635    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.039    0.000   40.089    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.054    0.000   38.688    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.085    0.001   38.560    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.090    0.000   26.647    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.194    0.000   14.356    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.089    0.000    2.202    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.274    0.000    0.854    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.672    0.672 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
