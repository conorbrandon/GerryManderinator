         4834263850 function calls (4834141811 primitive calls) in 1754.044 seconds
        1   11.627   11.627 1753.277 1753.277 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.859    0.001 1741.620    0.172 GerrymanderingMCMC.py:235(recombination_of_districts)
   367281    2.631    0.000 1110.888    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1469124    1.755    0.000  779.301    0.001 GerrymanderingMCMC.py:190(__district_size)
278057122  155.405    0.000  636.508    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10102   10.018    0.001  304.858    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.042    0.000   40.940    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.068    0.000   39.527    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.050    0.001   39.392    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.096    0.000   27.054    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.303    0.000   14.690    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.097    0.000    2.286    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.283    0.000    0.854    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.734    0.734 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
