         4632596721 function calls (4632474682 primitive calls) in 1684.055 seconds
        1   11.658   11.658 1683.297 1683.297 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.573    0.001 1671.610    0.166 GerrymanderingMCMC.py:235(recombination_of_districts)
   354615    2.479    0.000 1045.324    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1418460    1.672    0.000  735.369    0.001 GerrymanderingMCMC.py:190(__district_size)
261040986  146.739    0.000  602.163    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10102    9.887    0.001  302.677    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.040    0.000   40.713    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.057    0.000   39.222    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.238    0.001   39.099    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.114    0.000   27.085    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.176    0.000   14.372    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.094    0.000    2.280    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.290    0.000    0.868    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.725    0.725 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
