         4543770804 function calls (4543648765 primitive calls) in 1642.730 seconds
        1   11.367   11.367 1641.994 1641.994 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.334    0.001 1630.598    0.161 GerrymanderingMCMC.py:235(recombination_of_districts)
   336620    2.491    0.000 1003.271    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1346480    1.600    0.000  704.531    0.001 GerrymanderingMCMC.py:190(__district_size)
252933296  140.465    0.000  576.722    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10103    9.879    0.001  303.875    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.041    0.000   40.589    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.056    0.000   39.157    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   12.911    0.001   39.037    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.106    0.000   26.869    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.213    0.000   14.581    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.091    0.000    2.287    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.303    0.000    0.876    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.703    0.703 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.006    0.006    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.007    0.007 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
