         5132276445 function calls (5132154406 primitive calls) in 1827.408 seconds
        1   11.080   11.080 1826.639 1826.639 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    6.263    0.001 1815.519    0.180 GerrymanderingMCMC.py:235(recombination_of_districts)
   393242    2.645    0.000 1195.699    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1572968    1.829    0.000  841.815    0.001 GerrymanderingMCMC.py:190(__district_size)
303549214  171.501    0.000  691.339    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100    9.978    0.001  302.571    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.039    0.000   39.844    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.055    0.000   38.480    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   12.842    0.001   38.363    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.088    0.000   26.247    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.177    0.000   14.262    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.095    0.000    2.189    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.271    0.000    0.835    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.737    0.737 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
