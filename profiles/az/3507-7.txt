         4900026554 function calls (4899904515 primitive calls) in 1781.827 seconds
        1   11.026   11.026 1781.078 1781.078 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    6.126    0.001 1770.023    0.175 GerrymanderingMCMC.py:235(recombination_of_districts)
   369574    2.569    0.000 1137.066    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1478296    1.770    0.000  801.277    0.001 GerrymanderingMCMC.py:190(__district_size)
283405318  165.882    0.000  658.344    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   10.383    0.001  308.500    0.031 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.040    0.000   41.032    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.056    0.000   39.632    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.312    0.001   39.515    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.091    0.000   27.036    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.259    0.000   14.632    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.110    0.000    2.245    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.283    0.000    0.865    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.716    0.716 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
