         4678876148 function calls (4678754109 primitive calls) in 1697.851 seconds
        1   11.562   11.562 1697.118 1697.118 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.582    0.001 1685.521    0.167 GerrymanderingMCMC.py:235(recombination_of_districts)
   350552    2.482    0.000 1056.114    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1402208    1.703    0.000  742.252    0.001 GerrymanderingMCMC.py:190(__district_size)
264242514  148.505    0.000  607.453    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   10.041    0.001  304.921    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.042    0.000   40.504    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.058    0.000   39.084    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.066    0.001   38.962    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.095    0.000   26.884    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.212    0.000   14.611    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.096    0.000    2.327    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.296    0.000    0.867    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.705    0.705 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
