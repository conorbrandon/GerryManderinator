         4495910340 function calls (4495788301 primitive calls) in 1613.033 seconds
        1   10.951   10.951 1612.319 1612.319 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.323    0.001 1601.300    0.159 GerrymanderingMCMC.py:235(recombination_of_districts)
   331046    2.304    0.000  987.972    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1324184    1.577    0.000  695.239    0.001 GerrymanderingMCMC.py:190(__district_size)
249388088  140.338    0.000  569.145    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100    9.673    0.001  298.216    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.040    0.000   39.795    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.055    0.000   38.394    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   12.880    0.001   38.254    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.103    0.000   26.362    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.087    0.000   14.105    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.090    0.000    2.152    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.271    0.000    0.837    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.682    0.682 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
