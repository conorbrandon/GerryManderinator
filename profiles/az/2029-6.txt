         4787529301 function calls (4787407262 primitive calls) in 1729.782 seconds
        1   11.235   11.235 1728.522 1728.522 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.834    0.001 1717.256    0.170 GerrymanderingMCMC.py:235(recombination_of_districts)
   371617    2.561    0.000 1096.361    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1486468    1.819    0.000  769.699    0.001 GerrymanderingMCMC.py:190(__district_size)
274816942  157.582    0.000  630.955    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100    9.903    0.001  301.617    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.040    0.000   40.544    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.057    0.000   39.148    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   12.976    0.001   39.026    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.093    0.000   26.784    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.177    0.000   14.280    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.093    0.000    2.203    0.000 GerrymanderingMCMC.py:157(__random_district_label)
        1    0.000    0.000    1.227    1.227 GerrymanderingMCMC.py:1(<module>)
    10100    0.275    0.000    0.854    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.006    0.006    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
