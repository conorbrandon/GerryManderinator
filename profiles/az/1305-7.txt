         4740502485 function calls (4740380446 primitive calls) in 1713.935 seconds
        1   10.973   10.973 1713.202 1713.202 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.757    0.001 1702.200    0.169 GerrymanderingMCMC.py:235(recombination_of_districts)
   356021    2.434    0.000 1080.776    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1424084    1.672    0.000  759.548    0.001 GerrymanderingMCMC.py:190(__district_size)
269938352  154.141    0.000  618.920    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10102    9.849    0.001  300.775    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.039    0.000   39.789    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.054    0.000   38.408    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.067    0.001   38.292    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.090    0.000   26.546    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.232    0.000   14.509    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.085    0.000    2.228    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.276    0.000    0.838    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.700    0.700 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
