         5074542413 function calls (5074420374 primitive calls) in 1849.809 seconds
        1   11.164   11.164 1848.770 1848.770 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    6.295    0.001 1837.577    0.182 GerrymanderingMCMC.py:235(recombination_of_districts)
   384698    2.637    0.000 1213.092    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1538792    1.942    0.000  855.700    0.001 GerrymanderingMCMC.py:190(__district_size)
299215208  172.840    0.000  701.631    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10102    9.934    0.001  303.539    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.040    0.000   40.951    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.056    0.000   39.559    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.247    0.001   39.439    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.095    0.000   27.028    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.197    0.000   14.501    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.090    0.000    2.209    0.000 GerrymanderingMCMC.py:157(__random_district_label)
        1    0.000    0.000    1.011    1.011 GerrymanderingMCMC.py:1(<module>)
    10100    0.283    0.000    0.858    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.006    0.006    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
