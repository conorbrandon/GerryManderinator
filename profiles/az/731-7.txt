         5047163840 function calls (5047041801 primitive calls) in 1832.877 seconds
        1   12.260   12.260 1832.109 1832.109 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    6.289    0.001 1819.743    0.180 GerrymanderingMCMC.py:235(recombination_of_districts)
   388752    2.640    0.000 1183.866    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1555008    1.864    0.000  833.473    0.001 GerrymanderingMCMC.py:190(__district_size)
296463326  166.175    0.000  685.368    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10104   10.210    0.001  306.777    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.042    0.000   40.942    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.059    0.000   39.521    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.240    0.001   39.397    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.093    0.000   27.245    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.222    0.000   14.499    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.094    0.000    2.270    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.290    0.000    0.886    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.735    0.735 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.030    0.030 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
