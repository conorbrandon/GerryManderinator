         5376392624 function calls (5376270585 primitive calls) in 1938.514 seconds
        1   11.335   11.335 1937.733 1937.733 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    6.751    0.001 1926.367    0.191 GerrymanderingMCMC.py:235(recombination_of_districts)
   414129    2.886    0.000 1294.109    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1656516    1.949    0.000  912.281    0.001 GerrymanderingMCMC.py:190(__district_size)
324301996  182.065    0.000  745.581    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   10.027    0.001  305.319    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.039    0.000   40.725    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.057    0.000   39.290    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.287    0.001   39.168    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.092    0.000   26.925    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.179    0.000   14.483    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.103    0.000    2.296    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.299    0.000    0.878    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.747    0.747 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
