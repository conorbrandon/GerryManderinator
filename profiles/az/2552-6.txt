         4341859187 function calls (4341737148 primitive calls) in 1585.629 seconds
        1   11.746   11.746 1584.885 1584.885 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.097    0.001 1573.102    0.156 GerrymanderingMCMC.py:235(recombination_of_districts)
   314182    2.245    0.000  945.687    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1256728    1.506    0.000  667.930    0.001 GerrymanderingMCMC.py:190(__district_size)
236206578  135.449    0.000  548.690    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100    9.950    0.001  302.868    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.043    0.000   41.507    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.058    0.000   40.089    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.349    0.001   39.964    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.093    0.000   27.300    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.220    0.000   14.455    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.093    0.000    2.300    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.278    0.000    0.878    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.724    0.724 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
