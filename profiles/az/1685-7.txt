         4881541410 function calls (4881419371 primitive calls) in 1781.155 seconds
        1   11.137   11.137 1780.427 1780.427 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    6.028    0.001 1769.242    0.175 GerrymanderingMCMC.py:235(recombination_of_districts)
   368805    2.628    0.000 1138.495    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1475220    1.808    0.000  801.784    0.001 GerrymanderingMCMC.py:190(__district_size)
281896694  161.924    0.000  658.286    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10103   10.231    0.001  306.167    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.040    0.000   41.117    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.057    0.000   39.695    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.301    0.001   39.573    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.092    0.000   27.185    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.263    0.000   14.701    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.091    0.000    2.255    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.289    0.000    0.883    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.694    0.694 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.006    0.006    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
