         4900549504 function calls (4900427465 primitive calls) in 1750.031 seconds
        1   11.070   11.070 1749.301 1749.301 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.935    0.001 1738.202    0.172 GerrymanderingMCMC.py:235(recombination_of_districts)
   381671    2.603    0.000 1117.899    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1526684    1.797    0.000  786.718    0.001 GerrymanderingMCMC.py:190(__district_size)
284224116  158.556    0.000  644.362    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10103    9.764    0.001  300.272    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.040    0.000   40.288    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.054    0.000   38.916    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.189    0.001   38.800    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.091    0.000   26.737    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.211    0.000   14.149    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.090    0.000    2.173    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.291    0.000    0.867    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.698    0.698 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
