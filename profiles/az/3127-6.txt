         4816967919 function calls (4816845880 primitive calls) in 1746.163 seconds
        1   11.075   11.075 1745.386 1745.386 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.866    0.001 1734.249    0.172 GerrymanderingMCMC.py:235(recombination_of_districts)
   366865    2.585    0.000 1109.786    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1467460    1.750    0.000  779.534    0.001 GerrymanderingMCMC.py:190(__district_size)
276338938  154.325    0.000  637.806    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10102    9.877    0.001  302.925    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.040    0.000   40.756    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.054    0.000   39.360    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.070    0.001   39.243    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.091    0.000   27.001    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.266    0.000   14.510    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.091    0.000    2.214    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.281    0.000    0.864    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.744    0.744 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.006    0.006    0.030    0.030 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.007    0.007 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
