         5104798459 function calls (5104676420 primitive calls) in 1841.350 seconds
        1   11.982   11.982 1840.586 1840.586 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    6.377    0.001 1828.558    0.181 GerrymanderingMCMC.py:235(recombination_of_districts)
   397966    2.732    0.000 1196.957    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1591864    1.897    0.000  838.127    0.001 GerrymanderingMCMC.py:190(__district_size)
301204382  167.516    0.000  685.755    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10101   10.111    0.001  306.928    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.042    0.000   40.198    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.058    0.000   38.718    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   12.839    0.001   38.593    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.095    0.000   26.672    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.205    0.000   14.536    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.095    0.000    2.298    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.274    0.000    0.837    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.732    0.732 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
