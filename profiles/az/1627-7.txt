         4521971378 function calls (4521849339 primitive calls) in 1643.795 seconds
        1   11.536   11.536 1643.093 1643.093 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.461    0.001 1631.488    0.162 GerrymanderingMCMC.py:235(recombination_of_districts)
   339103    2.345    0.000 1006.292    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1356412    1.615    0.000  708.133    0.001 GerrymanderingMCMC.py:190(__district_size)
251156580  140.280    0.000  579.892    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10101   10.068    0.001  303.018    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.040    0.000   40.645    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.057    0.000   39.251    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.179    0.001   39.128    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.094    0.000   26.890    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.197    0.000   14.426    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.093    0.000    2.256    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.280    0.000    0.859    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.677    0.677 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
