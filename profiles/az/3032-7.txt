         4741933463 function calls (4741811424 primitive calls) in 1724.815 seconds
        1   12.157   12.157 1724.057 1724.057 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.714    0.001 1711.871    0.169 GerrymanderingMCMC.py:235(recombination_of_districts)
   353919    2.511    0.000 1079.416    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1415676    1.680    0.000  758.729    0.001 GerrymanderingMCMC.py:190(__district_size)
269814416  152.317    0.000  621.905    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   10.054    0.001  305.457    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.043    0.000   40.531    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.059    0.000   39.085    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.161    0.001   38.955    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.095    0.000   26.888    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.187    0.000   14.602    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.124    0.000    2.356    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.277    0.000    0.867    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.726    0.726 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
