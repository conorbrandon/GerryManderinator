         4130909338 function calls (4130787299 primitive calls) in 1497.763 seconds
        1   11.750   11.750 1496.995 1496.995 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    4.752    0.000 1485.216    0.147 GerrymanderingMCMC.py:235(recombination_of_districts)
   298659    2.076    0.000  865.714    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1194636    1.437    0.000  606.753    0.001 GerrymanderingMCMC.py:190(__district_size)
218159100  122.449    0.000  496.893    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100    9.939    0.001  300.770    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.041    0.000   40.370    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.070    0.000   38.967    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.119    0.001   38.830    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.093    0.000   26.569    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.171    0.000   14.278    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.093    0.000    2.239    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.269    0.000    0.811    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.736    0.736 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
