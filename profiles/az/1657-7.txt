         4737550247 function calls (4737428208 primitive calls) in 1703.279 seconds
        1   11.268   11.268 1702.544 1702.544 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.775    0.001 1691.230    0.167 GerrymanderingMCMC.py:235(recombination_of_districts)
   363027    2.585    0.000 1071.415    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1452108    1.673    0.000  752.527    0.001 GerrymanderingMCMC.py:190(__district_size)
270033250  151.510    0.000  616.373    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10101    9.759    0.001  300.323    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.041    0.000   40.055    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.056    0.000   38.636    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   12.842    0.001   38.517    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.090    0.000   26.526    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.169    0.000   14.420    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.089    0.000    2.192    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.277    0.000    0.841    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.702    0.702 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
