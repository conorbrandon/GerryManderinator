         4676907845 function calls (4676785806 primitive calls) in 1693.434 seconds
        1   11.951   11.951 1692.700 1692.700 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.702    0.001 1680.718    0.166 GerrymanderingMCMC.py:235(recombination_of_districts)
   356649    2.547    0.000 1051.121    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1426596    1.665    0.000  738.172    0.001 GerrymanderingMCMC.py:190(__district_size)
264851054  146.591    0.000  604.810    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10102   10.060    0.001  302.943    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.041    0.000   40.456    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.059    0.000   39.010    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.106    0.001   38.884    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.097    0.000   26.849    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.191    0.000   14.333    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.097    0.000    2.253    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.277    0.000    0.860    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.702    0.702 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
