         5684980460 function calls (5684858421 primitive calls) in 2042.144 seconds
        1   11.062   11.062 2041.376 2041.376 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    7.187    0.001 2030.285    0.201 GerrymanderingMCMC.py:235(recombination_of_districts)
   443969    3.135    0.000 1401.880    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1775876    2.120    0.000  987.066    0.001 GerrymanderingMCMC.py:190(__district_size)
351184556  198.062    0.000  810.509    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10101   10.151    0.001  306.037    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.040    0.000   40.199    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.054    0.000   38.778    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   12.993    0.001   38.661    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.091    0.000   26.676    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.202    0.000   14.576    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.090    0.000    2.286    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.282    0.000    0.867    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.736    0.736 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.006    0.006    0.030    0.030 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
