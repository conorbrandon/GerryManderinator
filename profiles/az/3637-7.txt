         4868771586 function calls (4868649547 primitive calls) in 1746.036 seconds
        1   11.410   11.410 1745.333 1745.333 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.877    0.001 1733.894    0.172 GerrymanderingMCMC.py:235(recombination_of_districts)
   365690    2.523    0.000 1109.372    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1462760    1.746    0.000  777.561    0.001 GerrymanderingMCMC.py:190(__district_size)
280656238  155.908    0.000  636.123    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10104    9.930    0.001  303.240    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.039    0.000   40.357    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.057    0.000   38.902    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   12.887    0.001   38.779    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.095    0.000   26.736    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.145    0.000   14.371    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.094    0.000    2.247    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.320    0.000    0.928    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.670    0.670 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
