         4826183723 function calls (4826061684 primitive calls) in 1737.883 seconds
        1   11.187   11.187 1737.113 1737.113 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.844    0.001 1725.896    0.171 GerrymanderingMCMC.py:235(recombination_of_districts)
   365097    2.523    0.000 1098.932    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1460388    1.713    0.000  773.623    0.001 GerrymanderingMCMC.py:190(__district_size)
276864676  156.327    0.000  633.006    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10101   10.073    0.001  306.753    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.040    0.000   40.636    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.055    0.000   39.178    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.035    0.001   39.060    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.092    0.000   26.816    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.189    0.000   14.431    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.092    0.000    2.238    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.281    0.000    0.865    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.738    0.738 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.006    0.006    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
