         4253083167 function calls (4252961128 primitive calls) in 1535.242 seconds
        1   11.294   11.294 1534.524 1534.524 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    4.960    0.000 1523.197    0.151 GerrymanderingMCMC.py:235(recombination_of_districts)
   309189    2.183    0.000  907.096    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1236756    1.454    0.000  637.939    0.001 GerrymanderingMCMC.py:190(__district_size)
228659996  127.347    0.000  522.486    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10101    9.686    0.001  299.062    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.047    0.000   39.927    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.056    0.000   38.526    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   12.947    0.001   38.408    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.094    0.000   26.537    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.148    0.000   14.269    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.088    0.000    2.179    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.271    0.000    0.867    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.686    0.686 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
