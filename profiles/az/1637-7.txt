         4999426855 function calls (4999304816 primitive calls) in 1833.140 seconds
        1   11.879   11.879 1832.437 1832.437 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    6.248    0.001 1820.527    0.180 GerrymanderingMCMC.py:235(recombination_of_districts)
   380346    2.665    0.000 1183.836    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1521384    1.843    0.000  833.526    0.001 GerrymanderingMCMC.py:190(__district_size)
292602296  167.248    0.000  682.867    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10102   10.196    0.001  311.095    0.031 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.041    0.000   41.299    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.059    0.000   39.838    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.292    0.001   39.715    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.107    0.000   27.110    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.243    0.000   14.639    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.092    0.000    2.286    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.279    0.000    0.854    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.670    0.670 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.006    0.006    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
