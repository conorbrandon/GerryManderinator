         4742510520 function calls (4742388481 primitive calls) in 1734.389 seconds
        1   11.139   11.139 1733.623 1733.623 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.782    0.001 1722.439    0.171 GerrymanderingMCMC.py:235(recombination_of_districts)
   361064    2.583    0.000 1096.699    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1444256    1.751    0.000  770.782    0.001 GerrymanderingMCMC.py:190(__district_size)
270405466  154.592    0.000  631.856    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10102    9.985    0.001  303.458    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.054    0.000   41.075    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.056    0.000   39.638    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.170    0.001   39.518    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.091    0.000   27.266    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.161    0.000   14.597    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.090    0.000    2.225    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.281    0.000    0.858    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.733    0.733 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.006    0.006    0.030    0.030 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
