         4536574072 function calls (4536452033 primitive calls) in 1665.359 seconds
        1   11.997   11.997 1664.622 1664.622 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.546    0.001 1652.594    0.164 GerrymanderingMCMC.py:235(recombination_of_districts)
   341306    2.445    0.000 1019.354    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1365224    1.676    0.000  716.224    0.001 GerrymanderingMCMC.py:190(__district_size)
252064102  143.529    0.000  587.732    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   10.045    0.001  307.330    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.043    0.000   41.704    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.059    0.000   40.243    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.523    0.001   40.114    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.097    0.000   27.686    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.237    0.000   14.664    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.103    0.000    2.403    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.287    0.000    0.885    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.704    0.704 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.006    0.006    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
