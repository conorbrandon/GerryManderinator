         5027233593 function calls (5027111554 primitive calls) in 1814.796 seconds
        1   12.055   12.055 1814.030 1814.030 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    6.153    0.001 1801.946    0.178 GerrymanderingMCMC.py:235(recombination_of_districts)
   386387    2.653    0.000 1175.474    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1545548    1.822    0.000  830.511    0.001 GerrymanderingMCMC.py:190(__district_size)
295196582  169.555    0.000  679.741    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   10.090    0.001  302.079    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.043    0.000   40.606    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.058    0.000   39.178    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.359    0.001   39.053    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.096    0.000   26.720    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.227    0.000   14.243    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.095    0.000    2.249    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.280    0.000    0.848    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.734    0.734 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
