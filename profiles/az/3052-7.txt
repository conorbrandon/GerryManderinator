         4597972782 function calls (4597850743 primitive calls) in 1655.802 seconds
        1   11.888   11.888 1655.061 1655.061 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.492    0.001 1643.143    0.163 GerrymanderingMCMC.py:235(recombination_of_districts)
   346066    2.446    0.000 1015.938    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1384264    1.634    0.000  712.403    0.001 GerrymanderingMCMC.py:190(__district_size)
258141866  144.502    0.000  583.083    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100    9.798    0.001  302.602    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.042    0.000   40.500    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.057    0.000   39.048    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.086    0.001   38.924    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.095    0.000   26.701    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.122    0.000   14.224    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.096    0.000    2.273    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.282    0.000    0.837    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.709    0.709 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
