         5354723478 function calls (5354601439 primitive calls) in 1906.407 seconds
        1   11.492   11.492 1905.701 1905.701 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    6.685    0.001 1894.169    0.188 GerrymanderingMCMC.py:235(recombination_of_districts)
   413485    2.788    0.000 1273.258    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1653940    1.933    0.000  894.891    0.001 GerrymanderingMCMC.py:190(__district_size)
322508570  177.635    0.000  732.985    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10101    9.890    0.001  300.679    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.040    0.000   40.048    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.055    0.000   38.660    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   12.869    0.001   38.543    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.092    0.000   26.492    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.191    0.000   14.426    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.087    0.000    2.204    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.271    0.000    0.841    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.673    0.673 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
