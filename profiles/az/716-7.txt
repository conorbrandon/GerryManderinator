         4591571152 function calls (4591449113 primitive calls) in 1671.643 seconds
        1   11.098   11.098 1670.933 1670.933 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.551    0.001 1659.803    0.164 GerrymanderingMCMC.py:235(recombination_of_districts)
   346971    2.425    0.000 1033.258    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1387884    1.701    0.000  726.808    0.001 GerrymanderingMCMC.py:190(__district_size)
257578736  147.827    0.000  596.318    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   10.236    0.001  304.525    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.043    0.000   40.964    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.056    0.000   39.525    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.103    0.001   39.406    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.094    0.000   26.961    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.223    0.000   14.449    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.101    0.000    2.197    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.276    0.000    0.845    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.677    0.677 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.006    0.006    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
