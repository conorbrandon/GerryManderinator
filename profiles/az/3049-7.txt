         4787871435 function calls (4787749396 primitive calls) in 1750.739 seconds
        1   11.686   11.686 1750.005 1750.005 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.814    0.001 1738.290    0.172 GerrymanderingMCMC.py:235(recombination_of_districts)
   360390    2.533    0.000 1105.551    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1441560    1.727    0.000  779.916    0.001 GerrymanderingMCMC.py:190(__district_size)
273541790  156.365    0.000  640.367    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10101   10.103    0.001  306.699    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.040    0.000   41.431    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.058    0.000   39.999    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.460    0.001   39.876    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.093    0.000   27.382    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.302    0.000   14.764    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.093    0.000    2.251    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.284    0.000    0.866    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.704    0.704 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.030    0.030 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
