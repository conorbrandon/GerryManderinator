         5096458006 function calls (5096335967 primitive calls) in 1851.323 seconds
        1   11.484   11.484 1850.615 1850.615 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    6.356    0.001 1839.089    0.182 GerrymanderingMCMC.py:235(recombination_of_districts)
   386872    2.699    0.000 1205.521    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1547488    1.929    0.000  846.513    0.001 GerrymanderingMCMC.py:190(__district_size)
300206288  168.695    0.000  693.511    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10101   10.091    0.001  308.356    0.031 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.041    0.000   40.780    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.058    0.000   39.337    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.137    0.001   39.214    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.094    0.000   26.958    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.225    0.000   14.573    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.091    0.000    2.301    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.290    0.000    0.892    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.675    0.675 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.006    0.006    0.030    0.030 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
