         4716775921 function calls (4716653882 primitive calls) in 1693.969 seconds
        1   11.018   11.018 1693.241 1693.241 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.567    0.001 1682.193    0.167 GerrymanderingMCMC.py:235(recombination_of_districts)
   358279    2.570    0.000 1063.292    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1433116    1.716    0.000  744.666    0.001 GerrymanderingMCMC.py:190(__district_size)
268087946  147.489    0.000  607.640    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10102   10.032    0.001  300.557    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.039    0.000   40.199    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.055    0.000   38.789    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   12.999    0.001   38.671    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.092    0.000   26.551    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.172    0.000   14.369    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.089    0.000    2.206    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.276    0.000    0.876    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.695    0.695 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
