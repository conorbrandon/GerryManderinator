         4388447347 function calls (4388325308 primitive calls) in 1601.334 seconds
        1   11.440   11.440 1600.571 1600.571 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.123    0.001 1589.099    0.157 GerrymanderingMCMC.py:235(recombination_of_districts)
   319434    2.246    0.000  961.243    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1277736    1.561    0.000  679.179    0.001 GerrymanderingMCMC.py:190(__district_size)
239175376  137.643    0.000  556.817    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10101    9.771    0.001  305.519    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.041    0.000   41.053    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.058    0.000   39.644    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.489    0.001   39.520    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.095    0.000   26.998    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.277    0.000   14.586    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.099    0.000    2.265    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.294    0.000    0.876    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.729    0.729 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.006    0.006    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
