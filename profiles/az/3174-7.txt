         5228075200 function calls (5227953161 primitive calls) in 1862.032 seconds
        1   10.871   10.871 1861.276 1861.276 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    6.485    0.001 1850.376    0.183 GerrymanderingMCMC.py:235(recombination_of_districts)
   393508    2.644    0.000 1228.457    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1574032    1.893    0.000  865.854    0.001 GerrymanderingMCMC.py:190(__district_size)
312198848  174.101    0.000  710.816    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10103    9.949    0.001  301.350    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.039    0.000   39.935    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.053    0.000   38.525    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   12.820    0.001   38.411    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.090    0.000   26.406    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.175    0.000   14.226    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.101    0.000    2.182    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.273    0.000    0.859    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.724    0.724 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
