         5361199386 function calls (5361077347 primitive calls) in 1934.316 seconds
        1   11.557   11.557 1933.540 1933.540 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    6.659    0.001 1921.933    0.190 GerrymanderingMCMC.py:235(recombination_of_districts)
   415790    2.931    0.000 1291.484    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1663160    2.019    0.000  907.726    0.001 GerrymanderingMCMC.py:190(__district_size)
323455558  184.355    0.000  743.940    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10103   10.026    0.001  306.355    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.040    0.000   40.550    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.057    0.000   39.127    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.150    0.001   39.007    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.095    0.000   26.834    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.261    0.000   14.591    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.091    0.000    2.239    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.284    0.000    0.893    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.744    0.744 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.006    0.006    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
