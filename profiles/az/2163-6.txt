         5414957926 function calls (5414835887 primitive calls) in 1947.634 seconds
        1   12.051   12.051 1946.889 1946.889 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    6.800    0.001 1934.806    0.192 GerrymanderingMCMC.py:235(recombination_of_districts)
   408017    2.866    0.000 1303.608    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1632068    1.960    0.000  918.597    0.001 GerrymanderingMCMC.py:190(__district_size)
328044462  183.969    0.000  750.718    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10102   10.014    0.001  304.333    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.041    0.000   41.295    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.060    0.000   39.833    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.110    0.001   39.702    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.100    0.000   27.153    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.223    0.000   14.403    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.096    0.000    2.270    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.284    0.000    0.864    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.712    0.712 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
