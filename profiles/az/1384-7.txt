         4690386465 function calls (4690264426 primitive calls) in 1704.948 seconds
        1   12.097   12.097 1704.219 1704.219 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.653    0.001 1692.093    0.168 GerrymanderingMCMC.py:235(recombination_of_districts)
   353241    2.428    0.000 1063.453    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1412964    1.650    0.000  746.334    0.001 GerrymanderingMCMC.py:190(__district_size)
265994900  151.260    0.000  612.495    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   10.128    0.001  306.682    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.042    0.000   40.641    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.059    0.000   39.192    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.307    0.001   39.065    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.099    0.000   26.815    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.193    0.000   14.327    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.098    0.000    2.309    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.283    0.000    0.846    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.697    0.697 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
