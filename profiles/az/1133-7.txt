         4838872111 function calls (4838750072 primitive calls) in 1720.406 seconds
        1   10.784   10.784 1719.653 1719.653 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.775    0.001 1708.838    0.169 GerrymanderingMCMC.py:235(recombination_of_districts)
   361509    2.527    0.000 1095.858    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1446036    1.666    0.000  769.953    0.001 GerrymanderingMCMC.py:190(__district_size)
278691722  151.915    0.000  632.982    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10106    9.573    0.001  296.836    0.029 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.046    0.000   39.771    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.054    0.000   38.393    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   12.788    0.001   38.277    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.090    0.000   26.351    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.121    0.000   14.155    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.094    0.000    2.188    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.279    0.000    0.837    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.721    0.721 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
