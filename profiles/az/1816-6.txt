         5008961007 function calls (5008838968 primitive calls) in 1805.357 seconds
        1   11.375   11.375 1804.626 1804.626 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    6.121    0.001 1793.222    0.178 GerrymanderingMCMC.py:235(recombination_of_districts)
   376950    2.548    0.000 1163.499    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1507800    1.789    0.000  818.446    0.001 GerrymanderingMCMC.py:190(__district_size)
292573648  163.962    0.000  668.551    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10101   10.028    0.001  308.024    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.039    0.000   40.249    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.055    0.000   38.844    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   12.905    0.001   38.725    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.097    0.000   26.678    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.211    0.000   14.521    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.088    0.000    2.267    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.278    0.000    0.871    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.698    0.698 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
