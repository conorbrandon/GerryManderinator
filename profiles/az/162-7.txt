         4888690731 function calls (4888568692 primitive calls) in 1767.304 seconds
        1   11.967   11.967 1766.533 1766.533 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    6.001    0.001 1754.537    0.174 GerrymanderingMCMC.py:235(recombination_of_districts)
   373424    2.554    0.000 1125.011    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1493696    1.856    0.000  791.692    0.001 GerrymanderingMCMC.py:190(__district_size)
282715738  161.756    0.000  649.125    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10101   10.020    0.001  305.937    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.052    0.000   40.284    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.058    0.000   38.838    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.063    0.001   38.715    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.100    0.000   26.690    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.181    0.000   14.462    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.096    0.000    2.242    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.285    0.000    0.870    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.739    0.739 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
