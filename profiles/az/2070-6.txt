         4300422812 function calls (4300300773 primitive calls) in 1561.817 seconds
        1   11.989   11.989 1561.009 1561.009 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.038    0.000 1548.973    0.153 GerrymanderingMCMC.py:235(recombination_of_districts)
   309755    2.183    0.000  926.212    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1239020    1.462    0.000  652.772    0.001 GerrymanderingMCMC.py:190(__district_size)
232774230  129.576    0.000  534.458    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10103    9.736    0.001  300.853    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.042    0.000   40.074    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.071    0.000   38.613    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   12.926    0.001   38.475    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.094    0.000   26.615    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.186    0.000   14.160    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.094    0.000    2.233    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.273    0.000    0.826    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.760    0.760 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.045    0.045 GerrymanderingMCMC.py:21(__init__)
        1    0.006    0.006    0.045    0.045 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
