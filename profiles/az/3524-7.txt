         5639321773 function calls (5639199734 primitive calls) in 2025.464 seconds
        1   11.956   11.956 2024.677 2024.677 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    7.088    0.001 2012.691    0.199 GerrymanderingMCMC.py:235(recombination_of_districts)
   437943    3.020    0.000 1381.406    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1751772    2.161    0.000  974.490    0.001 GerrymanderingMCMC.py:190(__district_size)
346538388  196.737    0.000  800.226    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10101   10.276    0.001  307.260    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.042    0.000   40.866    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.058    0.000   39.408    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.190    0.001   39.283    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.094    0.000   27.019    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.261    0.000   14.642    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.109    0.000    2.284    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.282    0.000    0.868    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.755    0.755 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
