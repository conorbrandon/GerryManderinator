         4914093918 function calls (4913971879 primitive calls) in 1777.979 seconds
        1   11.554   11.554 1777.202 1777.202 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.915    0.001 1765.614    0.175 GerrymanderingMCMC.py:235(recombination_of_districts)
   370300    2.576    0.000 1141.096    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1481200    1.798    0.000  802.407    0.001 GerrymanderingMCMC.py:190(__district_size)
285230576  162.182    0.000  657.602    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10102    9.903    0.001  301.644    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.040    0.000   41.083    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.057    0.000   39.680    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.566    0.001   39.556    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.094    0.000   27.119    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.183    0.000   14.440    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.099    0.000    2.333    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.283    0.000    0.851    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.745    0.745 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
