         4837210213 function calls (4837088174 primitive calls) in 1737.675 seconds
        1   11.390   11.390 1736.939 1736.939 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.901    0.001 1725.503    0.171 GerrymanderingMCMC.py:235(recombination_of_districts)
   361728    2.536    0.000 1102.245    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1446912    1.715    0.000  774.922    0.001 GerrymanderingMCMC.py:190(__district_size)
278239374  155.506    0.000  635.767    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10103    9.976    0.001  303.292    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.041    0.000   40.842    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.058    0.000   39.415    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.255    0.001   39.290    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.096    0.000   26.879    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.192    0.000   14.331    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.096    0.000    2.262    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.286    0.000    0.853    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.703    0.703 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
