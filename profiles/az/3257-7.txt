         5148440686 function calls (5148318647 primitive calls) in 1866.280 seconds
        1   11.441   11.441 1865.525 1865.525 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    6.487    0.001 1854.034    0.184 GerrymanderingMCMC.py:235(recombination_of_districts)
   399397    2.765    0.000 1225.526    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1597588    1.911    0.000  861.562    0.001 GerrymanderingMCMC.py:190(__district_size)
305315632  175.735    0.000  707.042    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10101   10.030    0.001  303.778    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.042    0.000   40.507    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.058    0.000   39.068    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.073    0.001   38.943    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.096    0.000   26.833    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.215    0.000   14.572    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.097    0.000    2.251    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.296    0.000    0.880    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.722    0.722 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
