         5297159856 function calls (5297037817 primitive calls) in 1903.427 seconds
        1   11.953   11.953 1902.676 1902.676 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    6.614    0.001 1890.694    0.187 GerrymanderingMCMC.py:235(recombination_of_districts)
   407957    2.840    0.000 1264.478    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1631828    1.934    0.000  887.464    0.001 GerrymanderingMCMC.py:190(__district_size)
318037772  180.753    0.000  726.923    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   10.065    0.001  303.508    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.045    0.000   40.532    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.057    0.000   39.109    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.028    0.001   38.987    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.094    0.000   26.825    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.199    0.000   14.356    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.093    0.000    2.344    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.284    0.000    0.847    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.718    0.718 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
