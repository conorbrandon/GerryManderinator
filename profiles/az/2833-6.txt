         4684573206 function calls (4684451167 primitive calls) in 1683.708 seconds
        1   11.156   11.156 1682.947 1682.947 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.667    0.001 1671.760    0.166 GerrymanderingMCMC.py:235(recombination_of_districts)
   350480    2.459    0.000 1053.906    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1401920    1.659    0.000  739.992    0.001 GerrymanderingMCMC.py:190(__district_size)
265387800  145.451    0.000  607.492    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100    9.839    0.001  299.326    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.040    0.000   40.150    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.055    0.000   38.752    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   12.779    0.001   38.633    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.091    0.000   26.623    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.138    0.000   14.336    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.089    0.000    2.205    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.299    0.000    0.897    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.736    0.736 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.006    0.006    0.030    0.030 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
