         4809687148 function calls (4809565109 primitive calls) in 1725.030 seconds
        1   10.888   10.888 1724.289 1724.289 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.794    0.001 1713.373    0.170 GerrymanderingMCMC.py:235(recombination_of_districts)
   354973    2.498    0.000 1091.641    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1419892    1.670    0.000  766.722    0.001 GerrymanderingMCMC.py:190(__district_size)
275859330  154.455    0.000  627.553    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10101    9.767    0.001  302.353    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.040    0.000   40.079    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.055    0.000   38.680    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   12.961    0.001   38.562    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.091    0.000   26.573    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.192    0.000   14.444    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.089    0.000    2.262    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.287    0.000    0.848    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.708    0.708 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.006    0.006    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
