         4939002191 function calls (4938880152 primitive calls) in 1780.678 seconds
        1   11.648   11.648 1779.932 1779.932 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    6.000    0.001 1768.240    0.175 GerrymanderingMCMC.py:235(recombination_of_districts)
   383685    2.663    0.000 1146.563    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1534740    1.818    0.000  807.264    0.001 GerrymanderingMCMC.py:190(__district_size)
287189746  162.623    0.000  660.951    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10101    9.885    0.001  302.286    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.043    0.000   40.995    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.058    0.000   39.581    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.477    0.001   39.461    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.092    0.000   27.039    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.246    0.000   14.469    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.089    0.000    2.227    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.287    0.000    0.861    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.712    0.712 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
