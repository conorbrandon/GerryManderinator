         4820102442 function calls (4819980403 primitive calls) in 1736.363 seconds
        1   11.262   11.262 1735.595 1735.595 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.819    0.001 1724.284    0.171 GerrymanderingMCMC.py:235(recombination_of_districts)
   369534    2.654    0.000 1104.210    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1478136    1.789    0.000  778.735    0.001 GerrymanderingMCMC.py:190(__district_size)
277372942  158.394    0.000  637.744    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10101    9.898    0.001  299.623    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.039    0.000   40.567    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.058    0.000   39.155    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.118    0.001   39.029    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.093    0.000   26.742    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.199    0.000   14.288    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.096    0.000    2.282    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.280    0.000    0.850    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.735    0.735 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.006    0.006    0.030    0.030 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
