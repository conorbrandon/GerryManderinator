         4414612599 function calls (4414490560 primitive calls) in 1591.377 seconds
        1   11.734   11.734 1590.675 1590.675 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.090    0.001 1578.913    0.156 GerrymanderingMCMC.py:235(recombination_of_districts)
   315432    2.221    0.000  956.472    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1261728    1.488    0.000  673.300    0.001 GerrymanderingMCMC.py:190(__district_size)
240997836  134.525    0.000  552.577    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10102    9.852    0.001  303.646    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.040    0.000   40.419    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.056    0.000   39.010    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.209    0.001   38.889    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.092    0.000   26.986    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.249    0.000   14.406    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.091    0.000    2.222    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.292    0.000    0.857    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.669    0.669 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
