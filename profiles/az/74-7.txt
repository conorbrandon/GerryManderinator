         4718234834 function calls (4718112795 primitive calls) in 1706.068 seconds
        1   11.345   11.345 1705.013 1705.013 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.677    0.001 1693.637    0.168 GerrymanderingMCMC.py:235(recombination_of_districts)
   356289    2.504    0.000 1070.178    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1425156    1.694    0.000  753.302    0.001 GerrymanderingMCMC.py:190(__district_size)
268069730  151.057    0.000  617.286    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10101   10.045    0.001  303.742    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.046    0.000   40.101    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.057    0.000   38.639    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   12.747    0.001   38.515    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.097    0.000   26.628    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.138    0.000   14.359    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.094    0.000    2.288    0.000 GerrymanderingMCMC.py:157(__random_district_label)
        1    0.000    0.000    1.023    1.023 GerrymanderingMCMC.py:1(<module>)
    10100    0.272    0.000    0.857    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.028    0.028 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.028    0.028 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
