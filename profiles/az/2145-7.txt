         4912547194 function calls (4912425155 primitive calls) in 1811.239 seconds
        1   11.443   11.443 1810.434 1810.434 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    6.070    0.001 1798.962    0.178 GerrymanderingMCMC.py:235(recombination_of_districts)
   380739    2.722    0.000 1171.917    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1522956    1.834    0.000  830.135    0.001 GerrymanderingMCMC.py:190(__district_size)
285145038  166.203    0.000  685.317    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100    9.803    0.001  302.985    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.041    0.000   40.965    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.057    0.000   39.513    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.405    0.001   39.389    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.096    0.000   27.127    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.164    0.000   14.472    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.097    0.000    2.304    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.293    0.000    0.874    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.772    0.772 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.006    0.006    0.030    0.030 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
