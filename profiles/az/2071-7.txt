         4439330590 function calls (4439208551 primitive calls) in 1619.431 seconds
        1   11.287   11.287 1618.631 1618.631 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.304    0.001 1607.315    0.159 GerrymanderingMCMC.py:235(recombination_of_districts)
   335066    2.335    0.000  978.703    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1340264    1.609    0.000  689.189    0.001 GerrymanderingMCMC.py:190(__district_size)
244082814  138.153    0.000  564.610    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10101   10.162    0.001  305.268    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.041    0.000   40.872    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.056    0.000   39.438    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.310    0.001   39.318    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.094    0.000   27.042    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.191    0.000   14.392    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.091    0.000    2.217    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.282    0.000    0.885    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.768    0.768 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.006    0.006    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
