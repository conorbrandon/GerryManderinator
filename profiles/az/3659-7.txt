         4725763531 function calls (4725641492 primitive calls) in 1706.384 seconds
        1   11.549   11.549 1705.683 1705.683 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.705    0.001 1694.058    0.168 GerrymanderingMCMC.py:235(recombination_of_districts)
   353254    2.478    0.000 1066.827    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1413016    1.687    0.000  750.473    0.001 GerrymanderingMCMC.py:190(__district_size)
269344518  152.777    0.000  614.945    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10101   10.042    0.001  303.823    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.049    0.000   40.330    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.057    0.000   38.910    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.034    0.001   38.784    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.106    0.000   26.608    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.197    0.000   14.239    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.095    0.000    2.271    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.274    0.000    0.838    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.668    0.668 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
