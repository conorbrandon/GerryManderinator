         4215222804 function calls (4215100765 primitive calls) in 1532.350 seconds
        1   11.457   11.457 1531.598 1531.598 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    4.820    0.000 1520.109    0.151 GerrymanderingMCMC.py:235(recombination_of_districts)
   304669    2.124    0.000  899.991    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1218676    1.474    0.000  630.862    0.001 GerrymanderingMCMC.py:190(__district_size)
224968824  125.115    0.000  517.303    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100    9.937    0.001  301.433    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.041    0.000   40.620    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.058    0.000   39.230    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.217    0.001   39.107    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.092    0.000   26.834    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.187    0.000   14.467    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.090    0.000    2.204    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.280    0.000    0.875    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.719    0.719 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.006    0.006    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
