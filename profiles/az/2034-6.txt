         4915435486 function calls (4915313447 primitive calls) in 1791.548 seconds
        1   12.314   12.314 1790.830 1790.830 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    6.009    0.001 1778.478    0.176 GerrymanderingMCMC.py:235(recombination_of_districts)
   375478    2.672    0.000 1150.518    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1501912    1.794    0.000  811.971    0.001 GerrymanderingMCMC.py:190(__district_size)
285009900  164.390    0.000  664.799    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100    9.932    0.001  303.853    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.041    0.000   40.973    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.059    0.000   39.442    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.151    0.001   39.313    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.095    0.000   27.124    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.307    0.000   14.646    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.096    0.000    2.311    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.283    0.000    0.868    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.685    0.685 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.006    0.006    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
