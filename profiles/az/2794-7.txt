         5026657736 function calls (5026535697 primitive calls) in 1816.524 seconds
        1   11.652   11.652 1815.749 1815.749 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    6.198    0.001 1804.067    0.179 GerrymanderingMCMC.py:235(recombination_of_districts)
   386012    2.697    0.000 1173.490    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1544048    1.811    0.000  825.443    0.001 GerrymanderingMCMC.py:190(__district_size)
294664504  164.574    0.000  676.428    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10101   10.057    0.001  304.469    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.041    0.000   41.091    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.057    0.000   39.633    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.304    0.001   39.509    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.097    0.000   27.096    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.192    0.000   14.426    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.119    0.000    2.320    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.280    0.000    0.855    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.742    0.742 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.030    0.030 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
