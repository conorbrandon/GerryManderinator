         5556848873 function calls (5556726834 primitive calls) in 2007.277 seconds
        1   11.940   11.940 2006.355 2006.355 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    7.053    0.001 1994.375    0.197 GerrymanderingMCMC.py:235(recombination_of_districts)
   425321    2.969    0.000 1361.108    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1701284    2.039    0.000  958.678    0.001 GerrymanderingMCMC.py:190(__district_size)
339528378  189.860    0.000  783.694    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10101   10.083    0.001  306.793    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.042    0.000   40.940    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.062    0.000   39.477    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.068    0.001   39.347    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.097    0.000   26.990    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.194    0.000   14.619    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.095    0.000    2.313    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.286    0.000    0.857    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.849    0.849 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.069    0.069 GerrymanderingMCMC.py:21(__init__)
        1    0.006    0.006    0.068    0.068 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.019    0.019 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
