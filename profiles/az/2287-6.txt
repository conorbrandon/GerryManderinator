         5096779239 function calls (5096657200 primitive calls) in 1832.682 seconds
        1   11.605   11.605 1831.935 1831.935 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    6.356    0.001 1820.299    0.180 GerrymanderingMCMC.py:235(recombination_of_districts)
   389877    2.748    0.000 1194.266    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1559508    1.888    0.000  837.367    0.001 GerrymanderingMCMC.py:190(__district_size)
300580270  169.920    0.000  685.121    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10101    9.907    0.001  304.634    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.041    0.000   40.402    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.057    0.000   38.962    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.041    0.001   38.839    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.104    0.000   26.719    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.235    0.000   14.519    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.096    0.000    2.248    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.284    0.000    0.862    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.714    0.714 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
