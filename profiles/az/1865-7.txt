         4875487156 function calls (4875365117 primitive calls) in 1739.286 seconds
        1   10.826   10.826 1738.526 1738.526 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.776    0.001 1727.655    0.171 GerrymanderingMCMC.py:235(recombination_of_districts)
   365445    2.583    0.000 1110.142    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1461780    1.715    0.000  780.911    0.001 GerrymanderingMCMC.py:190(__district_size)
281376700  157.047    0.000  640.317    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10102    9.776    0.001  302.238    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.047    0.000   39.630    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.055    0.000   38.215    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   12.659    0.001   38.090    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.089    0.000   26.228    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.167    0.000   14.310    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.088    0.000    2.200    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.286    0.000    0.854    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.727    0.727 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
