         4974065625 function calls (4973943586 primitive calls) in 1786.585 seconds
        1   11.099   11.099 1785.857 1785.857 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    6.111    0.001 1774.730    0.176 GerrymanderingMCMC.py:235(recombination_of_districts)
   380454    2.654    0.000 1149.400    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1521816    1.807    0.000  806.579    0.001 GerrymanderingMCMC.py:190(__district_size)
289736002  161.520    0.000  661.214    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10102   10.150    0.001  304.448    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.042    0.000   40.296    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.057    0.000   38.879    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.077    0.001   38.756    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.092    0.000   26.720    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.212    0.000   14.468    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.088    0.000    2.178    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.286    0.000    0.857    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.696    0.696 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.006    0.006    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
