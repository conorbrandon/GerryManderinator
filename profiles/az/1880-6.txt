         4442936443 function calls (4442814404 primitive calls) in 1604.765 seconds
        1   11.255   11.255 1603.551 1603.551 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.291    0.001 1592.254    0.158 GerrymanderingMCMC.py:235(recombination_of_districts)
   337390    2.322    0.000  968.859    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1349560    1.577    0.000  679.469    0.001 GerrymanderingMCMC.py:190(__district_size)
244863944  136.268    0.000  556.417    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10102    9.822    0.001  301.310    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.042    0.000   40.056    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.068    0.000   38.634    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   12.934    0.001   38.496    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.093    0.000   26.478    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.116    0.000   14.169    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.096    0.000    2.282    0.000 GerrymanderingMCMC.py:157(__random_district_label)
        1    0.000    0.000    1.168    1.168 GerrymanderingMCMC.py:1(<module>)
    10100    0.279    0.000    0.842    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
