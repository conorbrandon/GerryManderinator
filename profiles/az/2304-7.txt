         4771436878 function calls (4771314839 primitive calls) in 1717.394 seconds
        1   10.986   10.986 1716.661 1716.661 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.767    0.001 1705.647    0.169 GerrymanderingMCMC.py:235(recombination_of_districts)
   356131    2.464    0.000 1082.821    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1424524    1.718    0.000  761.790    0.001 GerrymanderingMCMC.py:190(__district_size)
272643262  156.896    0.000  623.395    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10101    9.881    0.001  302.835    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.039    0.000   40.985    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.054    0.000   39.597    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.401    0.001   39.480    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.090    0.000   26.947    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.244    0.000   14.359    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.088    0.000    2.198    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.295    0.000    0.870    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.700    0.700 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
