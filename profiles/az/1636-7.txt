         4597710145 function calls (4597588106 primitive calls) in 1678.594 seconds
        1   10.852   10.852 1677.825 1677.825 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.468    0.001 1666.944    0.165 GerrymanderingMCMC.py:235(recombination_of_districts)
   343650    2.371    0.000 1045.211    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1374600    1.642    0.000  736.831    0.001 GerrymanderingMCMC.py:190(__district_size)
258181386  148.444    0.000  603.838    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10102    9.830    0.001  301.871    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.040    0.000   40.325    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.056    0.000   38.927    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   12.996    0.001   38.810    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.091    0.000   26.871    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.181    0.000   14.364    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.091    0.000    2.212    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.284    0.000    0.846    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.736    0.736 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.006    0.006    0.030    0.030 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
