         4671133454 function calls (4671011415 primitive calls) in 1760.977 seconds
        1   12.207   12.207 1760.210 1760.210 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.604    0.001 1747.971    0.173 GerrymanderingMCMC.py:235(recombination_of_districts)
   356321    2.532    0.000 1109.478    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1425284    1.737    0.000  793.678    0.001 GerrymanderingMCMC.py:190(__district_size)
264412260  151.652    0.000  657.434    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10101   10.042    0.001  315.205    0.031 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.056    0.000   40.477    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.059    0.000   39.009    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.215    0.001   38.884    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.095    0.000   26.861    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.213    0.000   14.483    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.111    0.000    2.312    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.285    0.000    0.868    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.734    0.734 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.006    0.006    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
