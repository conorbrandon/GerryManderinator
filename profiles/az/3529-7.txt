         4736738861 function calls (4736616822 primitive calls) in 1725.427 seconds
        1   11.136   11.136 1724.679 1724.679 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.747    0.001 1713.513    0.170 GerrymanderingMCMC.py:235(recombination_of_districts)
   353399    2.481    0.000 1085.476    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1413596    1.711    0.000  764.565    0.001 GerrymanderingMCMC.py:190(__district_size)
269225514  154.137    0.000  628.493    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10101    9.968    0.001  306.431    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.039    0.000   41.116    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.057    0.000   39.670    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.392    0.001   39.549    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.105    0.000   27.309    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.221    0.000   14.507    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.093    0.000    2.221    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.288    0.000    0.865    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.722    0.722 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.006    0.006    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
