         5198455170 function calls (5198333131 primitive calls) in 1866.313 seconds
        1   11.200   11.200 1865.571 1865.571 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    6.315    0.001 1854.341    0.184 GerrymanderingMCMC.py:235(recombination_of_districts)
   402833    2.787    0.000 1232.841    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1611332    1.999    0.000  866.526    0.001 GerrymanderingMCMC.py:190(__district_size)
309213018  173.202    0.000  709.108    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10101    9.847    0.001  301.235    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.039    0.000   40.266    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.056    0.000   38.835    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   12.926    0.001   38.717    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.092    0.000   26.676    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.173    0.000   14.476    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.087    0.000    2.252    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.284    0.000    0.849    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.710    0.710 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
