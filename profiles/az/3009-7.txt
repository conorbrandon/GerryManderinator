         5417758550 function calls (5417636511 primitive calls) in 1946.290 seconds
        1   11.070   11.070 1945.586 1945.586 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    6.779    0.001 1934.469    0.192 GerrymanderingMCMC.py:235(recombination_of_districts)
   417937    2.936    0.000 1304.691    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1671748    1.975    0.000  920.717    0.001 GerrymanderingMCMC.py:190(__district_size)
327916974  187.202    0.000  755.894    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10101    9.955    0.001  305.683    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.040    0.000   40.569    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.055    0.000   39.141    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   12.892    0.001   39.011    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.092    0.000   26.756    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.179    0.000   14.494    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.089    0.000    2.213    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.281    0.000    0.851    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.671    0.671 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
