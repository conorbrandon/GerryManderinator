         4768170843 function calls (4768048804 primitive calls) in 1726.964 seconds
        1   11.754   11.754 1726.160 1726.160 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.895    0.001 1714.373    0.170 GerrymanderingMCMC.py:235(recombination_of_districts)
   365316    2.584    0.000 1087.683    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1461264    1.752    0.000  763.421    0.001 GerrymanderingMCMC.py:190(__district_size)
272787770  154.634    0.000  626.320    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10102   10.113    0.001  303.480    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.044    0.000   40.433    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.058    0.000   39.000    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   12.896    0.001   38.875    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.094    0.000   26.742    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.224    0.000   14.430    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.099    0.000    2.291    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.284    0.000    0.845    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.778    0.778 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
