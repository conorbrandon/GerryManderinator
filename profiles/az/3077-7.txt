         5184853750 function calls (5184731711 primitive calls) in 1862.673 seconds
        1   11.302   11.302 1861.853 1861.853 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    6.487    0.001 1850.521    0.183 GerrymanderingMCMC.py:235(recombination_of_districts)
   392409    2.751    0.000 1223.920    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1569636    1.861    0.000  861.830    0.001 GerrymanderingMCMC.py:190(__district_size)
308094434  172.243    0.000  706.032    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10101   10.031    0.001  302.136    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.038    0.000   40.765    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.056    0.000   39.353    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.232    0.001   39.221    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.094    0.000   27.028    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.249    0.000   14.569    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.095    0.000    2.250    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.278    0.000    0.871    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.788    0.788 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
