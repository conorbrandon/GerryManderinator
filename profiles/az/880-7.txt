         4555293897 function calls (4555171858 primitive calls) in 1637.734 seconds
        1   11.306   11.306 1636.906 1636.906 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.441    0.001 1625.571    0.161 GerrymanderingMCMC.py:235(recombination_of_districts)
   349028    2.395    0.000 1007.643    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1396112    1.661    0.000  707.673    0.001 GerrymanderingMCMC.py:190(__district_size)
254470290  144.617    0.000  580.174    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10102    9.929    0.001  301.122    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.041    0.000   39.869    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.056    0.000   38.474    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   12.866    0.001   38.354    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.092    0.000   26.373    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.145    0.000   14.247    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.097    0.000    2.184    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.270    0.000    0.853    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.795    0.795 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.006    0.006    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
