         4433204594 function calls (4433082555 primitive calls) in 1612.316 seconds
        1   11.434   11.434 1611.610 1611.610 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.229    0.001 1600.146    0.158 GerrymanderingMCMC.py:235(recombination_of_districts)
   328821    2.290    0.000  972.422    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1315284    1.583    0.000  682.594    0.001 GerrymanderingMCMC.py:190(__district_size)
243451652  136.804    0.000  559.990    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10102   10.135    0.001  304.634    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.041    0.000   40.768    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.057    0.000   39.345    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.388    0.001   39.224    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.094    0.000   26.895    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.221    0.000   14.504    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.095    0.000    2.244    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.282    0.000    0.848    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.673    0.673 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
