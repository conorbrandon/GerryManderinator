         4488138402 function calls (4488016363 primitive calls) in 1636.433 seconds
        1   11.331   11.331 1635.671 1635.671 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.342    0.001 1624.310    0.161 GerrymanderingMCMC.py:235(recombination_of_districts)
   331433    2.293    0.000  994.957    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1325732    1.616    0.000  700.614    0.001 GerrymanderingMCMC.py:190(__district_size)
248349102  142.498    0.000  574.925    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   10.200    0.001  305.755    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.054    0.000   40.922    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.056    0.000   39.500    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.410    0.001   39.367    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.093    0.000   27.012    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.243    0.000   14.499    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.094    0.000    2.284    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.278    0.000    0.837    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.734    0.734 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
