         4753710937 function calls (4753588898 primitive calls) in 1722.160 seconds
        1   12.109   12.109 1721.413 1721.413 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.787    0.001 1709.274    0.169 GerrymanderingMCMC.py:235(recombination_of_districts)
   356223    2.444    0.000 1080.138    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1424892    1.687    0.000  761.105    0.001 GerrymanderingMCMC.py:190(__district_size)
271367028  154.070    0.000  624.457    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10101   10.134    0.001  305.631    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.042    0.000   40.725    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.075    0.000   39.309    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.175    0.001   39.165    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.099    0.000   26.845    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.233    0.000   14.404    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.106    0.000    2.299    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.278    0.000    0.862    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.714    0.714 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
