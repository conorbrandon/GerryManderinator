         4637180279 function calls (4637058240 primitive calls) in 1701.273 seconds
        1   11.054   11.054 1700.561 1700.561 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.589    0.001 1689.477    0.167 GerrymanderingMCMC.py:235(recombination_of_districts)
   356670    2.497    0.000 1061.282    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1426680    1.722    0.000  747.093    0.001 GerrymanderingMCMC.py:190(__district_size)
261607756  148.419    0.000  612.238    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100    9.965    0.001  303.429    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.041    0.000   41.293    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.055    0.000   39.888    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.651    0.001   39.768    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.092    0.000   27.311    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.189    0.000   14.457    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.088    0.000    2.262    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.281    0.000    0.847    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.679    0.679 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
