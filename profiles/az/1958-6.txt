         4479643650 function calls (4479521611 primitive calls) in 1614.414 seconds
        1   11.023   11.023 1613.694 1613.694 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.269    0.001 1602.641    0.159 GerrymanderingMCMC.py:235(recombination_of_districts)
   331255    2.288    0.000  985.085    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1325020    1.649    0.000  692.189    0.001 GerrymanderingMCMC.py:190(__district_size)
248254548  140.080    0.000  567.418    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100    9.863    0.001  299.066    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.039    0.000   40.726    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.055    0.000   39.358    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.054    0.001   39.239    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.090    0.000   26.956    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.119    0.000   14.230    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.108    0.000    2.200    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.275    0.000    0.834    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.688    0.688 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
