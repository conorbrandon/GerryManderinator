         4721564137 function calls (4721442098 primitive calls) in 1720.003 seconds
        1   10.982   10.982 1719.300 1719.300 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.700    0.001 1708.282    0.169 GerrymanderingMCMC.py:235(recombination_of_districts)
   350856    2.464    0.000 1082.528    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1403424    1.774    0.000  761.669    0.001 GerrymanderingMCMC.py:190(__district_size)
268607346  154.076    0.000  624.043    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100    9.886    0.001  303.982    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.040    0.000   41.022    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.057    0.000   39.590    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.210    0.001   39.472    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.091    0.000   27.095    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.190    0.000   14.481    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.090    0.000    2.215    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.293    0.000    0.872    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.670    0.670 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.006    0.006    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
