         4374284031 function calls (4374161992 primitive calls) in 1586.160 seconds
        1   10.959   10.959 1585.442 1585.442 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.219    0.001 1574.454    0.156 GerrymanderingMCMC.py:235(recombination_of_districts)
   321112    2.205    0.000  950.701    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1284448    1.547    0.000  667.438    0.001 GerrymanderingMCMC.py:190(__district_size)
238800136  135.955    0.000  545.823    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10101    9.864    0.001  304.140    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.042    0.000   40.920    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.057    0.000   39.476    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.199    0.001   39.356    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.092    0.000   27.009    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.181    0.000   14.380    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.090    0.000    2.201    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.279    0.000    0.842    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.686    0.686 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.006    0.006    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
