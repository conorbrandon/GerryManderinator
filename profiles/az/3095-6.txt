         5204393361 function calls (5204271322 primitive calls) in 1878.525 seconds
        1   12.628   12.628 1877.765 1877.765 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    6.583    0.001 1865.084    0.185 GerrymanderingMCMC.py:235(recombination_of_districts)
   396219    2.725    0.000 1233.682    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1584876    1.930    0.000  868.451    0.001 GerrymanderingMCMC.py:190(__district_size)
309269530  175.419    0.000  712.509    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10101   10.135    0.001  306.242    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.042    0.000   40.417    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.060    0.000   38.981    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.133    0.001   38.852    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.096    0.000   26.639    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.256    0.000   14.577    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.101    0.000    2.370    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.281    0.000    0.846    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.727    0.727 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.006    0.006    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
