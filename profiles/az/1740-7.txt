         5038516335 function calls (5038394296 primitive calls) in 1815.400 seconds
        1   11.784   11.784 1814.660 1814.660 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    6.245    0.001 1802.844    0.178 GerrymanderingMCMC.py:235(recombination_of_districts)
   382083    2.636    0.000 1172.267    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1528332    1.775    0.000  825.242    0.001 GerrymanderingMCMC.py:190(__district_size)
295364988  167.405    0.000  674.709    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10102   10.101    0.001  306.995    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.046    0.000   40.605    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.058    0.000   39.141    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.126    0.001   39.014    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.096    0.000   26.897    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.216    0.000   14.444    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.094    0.000    2.364    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.274    0.000    0.830    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.707    0.707 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
