         4857999934 function calls (4857877895 primitive calls) in 1752.275 seconds
        1   11.055   11.055 1751.501 1751.501 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.995    0.001 1740.416    0.172 GerrymanderingMCMC.py:235(recombination_of_districts)
   373304    2.587    0.000 1115.520    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1493216    1.750    0.000  780.412    0.001 GerrymanderingMCMC.py:190(__district_size)
280314790  155.922    0.000  637.298    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100    9.783    0.001  303.511    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.058    0.000   40.322    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.060    0.000   38.875    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   12.969    0.001   38.752    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.093    0.000   26.736    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.144    0.000   14.457    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.089    0.000    2.214    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.276    0.000    0.855    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.730    0.730 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.040    0.040 GerrymanderingMCMC.py:21(__init__)
        1    0.007    0.007    0.040    0.040 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.009    0.009 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
