         4135045596 function calls (4134923557 primitive calls) in 1487.070 seconds
        1   10.717   10.717 1486.318 1486.318 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    4.786    0.000 1475.572    0.146 GerrymanderingMCMC.py:235(recombination_of_districts)
   296683    2.015    0.000  862.811    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1186732    1.384    0.000  604.516    0.001 GerrymanderingMCMC.py:190(__district_size)
218643184  120.335    0.000  493.754    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10101    9.889    0.001  299.381    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.038    0.000   39.476    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.054    0.000   38.116    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   12.789    0.001   38.003    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.088    0.000   26.125    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.097    0.000   14.133    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.088    0.000    2.143    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.267    0.000    0.809    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.720    0.720 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
