         5400906780 function calls (5400784741 primitive calls) in 1946.250 seconds
        1   11.598   11.598 1945.545 1945.545 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    6.743    0.001 1933.918    0.191 GerrymanderingMCMC.py:235(recombination_of_districts)
   410090    2.945    0.000 1298.012    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1640360    1.918    0.000  912.373    0.001 GerrymanderingMCMC.py:190(__district_size)
325815670  182.743    0.000  745.551    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10102   10.225    0.001  308.949    0.031 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.041    0.000   40.693    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.057    0.000   39.201    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.094    0.001   39.071    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.092    0.000   26.988    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.233    0.000   14.665    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.094    0.000    2.276    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.278    0.000    0.876    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.672    0.672 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
