         5191526871 function calls (5191404832 primitive calls) in 1853.392 seconds
        1   11.266   11.266 1852.696 1852.696 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    6.433    0.001 1841.402    0.182 GerrymanderingMCMC.py:235(recombination_of_districts)
   395172    2.646    0.000 1221.033    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1580688    1.894    0.000  861.508    0.001 GerrymanderingMCMC.py:190(__district_size)
308465602  173.644    0.000  705.664    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   10.021    0.001  303.432    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.039    0.000   40.053    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.057    0.000   38.660    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.008    0.001   38.540    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.106    0.000   26.543    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.222    0.000   14.373    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.091    0.000    2.227    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.283    0.000    0.845    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.664    0.664 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
