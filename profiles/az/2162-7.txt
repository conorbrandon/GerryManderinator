         4852345896 function calls (4852223857 primitive calls) in 1733.444 seconds
        1   11.301   11.301 1732.707 1732.707 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.842    0.001 1721.357    0.170 GerrymanderingMCMC.py:235(recombination_of_districts)
   369785    2.589    0.000 1104.158    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1479140    1.723    0.000  777.042    0.001 GerrymanderingMCMC.py:190(__district_size)
279770896  156.435    0.000  636.206    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100    9.720    0.001  300.361    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.040    0.000   39.827    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.055    0.000   38.447    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   12.919    0.001   38.329    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.090    0.000   26.457    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.197    0.000   14.352    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.090    0.000    2.241    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.276    0.000    0.834    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.705    0.705 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
