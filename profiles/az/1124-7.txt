         4822875280 function calls (4822753241 primitive calls) in 1716.465 seconds
        1   10.958   10.958 1715.728 1715.728 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.767    0.001 1704.725    0.169 GerrymanderingMCMC.py:235(recombination_of_districts)
   360510    2.460    0.000 1086.543    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1442040    1.680    0.000  764.107    0.001 GerrymanderingMCMC.py:190(__district_size)
276592238  156.244    0.000  626.317    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100    9.770    0.001  299.858    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.039    0.000   40.005    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.054    0.000   38.624    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   12.898    0.001   38.508    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.094    0.000   26.675    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.172    0.000   14.297    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.092    0.000    2.217    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.301    0.000    0.888    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.705    0.705 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
