         4589563204 function calls (4589441165 primitive calls) in 1674.438 seconds
        1   11.037   11.037 1673.709 1673.709 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.558    0.001 1662.639    0.165 GerrymanderingMCMC.py:235(recombination_of_districts)
   351535    2.457    0.000 1036.443    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1406140    1.699    0.000  728.833    0.001 GerrymanderingMCMC.py:190(__district_size)
257283698  146.874    0.000  596.724    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   10.047    0.001  304.697    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.040    0.000   40.692    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.062    0.000   39.240    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.224    0.001   39.110    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.099    0.000   27.000    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.228    0.000   14.467    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.095    0.000    2.335    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.286    0.000    0.852    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.697    0.697 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
