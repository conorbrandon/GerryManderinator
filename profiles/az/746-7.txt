         5124434640 function calls (5124312601 primitive calls) in 1875.465 seconds
        1   11.370   11.370 1874.669 1874.669 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    6.387    0.001 1863.264    0.184 GerrymanderingMCMC.py:235(recombination_of_districts)
   407211    2.879    0.000 1235.433    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1628844    1.964    0.000  870.581    0.001 GerrymanderingMCMC.py:190(__district_size)
303181422  174.438    0.000  712.953    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10102   10.257    0.001  304.320    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.041    0.000   41.332    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.065    0.000   39.941    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.360    0.001   39.812    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.092    0.000   27.179    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.227    0.000   14.710    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.094    0.000    2.311    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.282    0.000    0.867    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.763    0.763 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
