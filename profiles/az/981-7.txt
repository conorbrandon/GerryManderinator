         5288906200 function calls (5288784161 primitive calls) in 1916.250 seconds
        1   11.256   11.256 1915.406 1915.406 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    6.613    0.001 1904.118    0.189 GerrymanderingMCMC.py:235(recombination_of_districts)
   408341    2.844    0.000 1270.494    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1633364    2.005    0.000  895.282    0.001 GerrymanderingMCMC.py:190(__district_size)
316892460  180.882    0.000  734.318    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   10.193    0.001  308.734    0.031 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.039    0.000   40.987    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.056    0.000   39.560    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.427    0.001   39.441    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.096    0.000   27.052    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.235    0.000   14.598    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.104    0.000    2.282    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.287    0.000    0.878    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.810    0.810 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.006    0.006    0.030    0.030 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.007    0.007 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
