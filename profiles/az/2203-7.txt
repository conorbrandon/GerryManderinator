         4707785328 function calls (4707663289 primitive calls) in 1715.882 seconds
        1   11.125   11.125 1715.129 1715.129 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.781    0.001 1703.975    0.169 GerrymanderingMCMC.py:235(recombination_of_districts)
   353053    2.547    0.000 1075.204    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1412212    1.734    0.000  756.905    0.001 GerrymanderingMCMC.py:190(__district_size)
267672816  153.285    0.000  620.594    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10101    9.836    0.001  304.152    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.039    0.000   41.312    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.058    0.000   39.903    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.256    0.001   39.768    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.094    0.000   27.256    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.208    0.000   14.486    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.094    0.000    2.304    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.278    0.000    0.877    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.720    0.720 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.006    0.006    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
