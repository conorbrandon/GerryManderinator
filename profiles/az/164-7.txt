         4534077559 function calls (4533955520 primitive calls) in 1663.107 seconds
        1   11.026   11.026 1662.332 1662.332 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.351    0.001 1651.273    0.163 GerrymanderingMCMC.py:235(recombination_of_districts)
   336221    2.391    0.000 1021.037    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1344884    1.634    0.000  720.253    0.001 GerrymanderingMCMC.py:190(__district_size)
251400892  145.647    0.000  588.562    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   10.109    0.001  306.400    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.040    0.000   41.091    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.057    0.000   39.661    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.195    0.001   39.535    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.094    0.000   27.256    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.227    0.000   14.691    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.093    0.000    2.306    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.290    0.000    0.866    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.742    0.742 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.006    0.006    0.030    0.030 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
