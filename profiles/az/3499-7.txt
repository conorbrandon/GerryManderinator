         4674725414 function calls (4674603375 primitive calls) in 1695.266 seconds
        1   11.507   11.507 1694.526 1694.526 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.683    0.001 1682.988    0.167 GerrymanderingMCMC.py:235(recombination_of_districts)
   351520    2.443    0.000 1055.509    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1406080    1.713    0.000  741.430    0.001 GerrymanderingMCMC.py:190(__district_size)
264223678  148.960    0.000  606.036    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   10.162    0.001  305.035    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.047    0.000   41.120    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.057    0.000   39.703    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.441    0.001   39.581    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.099    0.000   27.186    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.169    0.000   14.465    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.097    0.000    2.268    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.282    0.000    0.849    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.707    0.707 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.006    0.006    0.030    0.030 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
