         4856886336 function calls (4856764297 primitive calls) in 1754.205 seconds
        1   12.102   12.102 1753.425 1753.425 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.974    0.001 1741.293    0.172 GerrymanderingMCMC.py:235(recombination_of_districts)
   360991    2.461    0.000 1118.875    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1443964    1.719    0.000  787.879    0.001 GerrymanderingMCMC.py:190(__district_size)
280080180  159.441    0.000  645.086    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10101    9.873    0.001  300.627    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.042    0.000   40.141    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.058    0.000   38.673    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.124    0.001   38.545    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.097    0.000   26.487    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.216    0.000   14.407    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.094    0.000    2.264    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.290    0.000    0.888    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.748    0.748 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
