         4404848701 function calls (4404726662 primitive calls) in 1586.353 seconds
        1   11.750   11.750 1585.627 1585.627 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.087    0.001 1573.847    0.156 GerrymanderingMCMC.py:235(recombination_of_districts)
   327801    2.308    0.000  951.532    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1311204    1.587    0.000  669.955    0.001 GerrymanderingMCMC.py:190(__district_size)
241370022  134.968    0.000  548.805    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10103    9.994    0.001  301.911    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.040    0.000   40.235    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.058    0.000   38.850    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   12.944    0.001   38.729    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.094    0.000   26.648    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.156    0.000   14.108    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.105    0.000    2.249    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.294    0.000    0.849    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.694    0.694 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
