         4890860934 function calls (4890738895 primitive calls) in 1770.285 seconds
        1   11.505   11.505 1769.527 1769.527 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.918    0.001 1757.988    0.174 GerrymanderingMCMC.py:235(recombination_of_districts)
   370330    2.635    0.000 1132.481    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1481320    1.771    0.000  794.950    0.001 GerrymanderingMCMC.py:190(__district_size)
283320708  160.145    0.000  652.176    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100    9.969    0.001  303.326    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.041    0.000   40.427    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.056    0.000   39.030    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.148    0.001   38.910    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.113    0.000   26.785    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.186    0.000   14.455    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.105    0.000    2.226    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.282    0.000    0.882    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.726    0.726 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.006    0.006    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.007    0.007 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
