         4735035487 function calls (4734913448 primitive calls) in 1719.088 seconds
        1   11.980   11.980 1718.367 1718.367 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.767    0.001 1706.355    0.169 GerrymanderingMCMC.py:235(recombination_of_districts)
   360579    2.547    0.000 1078.239    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1442316    1.709    0.000  759.103    0.001 GerrymanderingMCMC.py:190(__district_size)
269603988  154.649    0.000  622.581    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10101    9.869    0.001  302.990    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.050    0.000   40.810    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.058    0.000   39.374    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.401    0.001   39.248    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.098    0.000   26.882    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.205    0.000   14.318    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.096    0.000    2.274    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.284    0.000    0.859    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.702    0.702 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.007    0.007 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
