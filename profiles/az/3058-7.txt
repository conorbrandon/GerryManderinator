         4815228264 function calls (4815106225 primitive calls) in 1737.467 seconds
        1   11.424   11.424 1736.729 1736.729 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.773    0.001 1725.277    0.171 GerrymanderingMCMC.py:235(recombination_of_districts)
   360867    2.488    0.000 1100.914    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1443468    1.773    0.000  774.833    0.001 GerrymanderingMCMC.py:190(__district_size)
276166442  156.226    0.000  634.584    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10101   10.071    0.001  304.055    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.041    0.000   40.777    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.056    0.000   39.361    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.247    0.001   39.240    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.093    0.000   26.923    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.234    0.000   14.491    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.099    0.000    2.221    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.285    0.000    0.865    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.705    0.705 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
