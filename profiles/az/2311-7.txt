         4157532731 function calls (4157410692 primitive calls) in 1515.703 seconds
        1   11.888   11.888 1514.980 1514.980 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    4.764    0.000 1503.062    0.149 GerrymanderingMCMC.py:235(recombination_of_districts)
   302654    2.108    0.000  881.497    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1210616    1.535    0.000  620.226    0.001 GerrymanderingMCMC.py:190(__district_size)
219716924  123.989    0.000  507.813    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   10.057    0.001  302.647    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.043    0.000   40.358    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.059    0.000   38.921    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.095    0.001   38.798    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.092    0.000   26.719    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.165    0.000   14.323    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.090    0.000    2.250    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.286    0.000    0.866    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.691    0.691 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
