         4939549040 function calls (4939427001 primitive calls) in 1770.062 seconds
        1   11.558   11.558 1769.363 1769.363 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.950    0.001 1757.759    0.174 GerrymanderingMCMC.py:235(recombination_of_districts)
   375871    2.547    0.000 1132.585    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1503484    1.789    0.000  794.958    0.001 GerrymanderingMCMC.py:190(__district_size)
286821372  160.108    0.000  650.469    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10103   10.156    0.001  304.503    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.039    0.000   40.126    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.057    0.000   38.703    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   12.937    0.001   38.582    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.093    0.000   26.549    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.211    0.000   14.401    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.097    0.000    2.282    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.294    0.000    0.869    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.674    0.674 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
