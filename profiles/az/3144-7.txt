         4495515331 function calls (4495393292 primitive calls) in 1649.756 seconds
        1   11.965   11.965 1649.003 1649.003 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.321    0.001 1637.010    0.162 GerrymanderingMCMC.py:235(recombination_of_districts)
   335898    2.359    0.000 1005.805    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1343592    1.655    0.000  705.764    0.001 GerrymanderingMCMC.py:190(__district_size)
249202090  142.135    0.000  578.637    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   10.008    0.001  304.402    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.045    0.000   40.777    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.081    0.000   39.288    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.247    0.001   39.140    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.093    0.000   27.008    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.226    0.000   14.510    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.095    0.000    2.257    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.300    0.000    0.880    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.720    0.720 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.006    0.006    0.030    0.030 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
