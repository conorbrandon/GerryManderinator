         4734354445 function calls (4734232406 primitive calls) in 1713.373 seconds
        1   12.012   12.012 1712.635 1712.635 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.666    0.001 1700.592    0.168 GerrymanderingMCMC.py:235(recombination_of_districts)
   348752    2.483    0.000 1074.079    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1395008    1.689    0.000  756.092    0.001 GerrymanderingMCMC.py:190(__district_size)
269242500  153.924    0.000  619.628    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   10.144    0.001  303.813    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.042    0.000   40.653    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.058    0.000   39.235    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.243    0.001   39.110    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.096    0.000   26.859    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.343    0.000   14.624    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.098    0.000    2.274    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.280    0.000    0.846    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.705    0.705 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
