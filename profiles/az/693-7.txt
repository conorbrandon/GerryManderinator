         5011244038 function calls (5011121999 primitive calls) in 1811.701 seconds
        1   11.269   11.269 1810.964 1810.964 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    6.176    0.001 1799.660    0.178 GerrymanderingMCMC.py:235(recombination_of_districts)
   388209    2.678    0.000 1170.125    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1552836    1.879    0.000  821.934    0.001 GerrymanderingMCMC.py:190(__district_size)
293464248  165.388    0.000  672.223    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10101   10.069    0.001  303.146    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.042    0.000   40.885    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.062    0.000   39.484    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.354    0.001   39.359    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.093    0.000   27.004    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.184    0.000   14.476    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.091    0.000    2.232    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.289    0.000    0.854    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.704    0.704 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
