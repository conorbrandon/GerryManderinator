         4785121918 function calls (4784999879 primitive calls) in 1728.662 seconds
        1   10.909   10.909 1727.810 1727.810 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.709    0.001 1716.872    0.170 GerrymanderingMCMC.py:235(recombination_of_districts)
   356804    2.440    0.000 1089.377    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1427216    1.730    0.000  767.178    0.001 GerrymanderingMCMC.py:190(__district_size)
273327436  154.783    0.000  628.116    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10101    9.989    0.001  307.138    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.038    0.000   40.690    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.053    0.000   39.276    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.349    0.001   39.160    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.091    0.000   26.916    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.233    0.000   14.437    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.118    0.000    2.206    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.294    0.000    0.857    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.806    0.806 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.043    0.043 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.042    0.042 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
