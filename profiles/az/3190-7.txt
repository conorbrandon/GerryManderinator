         4918641157 function calls (4918519118 primitive calls) in 1774.755 seconds
        1   11.396   11.396 1774.051 1774.051 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    6.005    0.001 1762.605    0.175 GerrymanderingMCMC.py:235(recombination_of_districts)
   369659    2.575    0.000 1136.539    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1478636    1.752    0.000  799.838    0.001 GerrymanderingMCMC.py:190(__district_size)
285549952  160.035    0.000  655.462    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   10.215    0.001  304.310    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.041    0.000   40.861    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.064    0.000   39.440    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.071    0.001   39.304    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.095    0.000   26.933    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.183    0.000   14.344    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.090    0.000    2.244    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.286    0.000    0.866    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.674    0.674 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.006    0.006    0.030    0.030 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
