         4906302584 function calls (4906180545 primitive calls) in 1754.200 seconds
        1   11.149   11.149 1753.497 1753.497 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.960    0.001 1742.319    0.173 GerrymanderingMCMC.py:235(recombination_of_districts)
   367827    2.494    0.000 1123.537    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1471308    1.722    0.000  789.554    0.001 GerrymanderingMCMC.py:190(__district_size)
284504390  158.117    0.000  647.140    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100    9.824    0.001  300.057    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.038    0.000   40.039    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.053    0.000   38.635    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   12.808    0.001   38.521    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.090    0.000   26.552    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.122    0.000   14.231    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.089    0.000    2.198    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.287    0.000    0.856    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.671    0.671 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
