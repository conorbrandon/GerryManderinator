         4285301103 function calls (4285179064 primitive calls) in 1568.079 seconds
        1   11.440   11.440 1567.361 1567.361 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.048    0.000 1555.892    0.154 GerrymanderingMCMC.py:235(recombination_of_districts)
   306192    2.142    0.000  926.837    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1224768    1.520    0.000  652.869    0.001 GerrymanderingMCMC.py:190(__district_size)
231090860  133.597    0.000  536.020    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   10.050    0.001  304.876    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.041    0.000   41.172    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.057    0.000   39.749    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.423    0.001   39.629    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.093    0.000   27.093    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.207    0.000   14.351    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.092    0.000    2.191    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.274    0.000    0.825    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.685    0.685 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.006    0.006    0.030    0.030 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
