         5363351191 function calls (5363229152 primitive calls) in 1957.719 seconds
        1   11.668   11.668 1956.933 1956.933 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    6.735    0.001 1945.230    0.193 GerrymanderingMCMC.py:235(recombination_of_districts)
   418323    3.046    0.000 1313.746    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1673292    2.058    0.000  922.376    0.001 GerrymanderingMCMC.py:190(__district_size)
323446880  185.474    0.000  755.154    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10101   10.149    0.001  305.493    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.041    0.000   41.451    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.058    0.000   39.958    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.452    0.001   39.834    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.095    0.000   27.510    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.243    0.000   14.739    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.098    0.000    2.320    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.281    0.000    0.852    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.752    0.752 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.031    0.031 GerrymanderingMCMC.py:21(__init__)
        1    0.006    0.006    0.031    0.031 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
