         4703866404 function calls (4703744365 primitive calls) in 1685.602 seconds
        1   11.573   11.573 1684.849 1684.849 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.732    0.001 1673.247    0.166 GerrymanderingMCMC.py:235(recombination_of_districts)
   353523    2.444    0.000 1052.804    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1414092    1.677    0.000  740.823    0.001 GerrymanderingMCMC.py:190(__district_size)
267679308  150.419    0.000  608.520    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100    9.770    0.001  299.658    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.040    0.000   40.566    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.057    0.000   39.154    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.144    0.001   39.034    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.092    0.000   26.751    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.167    0.000   14.181    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.116    0.000    2.207    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.306    0.000    0.880    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.720    0.720 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
