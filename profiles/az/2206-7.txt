         4658696900 function calls (4658574861 primitive calls) in 1693.291 seconds
        1   11.887   11.887 1692.562 1692.562 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.662    0.001 1680.646    0.166 GerrymanderingMCMC.py:235(recombination_of_districts)
   349077    2.478    0.000 1057.709    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1396308    1.715    0.000  746.027    0.001 GerrymanderingMCMC.py:190(__district_size)
263361062  149.454    0.000  611.193    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10101    9.949    0.001  302.170    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.040    0.000   40.761    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.059    0.000   39.337    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.153    0.001   39.207    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.096    0.000   26.899    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.189    0.000   14.335    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.095    0.000    2.302    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.281    0.000    0.863    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.697    0.697 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
