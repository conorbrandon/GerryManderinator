         5161657538 function calls (5161535499 primitive calls) in 1888.448 seconds
        1   11.050   11.050 1887.706 1887.706 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    6.341    0.001 1876.625    0.186 GerrymanderingMCMC.py:235(recombination_of_districts)
   397452    2.889    0.000 1241.988    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1589808    1.961    0.000  875.169    0.001 GerrymanderingMCMC.py:190(__district_size)
306097416  174.195    0.000  715.865    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10101   10.103    0.001  310.593    0.031 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.042    0.000   41.091    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.057    0.000   39.659    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.453    0.001   39.537    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.100    0.000   27.129    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.251    0.000   14.736    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.091    0.000    2.247    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.287    0.000    0.864    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.709    0.709 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.030    0.030 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
