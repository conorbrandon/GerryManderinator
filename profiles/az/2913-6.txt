         4157879672 function calls (4157757633 primitive calls) in 1514.647 seconds
        1   11.652   11.652 1513.838 1513.838 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    4.813    0.000 1502.086    0.149 GerrymanderingMCMC.py:235(recombination_of_districts)
   303912    2.058    0.000  878.728    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1215648    1.416    0.000  615.950    0.001 GerrymanderingMCMC.py:190(__district_size)
220281940  122.860    0.000  503.684    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10101   10.034    0.001  302.423    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.039    0.000   40.284    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.058    0.000   38.862    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   12.854    0.001   38.734    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.095    0.000   26.587    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.167    0.000   14.270    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.094    0.000    2.298    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.270    0.000    0.847    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.776    0.776 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
