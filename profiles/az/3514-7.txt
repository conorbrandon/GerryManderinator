         5164413955 function calls (5164291916 primitive calls) in 1884.068 seconds
        1   12.410   12.410 1883.333 1883.333 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    6.562    0.001 1870.852    0.185 GerrymanderingMCMC.py:235(recombination_of_districts)
   391032    2.725    0.000 1235.964    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1564128    1.871    0.000  870.087    0.001 GerrymanderingMCMC.py:190(__district_size)
306244806  175.145    0.000  712.212    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10101   10.177    0.001  307.237    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.042    0.000   41.149    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.060    0.000   39.719    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.391    0.001   39.589    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.109    0.000   27.171    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.229    0.000   14.667    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.098    0.000    2.296    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.288    0.000    0.865    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.702    0.702 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
