         4724088217 function calls (4723966178 primitive calls) in 1708.999 seconds
        1   11.241   11.241 1708.298 1708.298 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.687    0.001 1697.027    0.168 GerrymanderingMCMC.py:235(recombination_of_districts)
   350555    2.467    0.000 1068.931    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1402220    1.671    0.000  750.067    0.001 GerrymanderingMCMC.py:190(__district_size)
268440718  150.066    0.000  612.794    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10101   10.148    0.001  306.337    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.041    0.000   41.025    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.058    0.000   39.612    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.275    0.001   39.489    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.097    0.000   27.039    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.174    0.000   14.500    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.093    0.000    2.270    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.286    0.000    0.874    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.669    0.669 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
