         4639971471 function calls (4639849432 primitive calls) in 1686.769 seconds
        1   11.503   11.503 1686.028 1686.028 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.682    0.001 1674.495    0.166 GerrymanderingMCMC.py:235(recombination_of_districts)
   351505    2.457    0.000 1047.705    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1406020    1.679    0.000  736.395    0.001 GerrymanderingMCMC.py:190(__district_size)
261633270  146.600    0.000  603.599    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10101    9.877    0.001  304.087    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.042    0.000   40.628    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.063    0.000   39.192    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.116    0.001   39.065    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.096    0.000   26.909    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.157    0.000   14.418    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.092    0.000    2.257    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.278    0.000    0.844    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.709    0.709 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
