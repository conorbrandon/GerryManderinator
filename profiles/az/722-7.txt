         4837976834 function calls (4837854795 primitive calls) in 1762.960 seconds
        1   11.070   11.070 1762.253 1762.253 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.928    0.001 1751.155    0.173 GerrymanderingMCMC.py:235(recombination_of_districts)
   372120    2.582    0.000 1122.385    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1488480    1.902    0.000  784.539    0.001 GerrymanderingMCMC.py:190(__district_size)
278788760  158.579    0.000  644.043    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   10.087    0.001  304.789    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.039    0.000   40.980    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.056    0.000   39.574    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.021    0.001   39.455    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.090    0.000   27.063    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.149    0.000   14.532    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.091    0.000    2.197    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.307    0.000    0.895    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.670    0.670 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.033    0.033 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.033    0.033 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.009    0.009 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
