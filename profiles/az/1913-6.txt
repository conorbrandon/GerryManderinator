         5091897064 function calls (5091775025 primitive calls) in 1832.164 seconds
        1   11.723   11.723 1831.384 1831.384 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    6.289    0.001 1819.619    0.180 GerrymanderingMCMC.py:235(recombination_of_districts)
   390159    2.714    0.000 1187.393    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1560636    1.927    0.000  835.514    0.001 GerrymanderingMCMC.py:190(__district_size)
299663112  168.569    0.000  685.172    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   10.124    0.001  308.164    0.031 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.041    0.000   40.626    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.059    0.000   39.175    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.154    0.001   39.048    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.096    0.000   26.855    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.258    0.000   14.554    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.094    0.000    2.295    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.295    0.000    0.873    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.748    0.748 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
