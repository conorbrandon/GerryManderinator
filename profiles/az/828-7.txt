         4882032732 function calls (4881910693 primitive calls) in 1749.748 seconds
        1   10.925   10.925 1749.049 1749.049 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.883    0.001 1738.091    0.172 GerrymanderingMCMC.py:235(recombination_of_districts)
   363471    2.572    0.000 1119.267    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1453884    1.715    0.000  790.111    0.001 GerrymanderingMCMC.py:190(__district_size)
282256048  159.024    0.000  649.423    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10101    9.838    0.001  300.595    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.040    0.000   40.817    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.055    0.000   39.431    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.219    0.001   39.314    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.100    0.000   26.944    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.186    0.000   14.326    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.087    0.000    2.223    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.275    0.000    0.882    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.667    0.667 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
