         5280870395 function calls (5280748356 primitive calls) in 1888.682 seconds
        1   11.349   11.349 1887.980 1887.980 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    6.561    0.001 1876.585    0.186 GerrymanderingMCMC.py:235(recombination_of_districts)
   408878    2.765    0.000 1256.715    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1635512    1.922    0.000  885.453    0.001 GerrymanderingMCMC.py:190(__district_size)
317005878  176.024    0.000  727.245    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10102    9.829    0.001  299.548    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.042    0.000   40.409    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.060    0.000   38.981    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.065    0.001   38.858    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.094    0.000   26.848    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.183    0.000   14.211    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.091    0.000    2.198    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.282    0.000    0.904    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.669    0.669 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
