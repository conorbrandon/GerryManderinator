         4885494528 function calls (4885372489 primitive calls) in 1778.171 seconds
        1   11.552   11.552 1777.329 1777.329 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.895    0.001 1765.748    0.175 GerrymanderingMCMC.py:235(recombination_of_districts)
   368893    2.625    0.000 1138.387    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1475572    1.783    0.000  803.264    0.001 GerrymanderingMCMC.py:190(__district_size)
282621016  161.050    0.000  657.269    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10103   10.076    0.001  304.900    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.048    0.000   40.812    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.058    0.000   39.378    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.214    0.001   39.246    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.093    0.000   26.914    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.257    0.000   14.487    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.092    0.000    2.283    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.279    0.000    0.853    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.810    0.810 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.006    0.006    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
