         5437279067 function calls (5437157028 primitive calls) in 1956.358 seconds
        1   11.097   11.097 1955.621 1955.621 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    6.828    0.001 1944.483    0.193 GerrymanderingMCMC.py:235(recombination_of_districts)
   425387    3.102    0.000 1316.709    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1701548    2.050    0.000  925.665    0.001 GerrymanderingMCMC.py:190(__district_size)
329530526  184.894    0.000  757.661    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   10.011    0.001  305.063    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.041    0.000   41.061    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.057    0.000   39.609    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.018    0.001   39.488    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.091    0.000   27.140    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.202    0.000   14.537    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.092    0.000    2.250    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.282    0.000    0.883    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.702    0.702 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.006    0.006    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
