         5166354549 function calls (5166232510 primitive calls) in 1869.436 seconds
        1   11.073   11.073 1868.665 1868.665 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    6.318    0.001 1857.563    0.184 GerrymanderingMCMC.py:235(recombination_of_districts)
   400305    2.845    0.000 1227.919    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1601220    1.936    0.000  863.181    0.001 GerrymanderingMCMC.py:190(__district_size)
305773602  172.361    0.000  706.122    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10101   10.103    0.001  305.982    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.041    0.000   41.082    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.055    0.000   39.680    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.347    0.001   39.562    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.093    0.000   27.270    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.244    0.000   14.596    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.089    0.000    2.201    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.284    0.000    0.866    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.738    0.738 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.006    0.006    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
