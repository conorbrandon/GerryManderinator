         4318000344 function calls (4317878305 primitive calls) in 1563.613 seconds
        1   10.975   10.975 1562.846 1562.846 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.085    0.001 1551.840    0.154 GerrymanderingMCMC.py:235(recombination_of_districts)
   318618    2.256    0.000  932.341    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1274472    1.524    0.000  655.831    0.001 GerrymanderingMCMC.py:190(__district_size)
233684530  131.197    0.000  536.828    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10101    9.805    0.001  301.061    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.039    0.000   40.254    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.055    0.000   38.868    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.033    0.001   38.752    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.090    0.000   26.804    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.145    0.000   14.316    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.089    0.000    2.229    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.298    0.000    0.870    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.734    0.734 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
