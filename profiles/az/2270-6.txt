         4801883344 function calls (4801761305 primitive calls) in 1722.820 seconds
        1   11.248   11.248 1722.042 1722.042 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    6.007    0.001 1710.762    0.169 GerrymanderingMCMC.py:235(recombination_of_districts)
   361622    2.508    0.000 1086.309    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1446488    1.682    0.000  761.937    0.001 GerrymanderingMCMC.py:190(__district_size)
274986168  152.271    0.000  623.181    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10101    9.995    0.001  304.301    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.040    0.000   40.270    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.055    0.000   38.878    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   12.934    0.001   38.759    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.091    0.000   26.621    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.146    0.000   14.253    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.095    0.000    2.248    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.287    0.000    0.862    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.746    0.746 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
