         4140748117 function calls (4140626078 primitive calls) in 1509.884 seconds
        1   11.051   11.051 1509.107 1509.107 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    4.783    0.000 1498.025    0.148 GerrymanderingMCMC.py:235(recombination_of_districts)
   295578    2.098    0.000  871.668    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1182312    1.416    0.000  614.415    0.001 GerrymanderingMCMC.py:190(__district_size)
218273282  124.217    0.000  501.367    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10101    9.958    0.001  304.622    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.041    0.000   40.623    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.056    0.000   39.218    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.079    0.001   39.101    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.094    0.000   26.902    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.160    0.000   14.358    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.088    0.000    2.238    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.277    0.000    0.889    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.745    0.745 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.007    0.007 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
