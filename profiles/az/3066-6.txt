         4512914427 function calls (4512792388 primitive calls) in 1630.251 seconds
        1   11.123   11.123 1629.513 1629.513 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.401    0.001 1618.360    0.160 GerrymanderingMCMC.py:235(recombination_of_districts)
   333443    2.370    0.000  998.674    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1333772    1.608    0.000  701.768    0.001 GerrymanderingMCMC.py:190(__district_size)
251257480  142.146    0.000  573.935    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100    9.847    0.001  299.819    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.039    0.000   40.441    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.055    0.000   39.062    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.175    0.001   38.944    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.093    0.000   26.812    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.168    0.000   14.266    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.089    0.000    2.188    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.277    0.000    0.834    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.705    0.705 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
