         4355982813 function calls (4355860774 primitive calls) in 1586.433 seconds
        1   11.987   11.987 1585.729 1585.729 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.205    0.001 1573.713    0.156 GerrymanderingMCMC.py:235(recombination_of_districts)
   321986    2.291    0.000  945.585    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1287944    1.531    0.000  663.512    0.001 GerrymanderingMCMC.py:190(__district_size)
237306164  134.372    0.000  543.667    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   10.044    0.001  305.725    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.044    0.000   40.374    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.058    0.000   38.963    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   12.928    0.001   38.839    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.094    0.000   26.742    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.254    0.000   14.305    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.098    0.000    2.280    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.273    0.000    0.858    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.673    0.673 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
