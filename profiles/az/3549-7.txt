         4435040879 function calls (4434918840 primitive calls) in 1631.600 seconds
        1   11.182   11.182 1630.820 1630.820 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.154    0.001 1619.609    0.160 GerrymanderingMCMC.py:235(recombination_of_districts)
   330740    2.329    0.000  993.313    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1322960    1.610    0.000  698.895    0.001 GerrymanderingMCMC.py:190(__district_size)
244441036  139.496    0.000  571.852    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10101   10.027    0.001  302.525    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.040    0.000   41.053    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.056    0.000   39.646    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.187    0.001   39.527    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.092    0.000   27.062    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.202    0.000   14.372    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.092    0.000    2.233    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.297    0.000    0.857    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.747    0.747 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.006    0.006    0.030    0.030 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
