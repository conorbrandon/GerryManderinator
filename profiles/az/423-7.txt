         4659021821 function calls (4658899782 primitive calls) in 1696.573 seconds
        1   12.005   12.005 1695.804 1695.804 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.587    0.001 1683.768    0.167 GerrymanderingMCMC.py:235(recombination_of_districts)
   352960    2.524    0.000 1056.162    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1411840    1.712    0.000  742.405    0.001 GerrymanderingMCMC.py:190(__district_size)
263373464  148.858    0.000  608.556    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10101   10.198    0.001  303.485    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.043    0.000   40.753    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.060    0.000   39.334    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.139    0.001   39.189    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.094    0.000   26.822    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.170    0.000   14.385    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.110    0.000    2.342    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.280    0.000    0.862    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.736    0.736 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
