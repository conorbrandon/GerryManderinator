         4787856036 function calls (4787733997 primitive calls) in 1736.981 seconds
        1   11.689   11.689 1736.200 1736.200 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.885    0.001 1724.464    0.171 GerrymanderingMCMC.py:235(recombination_of_districts)
   364695    2.511    0.000 1094.544    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1458780    1.790    0.000  769.010    0.001 GerrymanderingMCMC.py:190(__district_size)
274151252  154.883    0.000  629.974    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100    9.837    0.001  303.267    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.042    0.000   40.994    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.059    0.000   39.542    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.293    0.001   39.413    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.094    0.000   27.038    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.164    0.000   14.329    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.098    0.000    2.276    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.282    0.000    0.862    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.755    0.755 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
