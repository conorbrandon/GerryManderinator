         5099694679 function calls (5099572640 primitive calls) in 1830.394 seconds
        1   11.503   11.503 1829.687 1829.687 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    6.164    0.001 1818.154    0.180 GerrymanderingMCMC.py:235(recombination_of_districts)
   395970    2.692    0.000 1198.544    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1583880    1.847    0.000  844.628    0.001 GerrymanderingMCMC.py:190(__district_size)
300748984  170.762    0.000  692.131    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10102    9.899    0.001  300.633    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.040    0.000   40.099    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.059    0.000   38.708    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   12.982    0.001   38.577    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.094    0.000   26.576    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.230    0.000   14.432    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.094    0.000    2.255    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.278    0.000    0.845    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.675    0.675 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
