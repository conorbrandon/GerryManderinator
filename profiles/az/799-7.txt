         5220811610 function calls (5220689571 primitive calls) in 1865.369 seconds
        1   10.980   10.980 1864.619 1864.619 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    6.457    0.001 1853.610    0.184 GerrymanderingMCMC.py:235(recombination_of_districts)
   398954    2.723    0.000 1231.419    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1595816    1.929    0.000  865.915    0.001 GerrymanderingMCMC.py:190(__district_size)
310812878  178.005    0.000  711.150    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10101    9.876    0.001  302.674    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.041    0.000   40.346    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.060    0.000   38.953    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   12.851    0.001   38.831    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.092    0.000   26.679    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.187    0.000   14.382    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.092    0.000    2.212    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.280    0.000    0.854    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.718    0.718 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
