         4841255777 function calls (4841133738 primitive calls) in 1727.262 seconds
        1   11.086   11.086 1726.541 1726.541 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.849    0.001 1715.426    0.170 GerrymanderingMCMC.py:235(recombination_of_districts)
   370697    2.491    0.000 1099.332    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1482788    1.741    0.000  773.858    0.001 GerrymanderingMCMC.py:190(__district_size)
278706990  157.678    0.000  634.929    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10101    9.864    0.001  300.703    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.039    0.000   39.912    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.055    0.000   38.509    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   12.859    0.001   38.392    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.090    0.000   26.376    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.161    0.000   14.137    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.088    0.000    2.196    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.274    0.000    0.843    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.689    0.689 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
