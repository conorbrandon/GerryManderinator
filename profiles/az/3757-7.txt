         4644874651 function calls (4644752612 primitive calls) in 1688.034 seconds
        1   11.536   11.536 1687.297 1687.297 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.650    0.001 1675.732    0.166 GerrymanderingMCMC.py:235(recombination_of_districts)
   350500    2.489    0.000 1051.925    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1402000    1.670    0.000  740.775    0.001 GerrymanderingMCMC.py:190(__district_size)
262690784  149.366    0.000  606.972    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10101    9.977    0.001  302.682    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.040    0.000   40.681    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.056    0.000   39.247    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.232    0.001   39.127    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.093    0.000   26.723    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.158    0.000   14.292    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.093    0.000    2.264    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.291    0.000    0.857    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.704    0.704 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
