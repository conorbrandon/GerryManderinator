         4568221050 function calls (4568099011 primitive calls) in 1650.279 seconds
        1   11.565   11.565 1649.504 1649.504 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.418    0.001 1637.909    0.162 GerrymanderingMCMC.py:235(recombination_of_districts)
   345681    2.424    0.000 1011.642    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1382724    1.635    0.000  710.074    0.001 GerrymanderingMCMC.py:190(__district_size)
255572826  142.043    0.000  581.792    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10101   10.046    0.001  303.299    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.041    0.000   40.463    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.057    0.000   39.054    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   12.778    0.001   38.929    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.092    0.000   26.679    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.143    0.000   14.279    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.093    0.000    2.303    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.273    0.000    0.851    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.743    0.743 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
