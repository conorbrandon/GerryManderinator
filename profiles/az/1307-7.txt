         4733761428 function calls (4733639389 primitive calls) in 1712.767 seconds
        1   11.705   11.705 1712.037 1712.037 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.724    0.001 1700.301    0.168 GerrymanderingMCMC.py:235(recombination_of_districts)
   347552    2.450    0.000 1075.353    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1390208    1.675    0.000  756.946    0.001 GerrymanderingMCMC.py:190(__district_size)
269850162  151.852    0.000  619.514    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100    9.972    0.001  303.268    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.040    0.000   40.560    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.057    0.000   39.142    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.228    0.001   39.020    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.094    0.000   26.756    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.191    0.000   14.268    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.097    0.000    2.226    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.277    0.000    0.834    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.697    0.697 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
