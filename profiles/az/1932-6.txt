         4825028200 function calls (4824906161 primitive calls) in 1741.664 seconds
        1   11.680   11.680 1740.938 1740.938 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.823    0.001 1729.228    0.171 GerrymanderingMCMC.py:235(recombination_of_districts)
   364851    2.498    0.000 1105.499    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1459404    1.762    0.000  777.332    0.001 GerrymanderingMCMC.py:190(__district_size)
277781264  158.102    0.000  637.612    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100    9.957    0.001  302.407    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.041    0.000   40.340    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.070    0.000   38.895    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.025    0.001   38.754    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.092    0.000   26.786    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.216    0.000   14.328    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.093    0.000    2.287    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.288    0.000    0.860    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.695    0.695 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
