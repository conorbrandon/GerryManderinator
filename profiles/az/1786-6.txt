         4849287479 function calls (4849165440 primitive calls) in 1750.469 seconds
        1   11.539   11.539 1749.723 1749.723 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.836    0.001 1738.153    0.172 GerrymanderingMCMC.py:235(recombination_of_districts)
   363104    2.651    0.000 1108.766    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1452416    1.691    0.000  779.757    0.001 GerrymanderingMCMC.py:190(__district_size)
279421552  156.847    0.000  639.810    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   10.405    0.001  306.533    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.048    0.000   40.693    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.059    0.000   39.252    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.211    0.001   39.123    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.096    0.000   27.013    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.186    0.000   14.331    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.101    0.000    2.311    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.284    0.000    0.849    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.713    0.713 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.007    0.007 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
