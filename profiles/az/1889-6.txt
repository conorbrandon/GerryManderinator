         4861990390 function calls (4861868351 primitive calls) in 1773.422 seconds
        1   11.745   11.745 1772.722 1772.722 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    6.015    0.001 1760.909    0.174 GerrymanderingMCMC.py:235(recombination_of_districts)
   366858    2.628    0.000 1126.395    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1467432    1.739    0.000  792.216    0.001 GerrymanderingMCMC.py:190(__district_size)
280285040  156.962    0.000  649.944    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   10.106    0.001  306.163    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.041    0.000   41.330    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.059    0.000   39.887    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.430    0.001   39.757    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.137    0.000   27.405    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.215    0.000   14.539    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.098    0.000    2.307    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.283    0.000    0.861    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.667    0.667 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
