         4757940528 function calls (4757818489 primitive calls) in 1701.943 seconds
        1   11.603   11.603 1701.134 1701.134 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.684    0.001 1689.502    0.167 GerrymanderingMCMC.py:235(recombination_of_districts)
   353465    2.435    0.000 1070.067    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1413860    1.638    0.000  753.924    0.001 GerrymanderingMCMC.py:190(__district_size)
271359412  149.727    0.000  619.403    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10101   10.011    0.001  302.083    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.040    0.000   40.501    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.056    0.000   39.104    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.095    0.001   38.984    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.097    0.000   26.695    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.164    0.000   14.275    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.094    0.000    2.244    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.278    0.000    0.844    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.776    0.776 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
