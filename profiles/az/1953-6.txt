         4822325800 function calls (4822203761 primitive calls) in 1746.003 seconds
        1   11.623   11.623 1745.250 1745.250 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.844    0.001 1733.597    0.172 GerrymanderingMCMC.py:235(recombination_of_districts)
   363552    2.477    0.000 1108.272    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1454208    1.729    0.000  780.031    0.001 GerrymanderingMCMC.py:190(__district_size)
276982498  155.808    0.000  639.311    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100    9.897    0.001  303.742    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.041    0.000   40.873    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.056    0.000   39.437    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.347    0.001   39.305    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.093    0.000   26.970    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.164    0.000   14.490    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.094    0.000    2.283    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.296    0.000    0.877    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.720    0.720 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
