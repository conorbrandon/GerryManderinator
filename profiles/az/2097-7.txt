         5305012582 function calls (5304890543 primitive calls) in 1922.497 seconds
        1   11.287   11.287 1921.767 1921.767 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    6.581    0.001 1910.442    0.189 GerrymanderingMCMC.py:235(recombination_of_districts)
   413671    2.842    0.000 1279.859    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1654684    1.995    0.000  900.619    0.001 GerrymanderingMCMC.py:190(__district_size)
318818476  181.069    0.000  737.415    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10101   10.098    0.001  307.130    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.053    0.000   40.901    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.057    0.000   39.467    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.154    0.001   39.347    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.092    0.000   27.116    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.192    0.000   14.477    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.112    0.000    2.236    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.292    0.000    0.910    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.696    0.696 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.006    0.006    0.030    0.030 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
