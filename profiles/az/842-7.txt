         5197206699 function calls (5197084660 primitive calls) in 1872.870 seconds
        1   11.116   11.116 1872.165 1872.165 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    6.435    0.001 1860.998    0.184 GerrymanderingMCMC.py:235(recombination_of_districts)
   394773    2.857    0.000 1233.861    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1579092    1.878    0.000  868.965    0.001 GerrymanderingMCMC.py:190(__district_size)
309275686  176.231    0.000  711.902    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10101    9.829    0.001  303.983    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.040    0.000   40.472    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.055    0.000   39.047    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.093    0.001   38.929    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.106    0.000   26.630    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.212    0.000   14.504    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.092    0.000    2.228    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.275    0.000    0.835    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.673    0.673 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
