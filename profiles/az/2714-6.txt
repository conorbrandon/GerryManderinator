         4930228828 function calls (4930106789 primitive calls) in 1770.848 seconds
        1   11.716   11.716 1770.157 1770.157 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    6.022    0.001 1758.412    0.174 GerrymanderingMCMC.py:235(recombination_of_districts)
   377825    2.688    0.000 1135.356    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1511300    1.797    0.000  795.494    0.001 GerrymanderingMCMC.py:190(__district_size)
286369352  160.773    0.000  650.898    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10102    9.890    0.001  300.825    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.041    0.000   40.123    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.057    0.000   38.714    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.174    0.001   38.590    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.093    0.000   26.599    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.142    0.000   14.433    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.097    0.000    2.299    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.284    0.000    0.854    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.659    0.659 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.028    0.028 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.028    0.028 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
