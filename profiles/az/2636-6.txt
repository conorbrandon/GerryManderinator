         4868548933 function calls (4868426894 primitive calls) in 1769.402 seconds
        1   12.000   12.000 1768.592 1768.592 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    6.081    0.001 1756.562    0.174 GerrymanderingMCMC.py:235(recombination_of_districts)
   376050    2.591    0.000 1125.010    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1504200    1.809    0.000  790.513    0.001 GerrymanderingMCMC.py:190(__district_size)
281059876  160.208    0.000  646.995    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10102   10.044    0.001  307.614    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.041    0.000   40.754    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.066    0.000   39.295    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.196    0.001   39.161    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.113    0.000   26.945    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.256    0.000   14.485    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.096    0.000    2.342    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.282    0.000    0.853    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.773    0.773 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.034    0.034 GerrymanderingMCMC.py:21(__init__)
        1    0.007    0.007    0.033    0.033 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.007    0.007 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
