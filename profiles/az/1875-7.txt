         4775660906 function calls (4775538867 primitive calls) in 1731.514 seconds
        1   11.032   11.032 1730.732 1730.732 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.789    0.001 1719.658    0.170 GerrymanderingMCMC.py:235(recombination_of_districts)
   360063    2.546    0.000 1093.409    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1440252    1.783    0.000  767.874    0.001 GerrymanderingMCMC.py:190(__district_size)
273590150  154.690    0.000  628.060    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   10.002    0.001  303.943    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.041    0.000   40.272    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.055    0.000   38.817    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   12.960    0.001   38.700    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.091    0.000   26.680    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.166    0.000   14.458    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.098    0.000    2.211    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.331    0.000    0.900    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.757    0.757 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.006    0.006    0.030    0.030 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
