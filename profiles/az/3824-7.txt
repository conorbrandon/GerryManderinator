         4954915046 function calls (4954793007 primitive calls) in 1806.635 seconds
        1   11.146   11.146 1805.832 1805.832 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    6.253    0.001 1794.655    0.178 GerrymanderingMCMC.py:235(recombination_of_districts)
   381382    2.672    0.000 1164.740    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1525528    1.795    0.000  822.495    0.001 GerrymanderingMCMC.py:190(__district_size)
288564454  162.310    0.000  675.323    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10101    9.974    0.001  306.580    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.040    0.000   41.015    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.055    0.000   39.614    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.400    0.001   39.497    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.093    0.000   27.230    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.215    0.000   14.498    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.091    0.000    2.284    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.289    0.000    0.865    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.771    0.771 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
