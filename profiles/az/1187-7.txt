         5146837691 function calls (5146715652 primitive calls) in 1843.680 seconds
        1   11.684   11.684 1842.962 1842.962 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    6.310    0.001 1831.182    0.181 GerrymanderingMCMC.py:235(recombination_of_districts)
   400205    2.798    0.000 1204.265    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1600820    1.889    0.000  847.755    0.001 GerrymanderingMCMC.py:190(__district_size)
304695490  171.060    0.000  696.665    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100    9.985    0.001  304.944    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.042    0.000   40.354    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.055    0.000   38.952    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.037    0.001   38.833    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.093    0.000   26.712    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.176    0.000   14.266    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.092    0.000    2.263    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.282    0.000    0.879    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.685    0.685 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
