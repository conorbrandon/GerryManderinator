         4738873380 function calls (4738751341 primitive calls) in 1716.778 seconds
        1   11.650   11.650 1716.044 1716.044 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.720    0.001 1704.357    0.169 GerrymanderingMCMC.py:235(recombination_of_districts)
   353896    2.483    0.000 1078.218    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1415584    1.661    0.000  759.757    0.001 GerrymanderingMCMC.py:190(__district_size)
270175336  153.827    0.000  621.736    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10101    9.922    0.001  302.451    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.041    0.000   40.448    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.082    0.000   39.056    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.333    0.001   38.908    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.097    0.000   26.814    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.188    0.000   14.382    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.103    0.000    2.264    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.281    0.000    0.851    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.700    0.700 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
