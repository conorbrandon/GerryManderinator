         4701971392 function calls (4701849353 primitive calls) in 1703.947 seconds
        1   11.463   11.463 1703.184 1703.184 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.703    0.001 1691.683    0.167 GerrymanderingMCMC.py:235(recombination_of_districts)
   349070    2.440    0.000 1061.864    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1396280    1.680    0.000  745.828    0.001 GerrymanderingMCMC.py:190(__district_size)
266950518  149.854    0.000  611.445    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100    9.947    0.001  302.771    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.047    0.000   40.816    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.063    0.000   39.395    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.240    0.001   39.268    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.107    0.000   26.940    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.199    0.000   14.451    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.092    0.000    2.282    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.275    0.000    0.849    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.731    0.731 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
