         4792692049 function calls (4792570010 primitive calls) in 1737.582 seconds
        1   11.963   11.963 1736.774 1736.774 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.854    0.001 1724.780    0.171 GerrymanderingMCMC.py:235(recombination_of_districts)
   370348    2.596    0.000 1099.249    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1481392    1.790    0.000  772.182    0.001 GerrymanderingMCMC.py:190(__district_size)
275090160  157.805    0.000  632.245    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10101    9.973    0.001  301.925    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.043    0.000   40.676    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.059    0.000   39.240    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.253    0.001   39.115    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.095    0.000   26.967    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.192    0.000   14.300    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.114    0.000    2.288    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.278    0.000    0.856    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.776    0.776 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
