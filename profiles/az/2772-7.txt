         4788858709 function calls (4788736670 primitive calls) in 1735.426 seconds
        1   11.030   11.030 1734.655 1734.655 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.792    0.001 1723.595    0.171 GerrymanderingMCMC.py:235(recombination_of_districts)
   364261    2.501    0.000 1096.836    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1457044    1.755    0.000  773.132    0.001 GerrymanderingMCMC.py:190(__district_size)
274471772  155.001    0.000  632.726    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10103   10.100    0.001  305.425    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.039    0.000   40.760    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.055    0.000   39.332    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.194    0.001   39.215    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.090    0.000   26.955    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.164    0.000   14.356    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.098    0.000    2.217    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.280    0.000    0.857    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.738    0.738 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.006    0.006    0.030    0.030 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
