         4718473666 function calls (4718351627 primitive calls) in 1712.879 seconds
        1   11.333   11.333 1712.055 1712.055 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.689    0.001 1700.690    0.168 GerrymanderingMCMC.py:235(recombination_of_districts)
   352980    2.474    0.000 1071.739    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1411920    1.671    0.000  754.647    0.001 GerrymanderingMCMC.py:190(__district_size)
268298324  151.903    0.000  618.828    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10101   10.146    0.001  306.776    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.053    0.000   40.437    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.057    0.000   39.027    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.121    0.001   38.893    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.092    0.000   26.816    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.183    0.000   14.394    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.094    0.000    2.241    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.302    0.000    0.862    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.756    0.756 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.064    0.064 GerrymanderingMCMC.py:21(__init__)
        1    0.030    0.030    0.064    0.064 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.017    0.017 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
