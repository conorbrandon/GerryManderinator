         4686114135 function calls (4685992096 primitive calls) in 1703.375 seconds
        1   12.433   12.433 1702.638 1702.638 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.761    0.001 1690.172    0.167 GerrymanderingMCMC.py:235(recombination_of_districts)
   353875    2.474    0.000 1055.144    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1415500    1.690    0.000  740.487    0.001 GerrymanderingMCMC.py:190(__district_size)
265067298  149.531    0.000  607.436    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10101   10.313    0.001  307.998    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.042    0.000   40.679    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.059    0.000   39.236    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.068    0.001   39.110    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.101    0.000   26.826    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.238    0.000   14.575    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.094    0.000    2.305    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.276    0.000    0.849    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.705    0.705 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
