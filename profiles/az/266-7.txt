         4756077598 function calls (4755955559 primitive calls) in 1705.678 seconds
        1   10.890   10.890 1704.950 1704.950 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.681    0.001 1694.010    0.168 GerrymanderingMCMC.py:235(recombination_of_districts)
   349238    2.544    0.000 1076.598    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1396952    1.673    0.000  757.090    0.001 GerrymanderingMCMC.py:190(__district_size)
271173768  150.473    0.000  621.053    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10101    9.990    0.001  299.913    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.039    0.000   40.364    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.056    0.000   38.961    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   12.930    0.001   38.843    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.090    0.000   26.755    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.161    0.000   14.386    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.090    0.000    2.244    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.276    0.000    0.848    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.696    0.696 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
