         5267205503 function calls (5267083464 primitive calls) in 1882.567 seconds
        1   10.849   10.849 1881.867 1881.867 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    6.467    0.001 1870.989    0.185 GerrymanderingMCMC.py:235(recombination_of_districts)
   408187    2.743    0.000 1249.995    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1632748    1.984    0.000  879.816    0.001 GerrymanderingMCMC.py:190(__district_size)
315728132  176.737    0.000  721.473    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10101    9.841    0.001  302.089    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.039    0.000   40.350    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.055    0.000   38.967    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.116    0.001   38.849    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.090    0.000   26.718    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.186    0.000   14.276    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.093    0.000    2.181    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.295    0.000    0.880    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.668    0.668 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
