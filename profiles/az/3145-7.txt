         4560843995 function calls (4560721956 primitive calls) in 1631.859 seconds
        1   10.935   10.935 1631.117 1631.117 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.386    0.001 1620.154    0.160 GerrymanderingMCMC.py:235(recombination_of_districts)
   338067    2.331    0.000 1002.563    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1352268    1.602    0.000  704.580    0.001 GerrymanderingMCMC.py:190(__district_size)
254925864  142.674    0.000  577.730    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10101    9.747    0.001  299.976    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.039    0.000   40.248    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.055    0.000   38.883    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.132    0.001   38.768    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.090    0.000   26.734    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.225    0.000   14.257    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.092    0.000    2.185    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.278    0.000    0.900    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.710    0.710 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
