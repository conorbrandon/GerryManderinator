         4267599957 function calls (4267477918 primitive calls) in 1533.362 seconds
        1   10.876   10.876 1532.621 1532.621 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.031    0.000 1521.716    0.151 GerrymanderingMCMC.py:235(recombination_of_districts)
   306625    2.186    0.000  907.589    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1226500    1.443    0.000  638.067    0.001 GerrymanderingMCMC.py:190(__district_size)
229522488  127.798    0.000  522.402    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10101    9.889    0.001  298.706    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.039    0.000   40.254    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.055    0.000   38.863    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   12.906    0.001   38.746    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.090    0.000   26.632    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.161    0.000   14.252    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.100    0.000    2.255    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.277    0.000    0.838    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.709    0.709 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
