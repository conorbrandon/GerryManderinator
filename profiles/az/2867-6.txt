         4773761095 function calls (4773639056 primitive calls) in 1740.220 seconds
        1   11.303   11.303 1739.515 1739.515 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.748    0.001 1728.180    0.171 GerrymanderingMCMC.py:235(recombination_of_districts)
   358051    2.493    0.000 1104.492    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1432204    1.710    0.000  777.538    0.001 GerrymanderingMCMC.py:190(__district_size)
273244924  157.314    0.000  637.873    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100    9.892    0.001  300.850    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.040    0.000   40.873    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.057    0.000   39.464    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.376    0.001   39.342    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.094    0.000   27.199    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.246    0.000   14.620    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.092    0.000    2.248    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.292    0.000    0.898    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.672    0.672 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.006    0.006    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
