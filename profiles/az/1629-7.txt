         4796995649 function calls (4796873610 primitive calls) in 1708.885 seconds
        1   10.838   10.838 1708.145 1708.145 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.740    0.001 1697.278    0.168 GerrymanderingMCMC.py:235(recombination_of_districts)
   361260    2.478    0.000 1080.518    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1445040    1.669    0.000  760.145    0.001 GerrymanderingMCMC.py:190(__district_size)
275287454  151.496    0.000  623.108    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10101    9.772    0.001  300.176    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.039    0.000   39.521    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.056    0.000   38.131    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   12.780    0.001   38.013    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.090    0.000   26.176    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.135    0.000   14.127    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.087    0.000    2.174    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.272    0.000    0.838    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.708    0.708 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
