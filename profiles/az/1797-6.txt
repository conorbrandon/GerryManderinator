         4827937615 function calls (4827815576 primitive calls) in 1754.511 seconds
        1   11.801   11.801 1753.692 1753.692 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.844    0.001 1741.860    0.172 GerrymanderingMCMC.py:235(recombination_of_districts)
   360859    2.496    0.000 1110.963    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1443436    1.707    0.000  782.044    0.001 GerrymanderingMCMC.py:190(__district_size)
277567232  157.091    0.000  641.529    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10104   10.045    0.001  306.176    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.041    0.000   41.005    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.060    0.000   39.578    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.317    0.001   39.450    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.096    0.000   27.089    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.176    0.000   14.413    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.096    0.000    2.294    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.284    0.000    0.867    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.787    0.787 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
