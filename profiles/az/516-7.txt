         4797306686 function calls (4797184647 primitive calls) in 1742.453 seconds
        1   11.752   11.752 1741.708 1741.708 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.850    0.001 1729.923    0.171 GerrymanderingMCMC.py:235(recombination_of_districts)
   352449    2.498    0.000 1098.518    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1409796    1.722    0.000  770.819    0.001 GerrymanderingMCMC.py:190(__district_size)
274704248  156.827    0.000  630.062    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10102   10.127    0.001  305.615    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.041    0.000   40.600    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.059    0.000   39.148    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.117    0.001   39.020    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.098    0.000   26.946    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.201    0.000   14.521    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.096    0.000    2.355    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.291    0.000    0.862    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.712    0.712 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.006    0.006    0.030    0.030 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
