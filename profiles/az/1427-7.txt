         4661166078 function calls (4661044039 primitive calls) in 1688.409 seconds
        1   11.517   11.517 1687.674 1687.674 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.576    0.001 1676.126    0.166 GerrymanderingMCMC.py:235(recombination_of_districts)
   347068    2.437    0.000 1046.923    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1388272    1.678    0.000  735.219    0.001 GerrymanderingMCMC.py:190(__district_size)
263287550  147.613    0.000  601.029    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   10.055    0.001  304.054    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.040    0.000   40.661    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.056    0.000   39.244    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.213    0.001   39.123    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.093    0.000   26.763    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.161    0.000   14.390    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.093    0.000    2.259    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.273    0.000    0.858    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.707    0.707 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
