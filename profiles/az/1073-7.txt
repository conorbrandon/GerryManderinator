         4612006808 function calls (4611884769 primitive calls) in 1654.772 seconds
        1   11.460   11.460 1654.066 1654.066 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.543    0.001 1642.574    0.163 GerrymanderingMCMC.py:235(recombination_of_districts)
   337981    2.288    0.000 1023.649    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1351924    1.569    0.000  720.714    0.001 GerrymanderingMCMC.py:190(__district_size)
259199684  140.883    0.000  591.420    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10102    9.742    0.001  298.639    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.040    0.000   40.365    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.055    0.000   38.973    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   12.873    0.001   38.854    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.093    0.000   26.698    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.111    0.000   14.189    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.109    0.000    2.228    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.274    0.000    0.886    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.673    0.673 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
