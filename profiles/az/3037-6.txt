         4528962839 function calls (4528840800 primitive calls) in 1635.582 seconds
        1   10.920   10.920 1634.854 1634.854 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.502    0.001 1623.905    0.161 GerrymanderingMCMC.py:235(recombination_of_districts)
   342861    2.462    0.000 1000.452    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1371444    1.666    0.000  701.113    0.001 GerrymanderingMCMC.py:190(__district_size)
252193504  139.426    0.000  573.678    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100    9.887    0.001  303.666    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.039    0.000   39.911    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.055    0.000   38.529    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   12.820    0.001   38.412    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.093    0.000   26.447    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.112    0.000   14.265    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.090    0.000    2.201    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.269    0.000    0.843    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.705    0.705 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
