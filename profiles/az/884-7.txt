         4995743866 function calls (4995621827 primitive calls) in 1788.018 seconds
        1   11.392   11.392 1787.245 1787.245 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    6.040    0.001 1775.785    0.176 GerrymanderingMCMC.py:235(recombination_of_districts)
   378326    2.683    0.000 1153.827    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1513304    1.795    0.000  810.226    0.001 GerrymanderingMCMC.py:190(__district_size)
291790308  164.543    0.000  662.803    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10101   10.000    0.001  301.452    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.040    0.000   40.119    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.071    0.000   38.679    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   12.878    0.001   38.542    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.094    0.000   26.557    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.156    0.000   14.286    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.096    0.000    2.264    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.272    0.000    0.847    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.740    0.740 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
