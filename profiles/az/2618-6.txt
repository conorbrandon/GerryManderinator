         4791575170 function calls (4791453131 primitive calls) in 1745.399 seconds
        1   11.539   11.539 1744.660 1744.660 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.802    0.001 1733.089    0.172 GerrymanderingMCMC.py:235(recombination_of_districts)
   359339    2.576    0.000 1102.070    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1437356    1.760    0.000  773.721    0.001 GerrymanderingMCMC.py:190(__district_size)
274188348  156.286    0.000  635.523    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   10.097    0.001  307.788    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.041    0.000   40.806    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.059    0.000   39.385    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.145    0.001   39.263    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.093    0.000   26.981    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.221    0.000   14.634    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.093    0.000    2.252    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.276    0.000    0.865    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.707    0.707 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
