         4643442708 function calls (4643320669 primitive calls) in 1680.742 seconds
        1   11.308   11.308 1679.492 1679.492 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.588    0.001 1668.150    0.165 GerrymanderingMCMC.py:235(recombination_of_districts)
   350490    2.411    0.000 1043.494    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1401960    1.661    0.000  731.921    0.001 GerrymanderingMCMC.py:190(__district_size)
261405828  148.072    0.000  599.575    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10102    9.896    0.001  303.407    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.042    0.000   40.376    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.069    0.000   38.950    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.074    0.001   38.804    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.091    0.000   26.766    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.167    0.000   14.489    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.090    0.000    2.221    0.000 GerrymanderingMCMC.py:157(__random_district_label)
        1    0.000    0.000    1.178    1.178 GerrymanderingMCMC.py:1(<module>)
    10100    0.304    0.000    0.877    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.069    0.069 GerrymanderingMCMC.py:21(__init__)
        1    0.006    0.006    0.069    0.069 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.019    0.019 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
