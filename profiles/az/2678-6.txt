         4574140253 function calls (4574018214 primitive calls) in 1653.985 seconds
        1   11.291   11.291 1653.165 1653.165 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.454    0.001 1641.813    0.163 GerrymanderingMCMC.py:235(recombination_of_districts)
   348880    2.468    0.000 1017.846    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1395520    1.660    0.000  716.720    0.001 GerrymanderingMCMC.py:190(__district_size)
255822338  145.074    0.000  587.197    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10101    9.772    0.001  302.538    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.041    0.000   40.420    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.056    0.000   39.022    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   12.933    0.001   38.900    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.092    0.000   26.698    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.189    0.000   14.402    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.092    0.000    2.270    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.282    0.000    0.854    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.787    0.787 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
