         4976796850 function calls (4976674811 primitive calls) in 1784.221 seconds
        1   10.976   10.976 1783.516 1783.516 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    6.050    0.001 1772.512    0.175 GerrymanderingMCMC.py:235(recombination_of_districts)
   384615    2.674    0.000 1158.089    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1538460    1.820    0.000  814.635    0.001 GerrymanderingMCMC.py:190(__district_size)
291260898  166.079    0.000  665.719    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10101    9.824    0.001  295.637    0.029 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.040    0.000   40.431    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.064    0.000   39.038    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.096    0.001   38.913    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.093    0.000   26.661    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.167    0.000   14.195    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.087    0.000    2.172    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.274    0.000    0.845    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.673    0.673 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
