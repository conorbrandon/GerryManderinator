         4798309656 function calls (4798187617 primitive calls) in 1736.899 seconds
        1   11.165   11.165 1736.198 1736.198 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.840    0.001 1725.003    0.171 GerrymanderingMCMC.py:235(recombination_of_districts)
   364408    2.627    0.000 1096.379    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1457632    1.709    0.000  769.958    0.001 GerrymanderingMCMC.py:190(__district_size)
274622516  157.203    0.000  631.127    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10103    9.990    0.001  306.140    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.040    0.000   41.121    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.057    0.000   39.714    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.314    0.001   39.592    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.092    0.000   27.179    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.196    0.000   14.564    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.091    0.000    2.250    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.293    0.000    0.912    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.668    0.668 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
