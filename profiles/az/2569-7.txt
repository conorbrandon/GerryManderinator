         4661344795 function calls (4661222756 primitive calls) in 1699.952 seconds
        1   11.837   11.837 1699.183 1699.183 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.617    0.001 1687.312    0.167 GerrymanderingMCMC.py:235(recombination_of_districts)
   343160    2.407    0.000 1061.545    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1372640    1.620    0.000  748.739    0.001 GerrymanderingMCMC.py:190(__district_size)
263178526  152.079    0.000  614.319    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10102    9.977    0.001  303.519    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.042    0.000   40.919    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.057    0.000   39.481    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.390    0.001   39.357    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.097    0.000   27.085    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.230    0.000   14.544    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.093    0.000    2.301    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.279    0.000    0.842    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.736    0.736 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
