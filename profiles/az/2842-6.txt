         5289856130 function calls (5289734091 primitive calls) in 1896.215 seconds
        1   11.152   11.152 1895.514 1895.514 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    6.513    0.001 1884.333    0.187 GerrymanderingMCMC.py:235(recombination_of_districts)
   402993    2.773    0.000 1253.140    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1611972    1.883    0.000  881.293    0.001 GerrymanderingMCMC.py:190(__district_size)
316560264  179.858    0.000  720.668    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10102   10.155    0.001  307.834    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.040    0.000   40.362    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.054    0.000   38.956    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.012    0.001   38.840    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.094    0.000   26.819    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.151    0.000   14.448    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.093    0.000    2.203    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.279    0.000    0.863    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.669    0.669 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
