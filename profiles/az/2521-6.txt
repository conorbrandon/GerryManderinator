         4679775247 function calls (4679653208 primitive calls) in 1684.678 seconds
        1   11.261   11.261 1683.903 1683.903 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.646    0.001 1672.612    0.166 GerrymanderingMCMC.py:235(recombination_of_districts)
   350524    2.487    0.000 1049.963    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1402096    1.650    0.000  737.570    0.001 GerrymanderingMCMC.py:190(__district_size)
264375864  147.999    0.000  605.149    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100    9.720    0.001  302.943    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.039    0.000   40.079    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.057    0.000   38.666    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   12.879    0.001   38.547    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.092    0.000   26.553    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.182    0.000   14.441    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.092    0.000    2.247    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.293    0.000    0.885    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.742    0.742 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.006    0.006    0.030    0.030 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
