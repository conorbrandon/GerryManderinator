         4650026977 function calls (4649904938 primitive calls) in 1693.659 seconds
        1   11.077   11.077 1692.910 1692.910 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.652    0.001 1681.778    0.167 GerrymanderingMCMC.py:235(recombination_of_districts)
   347964    2.411    0.000 1057.675    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1391856    1.697    0.000  746.369    0.001 GerrymanderingMCMC.py:190(__district_size)
262576420  149.111    0.000  612.322    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10101    9.785    0.001  302.337    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.039    0.000   41.033    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.055    0.000   39.647    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.216    0.001   39.529    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.095    0.000   27.104    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.171    0.000   14.426    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.089    0.000    2.203    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.284    0.000    0.877    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.716    0.716 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.006    0.006    0.030    0.030 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
