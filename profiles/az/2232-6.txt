         4769009851 function calls (4768887812 primitive calls) in 1734.501 seconds
        1   11.195   11.195 1733.793 1733.793 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.807    0.001 1722.562    0.171 GerrymanderingMCMC.py:235(recombination_of_districts)
   352216    2.579    0.000 1095.114    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1408864    1.671    0.000  771.831    0.001 GerrymanderingMCMC.py:190(__district_size)
272366586  152.490    0.000  630.622    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10102   10.044    0.001  304.300    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.041    0.000   40.917    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.056    0.000   39.487    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.212    0.001   39.369    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.108    0.000   27.038    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.174    0.000   14.520    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.090    0.000    2.246    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.293    0.000    0.869    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.675    0.675 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
