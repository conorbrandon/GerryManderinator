         4190504969 function calls (4190382930 primitive calls) in 1530.410 seconds
        1   11.595   11.595 1529.612 1529.612 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    4.848    0.000 1517.983    0.150 GerrymanderingMCMC.py:235(recombination_of_districts)
   303564    2.142    0.000  894.613    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1214256    1.488    0.000  629.433    0.001 GerrymanderingMCMC.py:190(__district_size)
223278070  126.601    0.000  514.282    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10102    9.969    0.001  300.677    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.043    0.000   40.664    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.059    0.000   39.251    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.296    0.001   39.124    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.106    0.000   27.042    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.169    0.000   14.325    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.096    0.000    2.292    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.280    0.000    0.839    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.764    0.764 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
