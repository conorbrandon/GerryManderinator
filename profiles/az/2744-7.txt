         5089949656 function calls (5089827617 primitive calls) in 1848.190 seconds
        1   11.772   11.772 1847.419 1847.419 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    6.214    0.001 1835.615    0.182 GerrymanderingMCMC.py:235(recombination_of_districts)
   384098    2.750    0.000 1207.012    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1536392    1.817    0.000  850.276    0.001 GerrymanderingMCMC.py:190(__district_size)
300243112  167.954    0.000  696.682    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10104   10.109    0.001  304.134    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.049    0.000   41.010    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.057    0.000   39.577    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.178    0.001   39.454    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.095    0.000   27.184    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.217    0.000   14.435    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.089    0.000    2.220    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.278    0.000    0.844    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.737    0.737 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.006    0.006    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
