         4832589996 function calls (4832467957 primitive calls) in 1733.058 seconds
        1   11.841   11.841 1732.218 1732.218 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.764    0.001 1720.323    0.170 GerrymanderingMCMC.py:235(recombination_of_districts)
   371432    2.530    0.000 1093.625    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1485728    1.875    0.000  768.506    0.001 GerrymanderingMCMC.py:190(__district_size)
277661846  152.241    0.000  629.745    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   10.055    0.001  303.680    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.041    0.000   40.131    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.057    0.000   38.650    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   12.906    0.001   38.529    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.120    0.000   26.624    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.176    0.000   14.262    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.093    0.000    2.257    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.280    0.000    0.854    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.808    0.808 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
