         5223463529 function calls (5223341490 primitive calls) in 1894.126 seconds
        1   11.277   11.277 1893.423 1893.423 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    6.474    0.001 1882.098    0.186 GerrymanderingMCMC.py:235(recombination_of_districts)
   406761    2.913    0.000 1256.323    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1627044    1.957    0.000  881.427    0.001 GerrymanderingMCMC.py:190(__district_size)
312017096  177.340    0.000  722.215    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10101   10.107    0.001  302.452    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.043    0.000   40.746    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.058    0.000   39.296    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.014    0.001   39.172    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.099    0.000   27.233    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.149    0.000   14.488    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.090    0.000    2.249    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.281    0.000    0.905    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.670    0.670 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.006    0.006    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
