         4518436434 function calls (4518314395 primitive calls) in 1634.313 seconds
        1   10.919   10.919 1633.610 1633.610 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.263    0.001 1622.644    0.161 GerrymanderingMCMC.py:235(recombination_of_districts)
   336290    2.426    0.000 1003.830    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1345160    1.569    0.000  705.056    0.001 GerrymanderingMCMC.py:190(__district_size)
250894060  141.268    0.000  577.227    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10101    9.884    0.001  301.366    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.040    0.000   39.914    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.054    0.000   38.541    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   12.889    0.001   38.424    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.093    0.000   26.465    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.163    0.000   14.401    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.101    0.000    2.206    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.288    0.000    0.849    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.671    0.671 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
