         4561128706 function calls (4561006667 primitive calls) in 1643.743 seconds
        1   11.229   11.229 1643.027 1643.027 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.458    0.001 1631.769    0.162 GerrymanderingMCMC.py:235(recombination_of_districts)
   344335    2.391    0.000 1010.847    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1377340    1.613    0.000  710.639    0.001 GerrymanderingMCMC.py:190(__district_size)
254705734  141.629    0.000  581.099    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   10.078    0.001  302.568    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.040    0.000   40.299    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.057    0.000   38.900    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.218    0.001   38.775    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.096    0.000   26.720    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.186    0.000   14.297    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.095    0.000    2.262    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.279    0.000    0.850    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.684    0.684 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
