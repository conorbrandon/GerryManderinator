         5073597783 function calls (5073475744 primitive calls) in 1822.959 seconds
        1   11.167   11.167 1822.226 1822.226 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    6.274    0.001 1811.027    0.179 GerrymanderingMCMC.py:235(recombination_of_districts)
   384850    2.700    0.000 1190.713    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1539400    1.826    0.000  836.972    0.001 GerrymanderingMCMC.py:190(__district_size)
299005852  166.401    0.000  687.223    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100    9.745    0.001  300.983    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.039    0.000   40.484    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.059    0.000   39.070    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.395    0.001   38.947    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.094    0.000   26.815    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.163    0.000   14.384    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.096    0.000    2.308    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.288    0.000    0.875    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.700    0.700 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.006    0.006    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
