         4557799515 function calls (4557677476 primitive calls) in 1648.278 seconds
        1   11.155   11.155 1647.571 1647.571 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.371    0.001 1636.388    0.162 GerrymanderingMCMC.py:235(recombination_of_districts)
   340470    2.363    0.000 1014.865    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1361880    1.592    0.000  712.806    0.001 GerrymanderingMCMC.py:190(__district_size)
254490954  142.563    0.000  584.255    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100    9.737    0.001  301.081    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.039    0.000   40.279    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.055    0.000   38.858    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.150    0.001   38.740    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.092    0.000   26.857    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.142    0.000   14.419    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.089    0.000    2.244    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.299    0.000    0.863    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.674    0.674 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
