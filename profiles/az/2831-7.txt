         4627010170 function calls (4626888131 primitive calls) in 1658.363 seconds
        1   11.487   11.487 1657.626 1657.626 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.499    0.001 1646.110    0.163 GerrymanderingMCMC.py:235(recombination_of_districts)
   353289    2.437    0.000 1027.523    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1413156    1.683    0.000  722.519    0.001 GerrymanderingMCMC.py:190(__district_size)
260305274  145.186    0.000  590.285    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10101    9.883    0.001  300.234    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.039    0.000   40.148    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.057    0.000   38.693    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   12.840    0.001   38.571    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.091    0.000   26.518    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.171    0.000   14.185    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.091    0.000    2.208    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.275    0.000    0.870    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.707    0.707 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
