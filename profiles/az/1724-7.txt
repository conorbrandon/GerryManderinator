         4988971971 function calls (4988849932 primitive calls) in 1785.388 seconds
        1   11.036   11.036 1784.693 1784.693 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    6.102    0.001 1773.628    0.176 GerrymanderingMCMC.py:235(recombination_of_districts)
   385311    2.666    0.000 1152.646    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1541244    1.807    0.000  809.289    0.001 GerrymanderingMCMC.py:190(__district_size)
291378772  162.066    0.000  661.821    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   10.057    0.001  302.597    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.040    0.000   40.397    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.054    0.000   39.000    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.110    0.001   38.883    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.091    0.000   26.669    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.196    0.000   14.351    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.088    0.000    2.193    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.277    0.000    0.836    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.663    0.663 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
