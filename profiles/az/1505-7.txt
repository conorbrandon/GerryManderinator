         4832269403 function calls (4832147364 primitive calls) in 1743.324 seconds
        1   11.588   11.588 1742.628 1742.628 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.859    0.001 1730.975    0.171 GerrymanderingMCMC.py:235(recombination_of_districts)
   365230    2.542    0.000 1104.629    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1460920    1.764    0.000  775.707    0.001 GerrymanderingMCMC.py:190(__district_size)
277914468  157.965    0.000  635.691    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10101   10.012    0.001  303.642    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.047    0.000   40.238    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.056    0.000   38.835    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   12.869    0.001   38.714    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.097    0.000   26.650    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.221    0.000   14.458    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.095    0.000    2.213    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.286    0.000    0.873    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.662    0.662 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
