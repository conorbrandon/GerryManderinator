         4705150727 function calls (4705028688 primitive calls) in 1701.491 seconds
        1   11.090   11.090 1700.786 1700.786 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.752    0.001 1689.664    0.167 GerrymanderingMCMC.py:235(recombination_of_districts)
   353831    2.402    0.000 1065.912    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1415324    1.647    0.000  749.439    0.001 GerrymanderingMCMC.py:190(__district_size)
267175278  149.336    0.000  614.229    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10101    9.884    0.001  302.785    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.039    0.000   40.367    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.056    0.000   38.927    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   12.912    0.001   38.807    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.090    0.000   26.811    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.160    0.000   14.422    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.095    0.000    2.224    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.309    0.000    0.893    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.673    0.673 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.006    0.006    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
