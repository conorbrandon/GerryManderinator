         4919353626 function calls (4919231587 primitive calls) in 1783.174 seconds
        1   11.406   11.406 1782.433 1782.433 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    6.022    0.001 1770.991    0.175 GerrymanderingMCMC.py:235(recombination_of_districts)
   367717    2.611    0.000 1139.735    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1470868    1.733    0.000  801.207    0.001 GerrymanderingMCMC.py:190(__district_size)
284833918  158.536    0.000  657.220    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10102   10.205    0.001  308.585    0.031 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.041    0.000   40.706    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.057    0.000   39.289    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   12.911    0.001   39.150    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.114    0.000   26.880    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.185    0.000   14.627    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.097    0.000    2.353    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.279    0.000    0.870    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.708    0.708 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
