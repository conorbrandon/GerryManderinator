         5387473713 function calls (5387351674 primitive calls) in 1933.867 seconds
        1   11.354   11.354 1933.125 1933.125 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    6.775    0.001 1921.741    0.190 GerrymanderingMCMC.py:235(recombination_of_districts)
   417713    2.889    0.000 1294.756    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1670852    2.000    0.000  911.393    0.001 GerrymanderingMCMC.py:190(__district_size)
325023792  188.099    0.000  747.477    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10101   10.007    0.001  306.279    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.041    0.000   40.260    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.057    0.000   38.829    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   12.970    0.001   38.705    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.097    0.000   26.661    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.277    0.000   14.551    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.093    0.000    2.293    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.283    0.000    0.852    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.709    0.709 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
