         4876010206 function calls (4875888167 primitive calls) in 1749.350 seconds
        1   11.906   11.906 1748.534 1748.534 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    6.050    0.001 1736.599    0.172 GerrymanderingMCMC.py:235(recombination_of_districts)
   375008    2.694    0.000 1110.673    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1500032    1.812    0.000  780.021    0.001 GerrymanderingMCMC.py:190(__district_size)
281760306  155.813    0.000  637.311    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10102   10.466    0.001  304.848    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.045    0.000   39.839    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.057    0.000   38.416    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   12.921    0.001   38.290    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.094    0.000   26.418    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.139    0.000   14.222    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.117    0.000    2.294    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.275    0.000    0.836    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.783    0.783 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.006    0.006    0.030    0.030 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
