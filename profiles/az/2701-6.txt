         5112229243 function calls (5112107204 primitive calls) in 1846.505 seconds
        1   11.445   11.445 1845.751 1845.751 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    6.298    0.001 1834.267    0.182 GerrymanderingMCMC.py:235(recombination_of_districts)
   385058    2.646    0.000 1206.355    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1540232    1.849    0.000  849.915    0.001 GerrymanderingMCMC.py:190(__district_size)
301309412  171.235    0.000  694.265    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10101   10.027    0.001  304.373    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.040    0.000   40.357    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.057    0.000   38.925    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.038    0.001   38.804    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.093    0.000   26.701    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.200    0.000   14.468    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.089    0.000    2.245    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.274    0.000    0.835    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.721    0.721 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.007    0.007 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
