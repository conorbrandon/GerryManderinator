         5309954359 function calls (5309832320 primitive calls) in 1922.234 seconds
        1   12.468   12.468 1921.460 1921.460 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    6.679    0.001 1908.960    0.189 GerrymanderingMCMC.py:235(recombination_of_districts)
   416401    2.949    0.000 1281.697    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1665604    1.985    0.000  901.001    0.001 GerrymanderingMCMC.py:190(__district_size)
319447092  179.609    0.000  736.361    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   10.048    0.001  300.640    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.041    0.000   40.731    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.060    0.000   39.257    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.261    0.001   39.129    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.099    0.000   26.946    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.212    0.000   14.359    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.096    0.000    2.322    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.281    0.000    0.846    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.742    0.742 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.006    0.006    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
