         4530476618 function calls (4530354579 primitive calls) in 1649.698 seconds
        1   11.451   11.451 1648.929 1648.929 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.340    0.001 1637.449    0.162 GerrymanderingMCMC.py:235(recombination_of_districts)
   338868    2.371    0.000 1013.025    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1355472    1.621    0.000  712.832    0.001 GerrymanderingMCMC.py:190(__district_size)
252125928  144.223    0.000  583.357    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10103    9.893    0.001  301.915    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.041    0.000   40.795    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.057    0.000   39.380    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.411    0.001   39.258    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.092    0.000   26.918    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.199    0.000   14.411    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.093    0.000    2.330    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.279    0.000    0.835    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.736    0.736 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
