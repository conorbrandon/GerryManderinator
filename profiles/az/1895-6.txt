         5173408990 function calls (5173286951 primitive calls) in 1862.246 seconds
        1   11.453   11.453 1861.478 1861.478 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    6.340    0.001 1849.993    0.183 GerrymanderingMCMC.py:235(recombination_of_districts)
   397249    2.763    0.000 1224.622    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1588996    1.873    0.000  859.962    0.001 GerrymanderingMCMC.py:190(__district_size)
307219338  170.050    0.000  704.087    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100    9.989    0.001  303.741    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.041    0.000   40.523    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.057    0.000   39.070    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   12.979    0.001   38.932    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.113    0.000   26.914    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.154    0.000   14.450    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.103    0.000    2.326    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.293    0.000    0.898    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.735    0.735 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
