         5024625311 function calls (5024503272 primitive calls) in 1801.208 seconds
        1   11.127   11.127 1800.478 1800.478 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    6.197    0.001 1789.323    0.177 GerrymanderingMCMC.py:235(recombination_of_districts)
   385057    2.708    0.000 1162.516    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1540228    1.812    0.000  815.252    0.001 GerrymanderingMCMC.py:190(__district_size)
293922814  163.740    0.000  668.225    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10102    9.996    0.001  306.195    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.040    0.000   40.711    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.055    0.000   39.292    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   12.940    0.001   39.172    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.093    0.000   26.917    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.191    0.000   14.467    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.089    0.000    2.222    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.301    0.000    0.907    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.697    0.697 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
