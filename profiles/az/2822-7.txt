         5242799074 function calls (5242677035 primitive calls) in 1874.461 seconds
        1   11.556   11.556 1873.708 1873.708 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    6.413    0.001 1862.124    0.184 GerrymanderingMCMC.py:235(recombination_of_districts)
   401037    2.750    0.000 1237.426    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1604148    1.870    0.000  872.288    0.001 GerrymanderingMCMC.py:190(__district_size)
312565122  175.152    0.000  715.030    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10101   10.038    0.001  305.274    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.040    0.000   40.140    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.056    0.000   38.715    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   12.989    0.001   38.598    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.091    0.000   26.491    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.150    0.000   14.288    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.101    0.000    2.280    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.284    0.000    0.854    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.721    0.721 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
