         4553696680 function calls (4553574641 primitive calls) in 1650.761 seconds
        1   11.559   11.559 1650.019 1650.019 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.349    0.001 1638.429    0.162 GerrymanderingMCMC.py:235(recombination_of_districts)
   339561    2.354    0.000 1010.543    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1358244    1.638    0.000  709.872    0.001 GerrymanderingMCMC.py:190(__district_size)
253693952  142.060    0.000  581.799    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10102   10.086    0.001  303.972    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.042    0.000   41.044    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.058    0.000   39.604    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.155    0.001   39.477    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.095    0.000   27.075    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.201    0.000   14.545    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.108    0.000    2.288    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.292    0.000    0.866    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.709    0.709 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.006    0.006    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
