         4500176021 function calls (4500053982 primitive calls) in 1626.773 seconds
        1   11.172   11.172 1626.016 1626.016 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.408    0.001 1614.815    0.160 GerrymanderingMCMC.py:235(recombination_of_districts)
   330140    2.307    0.000  988.607    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1320560    1.590    0.000  694.314    0.001 GerrymanderingMCMC.py:190(__district_size)
249385906  139.717    0.000  570.503    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100    9.699    0.001  303.684    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.039    0.000   40.531    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.056    0.000   39.120    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.156    0.001   39.001    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.091    0.000   26.893    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.134    0.000   14.296    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.090    0.000    2.239    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.274    0.000    0.867    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.735    0.735 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
