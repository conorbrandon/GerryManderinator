         4385780048 function calls (4385658009 primitive calls) in 1590.649 seconds
        1   11.248   11.248 1589.881 1589.881 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.112    0.001 1578.567    0.156 GerrymanderingMCMC.py:235(recombination_of_districts)
   321251    2.263    0.000  953.356    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1285004    1.523    0.000  670.623    0.001 GerrymanderingMCMC.py:190(__district_size)
239298120  137.826    0.000  550.322    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10101    9.969    0.001  304.976    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.041    0.000   40.692    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.065    0.000   39.282    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.263    0.001   39.150    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.112    0.000   27.132    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.196    0.000   14.367    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.097    0.000    2.318    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.305    0.000    0.875    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.735    0.735 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
