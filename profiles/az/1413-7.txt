         4919664012 function calls (4919541973 primitive calls) in 1759.376 seconds
        1   10.956   10.956 1758.584 1758.584 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.967    0.001 1747.601    0.173 GerrymanderingMCMC.py:235(recombination_of_districts)
   374391    2.576    0.000 1127.926    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1497564    1.752    0.000  792.089    0.001 GerrymanderingMCMC.py:190(__district_size)
286074996  159.020    0.000  649.880    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100    9.831    0.001  298.950    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.038    0.000   40.134    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.054    0.000   38.754    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   12.986    0.001   38.637    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.098    0.000   26.479    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.217    0.000   14.254    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.093    0.000    2.167    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.275    0.000    0.840    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.759    0.759 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
