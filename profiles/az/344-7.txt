         4657577893 function calls (4657455854 primitive calls) in 1682.850 seconds
        1   11.810   11.810 1682.114 1682.114 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.568    0.001 1670.275    0.165 GerrymanderingMCMC.py:235(recombination_of_districts)
   350228    2.395    0.000 1045.021    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1400912    1.685    0.000  735.835    0.001 GerrymanderingMCMC.py:190(__district_size)
263000252  147.761    0.000  602.966    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10103   10.113    0.001  303.273    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.040    0.000   40.814    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.060    0.000   39.393    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.370    0.001   39.270    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.095    0.000   26.817    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.219    0.000   14.252    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.104    0.000    2.274    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.276    0.000    0.834    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.704    0.704 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
