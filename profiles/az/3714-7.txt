         4930836116 function calls (4930714077 primitive calls) in 1784.899 seconds
        1   11.586   11.586 1784.151 1784.151 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    6.016    0.001 1772.514    0.175 GerrymanderingMCMC.py:235(recombination_of_districts)
   380577    2.683    0.000 1143.071    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1522308    1.881    0.000  803.840    0.001 GerrymanderingMCMC.py:190(__district_size)
286130606  163.436    0.000  657.679    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   10.004    0.001  305.720    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.041    0.000   40.688    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.057    0.000   39.240    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.270    0.001   39.118    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.094    0.000   26.859    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.188    0.000   14.428    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.100    0.000    2.287    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.283    0.000    0.879    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.711    0.711 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
