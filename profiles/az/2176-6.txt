         5244578134 function calls (5244456095 primitive calls) in 1879.642 seconds
        1   11.360   11.360 1878.887 1878.887 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    6.443    0.001 1867.497    0.185 GerrymanderingMCMC.py:235(recombination_of_districts)
   398395    2.767    0.000 1240.805    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1593580    1.885    0.000  873.541    0.001 GerrymanderingMCMC.py:190(__district_size)
313375444  174.918    0.000  716.747    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10101    9.869    0.001  301.265    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.042    0.000   40.841    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.056    0.000   39.370    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.237    0.001   39.250    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.092    0.000   26.935    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.247    0.000   14.460    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.091    0.000    2.230    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.282    0.000    0.853    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.722    0.722 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
