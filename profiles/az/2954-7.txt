         5213513712 function calls (5213391673 primitive calls) in 1880.727 seconds
        1   11.141   11.141 1879.987 1879.987 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    6.351    0.001 1868.817    0.185 GerrymanderingMCMC.py:235(recombination_of_districts)
   394133    2.711    0.000 1239.252    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1576532    1.908    0.000  871.657    0.001 GerrymanderingMCMC.py:190(__district_size)
310845672  175.504    0.000  714.284    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10101   10.108    0.001  306.142    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.039    0.000   40.518    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.061    0.000   39.112    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.140    0.001   38.974    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.093    0.000   26.823    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.187    0.000   14.510    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.094    0.000    2.222    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.279    0.000    0.852    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.707    0.707 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
