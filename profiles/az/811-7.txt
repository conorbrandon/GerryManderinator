         5126364302 function calls (5126242263 primitive calls) in 1858.556 seconds
        1   11.379   11.379 1857.860 1857.860 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    6.444    0.001 1846.449    0.183 GerrymanderingMCMC.py:235(recombination_of_districts)
   400150    2.878    0.000 1215.156    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1600600    1.913    0.000  855.030    0.001 GerrymanderingMCMC.py:190(__district_size)
303632622  171.367    0.000  700.215    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10101   10.143    0.001  305.795    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.058    0.000   40.895    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.059    0.000   39.417    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.258    0.001   39.291    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.094    0.000   27.088    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.183    0.000   14.453    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.094    0.000    2.287    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.281    0.000    0.851    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.664    0.664 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
