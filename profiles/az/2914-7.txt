         4720528233 function calls (4720406194 primitive calls) in 1684.940 seconds
        1   11.253   11.253 1684.196 1684.196 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.712    0.001 1672.911    0.166 GerrymanderingMCMC.py:235(recombination_of_districts)
   361856    2.435    0.000 1050.575    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1447424    1.680    0.000  737.079    0.001 GerrymanderingMCMC.py:190(__district_size)
268323476  149.517    0.000  603.718    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10102    9.981    0.001  302.477    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.041    0.000   39.972    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.057    0.000   38.568    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   12.747    0.001   38.445    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.091    0.000   26.454    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.160    0.000   14.223    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.094    0.000    2.276    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.275    0.000    0.847    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.711    0.711 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
