         4824842084 function calls (4824720045 primitive calls) in 1752.920 seconds
        1   11.978   11.978 1752.180 1752.180 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.890    0.001 1740.157    0.172 GerrymanderingMCMC.py:235(recombination_of_districts)
   365601    2.517    0.000 1108.560    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1462404    1.731    0.000  780.719    0.001 GerrymanderingMCMC.py:190(__district_size)
276692128  157.020    0.000  640.183    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10103   10.156    0.001  308.767    0.031 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.043    0.000   40.606    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.059    0.000   39.172    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.239    0.001   39.047    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.097    0.000   26.945    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.244    0.000   14.644    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.091    0.000    2.286    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.293    0.000    0.871    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.707    0.707 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
