         5273770987 function calls (5273648948 primitive calls) in 1931.445 seconds
        1   11.385   11.385 1930.703 1930.703 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    6.695    0.001 1919.262    0.190 GerrymanderingMCMC.py:235(recombination_of_districts)
   409875    2.939    0.000 1286.777    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1639500    1.998    0.000  906.465    0.001 GerrymanderingMCMC.py:190(__district_size)
315669714  183.358    0.000  745.701    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10101   10.153    0.001  306.965    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.041    0.000   41.783    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.075    0.000   40.348    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.527    0.001   40.210    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.095    0.000   27.586    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.209    0.000   14.728    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.094    0.000    2.300    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.302    0.000    0.908    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.709    0.709 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.006    0.006    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
