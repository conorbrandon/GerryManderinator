         4755514553 function calls (4755392514 primitive calls) in 1741.666 seconds
        1   11.242   11.242 1740.959 1740.959 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.815    0.001 1729.684    0.171 GerrymanderingMCMC.py:235(recombination_of_districts)
   359119    2.478    0.000 1096.263    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1436476    1.710    0.000  772.073    0.001 GerrymanderingMCMC.py:190(__district_size)
271254286  157.752    0.000  632.143    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   10.148    0.001  307.770    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.040    0.000   41.248    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.056    0.000   39.828    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.228    0.001   39.706    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.095    0.000   27.334    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.238    0.000   14.618    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.090    0.000    2.259    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.282    0.000    0.865    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.674    0.674 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
