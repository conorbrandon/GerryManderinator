         4924538485 function calls (4924416446 primitive calls) in 1800.080 seconds
        1   12.314   12.314 1799.379 1799.379 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    6.053    0.001 1787.036    0.177 GerrymanderingMCMC.py:235(recombination_of_districts)
   370436    2.560    0.000 1153.850    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1481744    1.835    0.000  814.418    0.001 GerrymanderingMCMC.py:190(__district_size)
285434938  164.382    0.000  668.981    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10102   10.215    0.001  307.198    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.042    0.000   40.943    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.059    0.000   39.511    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.463    0.001   39.386    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.094    0.000   27.122    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.228    0.000   14.609    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.099    0.000    2.307    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.289    0.000    0.877    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.668    0.668 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.006    0.006    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
