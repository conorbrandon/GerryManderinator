         4524003459 function calls (4523881420 primitive calls) in 1635.670 seconds
        1   10.918   10.918 1634.598 1634.598 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.311    0.001 1623.642    0.161 GerrymanderingMCMC.py:235(recombination_of_districts)
   345206    2.368    0.000 1003.437    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1380824    1.646    0.000  709.485    0.001 GerrymanderingMCMC.py:190(__district_size)
251887408  144.137    0.000  583.204    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10101    9.869    0.001  302.177    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.040    0.000   40.653    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.056    0.000   39.278    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.114    0.001   39.158    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.090    0.000   26.914    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.129    0.000   14.172    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.087    0.000    2.174    0.000 GerrymanderingMCMC.py:157(__random_district_label)
        1    0.000    0.000    1.026    1.026 GerrymanderingMCMC.py:1(<module>)
    10100    0.278    0.000    0.848    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.043    0.043 GerrymanderingMCMC.py:21(__init__)
        1    0.015    0.015    0.043    0.043 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.007    0.007 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
