         4817839550 function calls (4817717511 primitive calls) in 1728.480 seconds
        1   11.683   11.683 1727.739 1727.739 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.932    0.001 1716.009    0.170 GerrymanderingMCMC.py:235(recombination_of_districts)
   358652    2.539    0.000 1092.835    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1434608    1.778    0.000  767.674    0.001 GerrymanderingMCMC.py:190(__district_size)
276572934  156.271    0.000  629.050    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10101    9.926    0.001  302.597    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.042    0.000   40.176    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.056    0.000   38.781    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.077    0.001   38.660    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.094    0.000   26.595    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.171    0.000   14.397    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.114    0.000    2.308    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.281    0.000    0.842    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.708    0.708 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
