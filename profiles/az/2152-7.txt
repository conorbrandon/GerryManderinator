         4792045311 function calls (4791923272 primitive calls) in 1724.711 seconds
        1   10.981   10.981 1723.675 1723.675 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.764    0.001 1712.626    0.170 GerrymanderingMCMC.py:235(recombination_of_districts)
   353447    2.471    0.000 1095.034    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1413788    1.772    0.000  768.710    0.001 GerrymanderingMCMC.py:190(__district_size)
274781612  152.424    0.000  628.542    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10102   10.010    0.001  299.770    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.040    0.000   40.467    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.056    0.000   39.073    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.163    0.001   38.954    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.091    0.000   26.767    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.172    0.000   14.400    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.088    0.000    2.203    0.000 GerrymanderingMCMC.py:157(__random_district_label)
        1    0.000    0.000    0.977    0.977 GerrymanderingMCMC.py:1(<module>)
    10100    0.275    0.000    0.837    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.056    0.056 GerrymanderingMCMC.py:21(__init__)
        1    0.018    0.018    0.055    0.055 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
