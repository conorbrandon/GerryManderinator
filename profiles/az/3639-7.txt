         5209082017 function calls (5208959978 primitive calls) in 1865.714 seconds
        1   11.009   11.009 1864.974 1864.974 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    6.350    0.001 1853.935    0.184 GerrymanderingMCMC.py:235(recombination_of_districts)
   399535    2.760    0.000 1228.582    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1598140    1.853    0.000  862.450    0.001 GerrymanderingMCMC.py:190(__district_size)
310035392  175.992    0.000  707.849    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100    9.966    0.001  304.306    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.039    0.000   40.250    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.054    0.000   38.877    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.101    0.001   38.761    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.091    0.000   26.585    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.214    0.000   14.449    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.088    0.000    2.202    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.273    0.000    0.826    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.708    0.708 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
