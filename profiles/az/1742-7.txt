         4785477072 function calls (4785355033 primitive calls) in 1717.256 seconds
        1   10.885   10.885 1716.540 1716.540 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.696    0.001 1705.627    0.169 GerrymanderingMCMC.py:235(recombination_of_districts)
   358522    2.434    0.000 1088.903    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1434088    1.708    0.000  766.291    0.001 GerrymanderingMCMC.py:190(__district_size)
274189504  150.630    0.000  629.720    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10101    9.641    0.001  298.764    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.042    0.000   40.627    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.054    0.000   39.231    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.121    0.001   39.095    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.106    0.000   26.913    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.127    0.000   14.140    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.087    0.000    2.250    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.285    0.000    0.883    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.684    0.684 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
