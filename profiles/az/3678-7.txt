         4919766360 function calls (4919644321 primitive calls) in 1763.587 seconds
        1   11.024   11.024 1762.888 1762.888 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    6.032    0.001 1751.835    0.173 GerrymanderingMCMC.py:235(recombination_of_districts)
   378049    2.560    0.000 1131.731    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1512196    1.744    0.000  795.308    0.001 GerrymanderingMCMC.py:190(__district_size)
285947544  159.016    0.000  652.028    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10102    9.950    0.001  303.024    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.040    0.000   39.839    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.056    0.000   38.431    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   12.888    0.001   38.314    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.095    0.000   26.399    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.110    0.000   14.110    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.086    0.000    2.179    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.288    0.000    0.850    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.666    0.666 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.006    0.006    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
