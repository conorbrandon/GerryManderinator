         4939587273 function calls (4939465234 primitive calls) in 1765.420 seconds
        1   10.921   10.921 1764.712 1764.712 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.987    0.001 1753.746    0.174 GerrymanderingMCMC.py:235(recombination_of_districts)
   381604    2.606    0.000 1133.381    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1526416    1.819    0.000  796.606    0.001 GerrymanderingMCMC.py:190(__district_size)
287320428  160.100    0.000  652.811    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10101    9.833    0.001  301.050    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.041    0.000   39.977    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.055    0.000   38.563    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   12.751    0.001   38.447    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.100    0.000   26.501    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.141    0.000   14.182    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.089    0.000    2.172    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.286    0.000    0.856    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.675    0.675 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
