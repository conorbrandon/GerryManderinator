         5252567735 function calls (5252445696 primitive calls) in 1892.265 seconds
        1   11.371   11.371 1891.452 1891.452 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    6.591    0.001 1880.052    0.186 GerrymanderingMCMC.py:235(recombination_of_districts)
   407948    2.830    0.000 1248.684    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1631792    1.919    0.000  879.306    0.001 GerrymanderingMCMC.py:190(__district_size)
314008614  175.599    0.000  720.050    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10102   10.108    0.001  304.730    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.041    0.000   41.274    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.057    0.000   39.810    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.236    0.001   39.689    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.097    0.000   27.253    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.198    0.000   14.428    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.092    0.000    2.249    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.280    0.000    0.866    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.765    0.765 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.046    0.046 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.046    0.046 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.015    0.015 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
