         4553309423 function calls (4553187384 primitive calls) in 1656.534 seconds
        1   11.970   11.970 1655.801 1655.801 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.463    0.001 1643.793    0.163 GerrymanderingMCMC.py:235(recombination_of_districts)
   339166    2.381    0.000 1017.088    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1356664    1.634    0.000  714.053    0.001 GerrymanderingMCMC.py:190(__district_size)
254412822  142.799    0.000  584.581    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10101    9.835    0.001  302.036    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.043    0.000   40.809    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.059    0.000   39.378    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.220    0.001   39.251    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.108    0.000   26.929    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.179    0.000   14.386    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.172    0.000    2.345    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.285    0.000    0.864    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.714    0.714 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
