         4899921474 function calls (4899799435 primitive calls) in 1744.380 seconds
        1   11.236   11.236 1743.627 1743.627 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    6.010    0.001 1732.362    0.172 GerrymanderingMCMC.py:235(recombination_of_districts)
   375177    2.540    0.000 1111.169    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1500708    1.732    0.000  780.363    0.001 GerrymanderingMCMC.py:190(__district_size)
283391404  155.393    0.000  640.202    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10102    9.765    0.001  299.499    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.041    0.000   39.800    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.059    0.000   38.409    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   12.760    0.001   38.285    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.099    0.000   26.331    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.110    0.000   14.202    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.094    0.000    2.330    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.289    0.000    0.859    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.721    0.721 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
