         4824208348 function calls (4824086309 primitive calls) in 1756.352 seconds
        1   12.007   12.007 1755.617 1755.617 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.882    0.001 1743.581    0.173 GerrymanderingMCMC.py:235(recombination_of_districts)
   366043    2.529    0.000 1114.521    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1464172    1.760    0.000  784.012    0.001 GerrymanderingMCMC.py:190(__district_size)
277049942  158.532    0.000  641.295    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10102    9.951    0.001  305.075    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.042    0.000   41.070    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.057    0.000   39.577    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.498    0.001   39.456    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.094    0.000   27.024    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.270    0.000   14.559    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.096    0.000    2.270    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.282    0.000    0.861    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.726    0.726 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
