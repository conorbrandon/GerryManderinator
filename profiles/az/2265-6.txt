         4841046640 function calls (4840924601 primitive calls) in 1747.447 seconds
        1   11.769   11.769 1746.665 1746.665 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.937    0.001 1734.863    0.172 GerrymanderingMCMC.py:235(recombination_of_districts)
   365608    2.512    0.000 1104.581    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1462432    1.750    0.000  777.286    0.001 GerrymanderingMCMC.py:190(__district_size)
278616034  157.348    0.000  637.413    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   10.018    0.001  306.480    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.040    0.000   40.363    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.058    0.000   38.939    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.055    0.001   38.814    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.095    0.000   26.834    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.200    0.000   14.410    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.096    0.000    2.255    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.295    0.000    0.859    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.749    0.749 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.006    0.006    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
