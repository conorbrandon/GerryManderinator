         4925163735 function calls (4925041696 primitive calls) in 1774.285 seconds
        1   11.575   11.575 1773.579 1773.579 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    6.011    0.001 1761.945    0.174 GerrymanderingMCMC.py:235(recombination_of_districts)
   365282    2.561    0.000 1137.422    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1461128    1.743    0.000  800.546    0.001 GerrymanderingMCMC.py:190(__district_size)
286429970  162.715    0.000  655.406    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100    9.854    0.001  301.599    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.042    0.000   40.527    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.057    0.000   39.102    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.150    0.001   38.966    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.094    0.000   26.787    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.157    0.000   14.291    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.091    0.000    2.221    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.275    0.000    0.836    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.674    0.674 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
