         4923235470 function calls (4923113431 primitive calls) in 1777.011 seconds
        1   12.360   12.360 1776.234 1776.234 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.997    0.001 1763.820    0.175 GerrymanderingMCMC.py:235(recombination_of_districts)
   370978    2.593    0.000 1131.932    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1483912    1.743    0.000  794.816    0.001 GerrymanderingMCMC.py:190(__district_size)
285254916  157.026    0.000  647.924    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   10.159    0.001  308.288    0.031 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.042    0.000   40.555    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.062    0.000   39.137    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.210    0.001   39.006    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.095    0.000   26.924    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.228    0.000   14.439    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.099    0.000    2.352    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.279    0.000    0.855    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.728    0.728 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.045    0.045 GerrymanderingMCMC.py:21(__init__)
        1    0.008    0.008    0.044    0.044 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.010    0.010 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
