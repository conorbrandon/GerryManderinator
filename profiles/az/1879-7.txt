         5023000970 function calls (5022878931 primitive calls) in 1815.316 seconds
        1   11.606   11.606 1814.605 1814.605 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    6.104    0.001 1802.970    0.179 GerrymanderingMCMC.py:235(recombination_of_districts)
   377153    2.694    0.000 1175.097    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1508612    1.839    0.000  827.810    0.001 GerrymanderingMCMC.py:190(__district_size)
294148630  167.726    0.000  678.185    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10101   10.045    0.001  304.014    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.044    0.000   41.142    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.058    0.000   39.744    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.456    0.001   39.620    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.098    0.000   27.119    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.239    0.000   14.499    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.091    0.000    2.260    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.280    0.000    0.844    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.678    0.678 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.006    0.006    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
