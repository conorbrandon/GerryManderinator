         4869005507 function calls (4868883468 primitive calls) in 1776.865 seconds
        1   11.063   11.063 1775.913 1775.913 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.999    0.001 1764.815    0.175 GerrymanderingMCMC.py:235(recombination_of_districts)
   375381    2.718    0.000 1137.596    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1501524    1.818    0.000  799.763    0.001 GerrymanderingMCMC.py:190(__district_size)
281519614  162.694    0.000  654.720    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100    9.864    0.001  303.959    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.044    0.000   41.149    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.056    0.000   39.689    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.452    0.001   39.552    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.094    0.000   27.229    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.211    0.000   14.511    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.097    0.000    2.287    0.000 GerrymanderingMCMC.py:157(__random_district_label)
        1    0.000    0.000    0.880    0.880 GerrymanderingMCMC.py:1(<module>)
    10100    0.281    0.000    0.845    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.069    0.069 GerrymanderingMCMC.py:21(__init__)
        1    0.019    0.019    0.069    0.069 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.019    0.019 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
