         4729281765 function calls (4729159726 primitive calls) in 1693.107 seconds
        1   10.859   10.859 1692.393 1692.393 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.637    0.001 1681.463    0.166 GerrymanderingMCMC.py:235(recombination_of_districts)
   367514    2.614    0.000 1066.761    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1470056    1.704    0.000  749.629    0.001 GerrymanderingMCMC.py:190(__district_size)
269690550  151.727    0.000  613.054    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100    9.927    0.001  298.309    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.040    0.000   40.101    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.056    0.000   38.688    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   12.833    0.001   38.571    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.091    0.000   26.554    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.163    0.000   14.146    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.089    0.000    2.131    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.276    0.000    0.838    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.682    0.682 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
