         5024010370 function calls (5023888331 primitive calls) in 1809.038 seconds
        1   11.642   11.642 1808.307 1808.307 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    6.233    0.001 1796.612    0.178 GerrymanderingMCMC.py:235(recombination_of_districts)
   377624    2.623    0.000 1174.423    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1510496    1.857    0.000  826.059    0.001 GerrymanderingMCMC.py:190(__district_size)
293999594  169.001    0.000  676.651    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10102    9.830    0.001  302.403    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.042    0.000   40.173    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.056    0.000   38.742    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.200    0.001   38.621    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.093    0.000   26.640    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.175    0.000   14.374    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.095    0.000    2.273    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.282    0.000    0.845    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.707    0.707 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
