         5255556232 function calls (5255434193 primitive calls) in 1875.802 seconds
        1   11.340   11.340 1875.048 1875.048 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    6.562    0.001 1863.659    0.185 GerrymanderingMCMC.py:235(recombination_of_districts)
   415045    2.798    0.000 1245.092    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1660180    2.037    0.000  875.582    0.001 GerrymanderingMCMC.py:190(__district_size)
314784476  177.986    0.000  716.817    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10101    9.891    0.001  298.977    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.040    0.000   40.394    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.056    0.000   39.010    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.126    0.001   38.891    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.094    0.000   26.895    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.249    0.000   14.270    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.096    0.000    2.251    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.287    0.000    0.858    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.719    0.719 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
