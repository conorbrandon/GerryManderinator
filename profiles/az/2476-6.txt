         5407349716 function calls (5407227677 primitive calls) in 1944.407 seconds
        1   11.834   11.834 1943.665 1943.665 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    6.837    0.001 1931.800    0.191 GerrymanderingMCMC.py:235(recombination_of_districts)
   425240    2.962    0.000 1303.924    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1700960    2.068    0.000  917.204    0.001 GerrymanderingMCMC.py:190(__district_size)
327419154  186.159    0.000  750.708    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10102   10.003    0.001  304.826    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.042    0.000   40.029    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.089    0.000   38.611    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   12.952    0.001   38.456    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.094    0.000   26.512    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.186    0.000   14.339    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.091    0.000    2.234    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.279    0.000    0.841    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.709    0.709 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
