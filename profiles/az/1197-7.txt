         5527209725 function calls (5527087686 primitive calls) in 1965.923 seconds
        1   11.832   11.832 1965.158 1965.158 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    6.865    0.001 1953.296    0.193 GerrymanderingMCMC.py:235(recombination_of_districts)
   427637    2.923    0.000 1327.401    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1710548    2.007    0.000  931.972    0.001 GerrymanderingMCMC.py:190(__district_size)
337256000  187.611    0.000  763.161    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100    9.853    0.001  305.653    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.042    0.000   40.166    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.056    0.000   38.740    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.124    0.001   38.619    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.093    0.000   26.643    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.198    0.000   14.397    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.092    0.000    2.213    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.286    0.000    0.861    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.734    0.734 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
