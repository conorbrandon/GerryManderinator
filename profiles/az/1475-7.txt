         4926662288 function calls (4926540249 primitive calls) in 1767.185 seconds
        1   11.134   11.134 1766.477 1766.477 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.931    0.001 1755.269    0.174 GerrymanderingMCMC.py:235(recombination_of_districts)
   374330    2.668    0.000 1135.731    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1497320    1.757    0.000  797.735    0.001 GerrymanderingMCMC.py:190(__district_size)
285883424  160.683    0.000  653.894    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10102    9.863    0.001  301.158    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.041    0.000   40.235    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.054    0.000   38.848    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.012    0.001   38.732    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.097    0.000   26.715    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.178    0.000   14.339    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.092    0.000    2.192    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.286    0.000    0.844    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.676    0.676 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
