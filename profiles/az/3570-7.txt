         4803114240 function calls (4802992201 primitive calls) in 1727.302 seconds
        1   11.390   11.390 1726.571 1726.571 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.725    0.001 1715.153    0.170 GerrymanderingMCMC.py:235(recombination_of_districts)
   360480    2.523    0.000 1095.285    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1441920    1.708    0.000  771.324    0.001 GerrymanderingMCMC.py:190(__district_size)
275556026  154.873    0.000  632.575    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10102    9.791    0.001  300.982    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.040    0.000   40.580    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.056    0.000   39.148    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.295    0.001   39.028    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.094    0.000   26.775    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.155    0.000   14.183    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.091    0.000    2.220    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.279    0.000    0.862    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.698    0.698 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
