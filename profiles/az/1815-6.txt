         5117366488 function calls (5117244449 primitive calls) in 1856.100 seconds
        1   11.659   11.659 1855.393 1855.393 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    6.466    0.001 1843.703    0.183 GerrymanderingMCMC.py:235(recombination_of_districts)
   401513    2.740    0.000 1213.229    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1606052    1.894    0.000  851.807    0.001 GerrymanderingMCMC.py:190(__district_size)
302865390  170.892    0.000  699.221    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10103    9.863    0.001  302.034    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.041    0.000   40.676    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.058    0.000   39.217    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.310    0.001   39.082    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.093    0.000   26.954    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.201    0.000   14.478    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.097    0.000    2.248    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.277    0.000    0.868    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.674    0.674 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
