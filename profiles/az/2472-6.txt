         4708013506 function calls (4707891467 primitive calls) in 1703.887 seconds
        1   11.382   11.382 1703.116 1703.116 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.766    0.001 1691.694    0.167 GerrymanderingMCMC.py:235(recombination_of_districts)
   356546    2.474    0.000 1066.717    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1426184    1.670    0.000  751.057    0.001 GerrymanderingMCMC.py:190(__district_size)
267603034  150.273    0.000  615.533    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10104    9.824    0.001  302.859    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.063    0.000   40.846    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.057    0.000   39.383    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.279    0.001   39.262    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.093    0.000   26.996    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.194    0.000   14.314    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.098    0.000    2.343    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.298    0.000    0.873    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.736    0.736 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
