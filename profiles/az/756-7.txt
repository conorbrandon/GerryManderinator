         5202248952 function calls (5202126913 primitive calls) in 1873.989 seconds
        1   12.617   12.617 1873.254 1873.254 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    6.339    0.001 1860.602    0.184 GerrymanderingMCMC.py:235(recombination_of_districts)
   396620    2.683    0.000 1227.773    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1586480    1.890    0.000  866.271    0.001 GerrymanderingMCMC.py:190(__district_size)
309211004  174.020    0.000  711.009    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10101   10.338    0.001  307.338    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.045    0.000   40.918    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.058    0.000   39.482    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.109    0.001   39.358    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.096    0.000   26.987    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.266    0.000   14.549    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.097    0.000    2.281    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.289    0.000    0.861    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.702    0.702 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
