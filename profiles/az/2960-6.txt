         5214819466 function calls (5214697427 primitive calls) in 1886.176 seconds
        1   11.958   11.958 1885.423 1885.423 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    6.469    0.001 1873.435    0.185 GerrymanderingMCMC.py:235(recombination_of_districts)
   412442    2.927    0.000 1244.245    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1649768    2.017    0.000  875.297    0.001 GerrymanderingMCMC.py:190(__district_size)
311517394  174.408    0.000  716.571    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10101    9.865    0.001  301.078    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.040    0.000   41.135    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.059    0.000   39.640    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.357    0.001   39.516    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.096    0.000   27.098    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.223    0.000   14.339    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.106    0.000    2.275    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.278    0.000    0.854    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.719    0.719 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.031    0.031 GerrymanderingMCMC.py:21(__init__)
        1    0.006    0.006    0.030    0.030 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.007    0.007 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
