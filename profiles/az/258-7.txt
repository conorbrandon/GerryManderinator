         4765855479 function calls (4765733440 primitive calls) in 1705.494 seconds
        1   11.130   11.130 1704.694 1704.694 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.677    0.001 1693.474    0.168 GerrymanderingMCMC.py:235(recombination_of_districts)
   357311    2.474    0.000 1074.795    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1429244    1.702    0.000  756.898    0.001 GerrymanderingMCMC.py:190(__district_size)
272485422  151.683    0.000  619.444    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   10.044    0.001  299.758    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.040    0.000   40.038    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.057    0.000   38.588    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   12.969    0.001   38.465    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.094    0.000   26.529    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.157    0.000   14.169    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.095    0.000    2.269    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.271    0.000    0.827    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.767    0.767 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.006    0.006    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.007    0.007 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
