         4933876104 function calls (4933754065 primitive calls) in 1769.566 seconds
        1   11.406   11.406 1768.808 1768.808 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.985    0.001 1757.373    0.174 GerrymanderingMCMC.py:235(recombination_of_districts)
   375999    2.529    0.000 1133.424    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1503996    1.786    0.000  797.936    0.001 GerrymanderingMCMC.py:190(__district_size)
286372278  163.550    0.000  655.609    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10101   10.073    0.001  304.369    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.040    0.000   40.440    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.057    0.000   38.992    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.044    0.001   38.865    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.096    0.000   26.743    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.184    0.000   14.483    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.094    0.000    2.282    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.291    0.000    0.900    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.726    0.726 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
