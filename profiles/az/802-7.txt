         4768149117 function calls (4768027078 primitive calls) in 1741.070 seconds
        1   11.841   11.841 1740.337 1740.337 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.887    0.001 1728.464    0.171 GerrymanderingMCMC.py:235(recombination_of_districts)
   366354    2.571    0.000 1094.905    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1465416    1.794    0.000  769.345    0.001 GerrymanderingMCMC.py:190(__district_size)
272446646  155.230    0.000  630.159    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   10.236    0.001  307.971    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.042    0.000   41.093    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.060    0.000   39.645    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.366    0.001   39.496    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.097    0.000   27.144    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.264    0.000   14.572    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.100    0.000    2.332    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.279    0.000    0.853    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.700    0.700 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.006    0.006    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
