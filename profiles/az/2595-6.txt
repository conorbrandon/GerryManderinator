         5337384039 function calls (5337262000 primitive calls) in 1928.728 seconds
        1   11.775   11.775 1927.998 1927.998 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    6.645    0.001 1916.191    0.190 GerrymanderingMCMC.py:235(recombination_of_districts)
   409643    2.931    0.000 1286.210    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1638572    2.021    0.000  906.078    0.001 GerrymanderingMCMC.py:190(__district_size)
320949964  184.449    0.000  743.267    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10102   10.035    0.001  305.918    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.043    0.000   40.954    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.059    0.000   39.518    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.246    0.001   39.370    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.096    0.000   27.097    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.236    0.000   14.528    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.100    0.000    2.305    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.286    0.000    0.861    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.698    0.698 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.006    0.006    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
