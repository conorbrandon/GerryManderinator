         4758111227 function calls (4757989188 primitive calls) in 1732.657 seconds
        1   11.575   11.575 1731.912 1731.912 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.779    0.001 1720.309    0.170 GerrymanderingMCMC.py:235(recombination_of_districts)
   362840    2.547    0.000 1095.217    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1451360    1.713    0.000  768.335    0.001 GerrymanderingMCMC.py:190(__district_size)
272043284  154.101    0.000  631.170    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10103    9.859    0.001  301.210    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.043    0.000   40.705    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.058    0.000   39.217    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.115    0.001   39.093    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.093    0.000   27.010    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.147    0.000   14.315    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.093    0.000    2.287    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.290    0.000    0.867    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.712    0.712 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
