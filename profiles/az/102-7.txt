         4649833726 function calls (4649711687 primitive calls) in 1657.850 seconds
        1   10.984   10.984 1656.548 1656.548 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.534    0.001 1645.525    0.163 GerrymanderingMCMC.py:235(recombination_of_districts)
   350768    2.398    0.000 1029.115    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1403072    1.651    0.000  723.956    0.001 GerrymanderingMCMC.py:190(__district_size)
262312474  146.104    0.000  593.334    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10101    9.860    0.001  300.268    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.040    0.000   39.590    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.053    0.000   38.208    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   12.597    0.001   38.094    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.090    0.000   26.186    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.185    0.000   14.126    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.086    0.000    2.168    0.000 GerrymanderingMCMC.py:157(__random_district_label)
        1    0.000    0.000    1.235    1.235 GerrymanderingMCMC.py:1(<module>)
    10100    0.268    0.000    0.823    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.064    0.064 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.063    0.063 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.020    0.020 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
