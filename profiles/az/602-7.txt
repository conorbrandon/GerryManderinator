         4500158364 function calls (4500036325 primitive calls) in 1646.059 seconds
        1   11.030   11.030 1645.358 1645.358 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.421    0.001 1634.296    0.162 GerrymanderingMCMC.py:235(recombination_of_districts)
   331983    2.330    0.000 1005.942    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1327932    1.618    0.000  706.831    0.001 GerrymanderingMCMC.py:190(__district_size)
248873932  143.926    0.000  580.728    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   10.135    0.001  306.204    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.049    0.000   40.931    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.056    0.000   39.496    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.415    0.001   39.377    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.093    0.000   27.162    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.289    0.000   14.679    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.091    0.000    2.196    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.306    0.000    0.868    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.668    0.668 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.006    0.006    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
