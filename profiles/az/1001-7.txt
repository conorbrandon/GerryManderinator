         4898168919 function calls (4898046880 primitive calls) in 1754.366 seconds
        1   11.696   11.696 1753.634 1753.634 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.947    0.001 1741.907    0.172 GerrymanderingMCMC.py:235(recombination_of_districts)
   373279    2.542    0.000 1122.477    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1493116    1.770    0.000  788.529    0.001 GerrymanderingMCMC.py:190(__district_size)
283522950  160.434    0.000  646.469    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10102    9.865    0.001  299.837    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.042    0.000   40.045    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.056    0.000   38.607    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.014    0.001   38.487    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.093    0.000   26.497    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.187    0.000   14.390    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.095    0.000    2.216    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.285    0.000    0.858    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.699    0.699 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
