         5571530692 function calls (5571408653 primitive calls) in 1972.611 seconds
        1   11.266   11.266 1971.849 1971.849 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    6.945    0.001 1960.504    0.194 GerrymanderingMCMC.py:235(recombination_of_districts)
   439714    3.024    0.000 1339.041    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1758856    2.065    0.000  941.764    0.001 GerrymanderingMCMC.py:190(__district_size)
341094782  188.948    0.000  772.276    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10103    9.878    0.001  302.437    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.041    0.000   39.759    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.056    0.000   38.361    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   12.940    0.001   38.243    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.093    0.000   26.365    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.214    0.000   14.298    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.091    0.000    2.224    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.293    0.000    0.857    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.733    0.733 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
