         4790676659 function calls (4790554620 primitive calls) in 1746.420 seconds
        1   11.006   11.006 1745.666 1745.666 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.805    0.001 1734.630    0.172 GerrymanderingMCMC.py:235(recombination_of_districts)
   359336    2.469    0.000 1108.215    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1437344    1.730    0.000  782.255    0.001 GerrymanderingMCMC.py:190(__district_size)
274269620  156.631    0.000  639.542    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100    9.982    0.001  304.310    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.042    0.000   40.982    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.054    0.000   39.576    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.363    0.001   39.459    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.091    0.000   27.094    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.238    0.000   14.568    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.089    0.000    2.301    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.284    0.000    0.859    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.722    0.722 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
