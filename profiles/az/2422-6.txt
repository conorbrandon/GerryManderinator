         4906010303 function calls (4905888264 primitive calls) in 1790.461 seconds
        1   11.565   11.565 1789.711 1789.711 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    6.073    0.001 1778.114    0.176 GerrymanderingMCMC.py:235(recombination_of_districts)
   380436    2.695    0.000 1150.279    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1521744    1.835    0.000  811.793    0.001 GerrymanderingMCMC.py:190(__district_size)
284396992  164.066    0.000  664.773    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10101   10.154    0.001  305.877    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.042    0.000   41.039    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.070    0.000   39.607    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.471    0.001   39.474    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.092    0.000   27.124    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.227    0.000   14.480    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.091    0.000    2.242    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.303    0.000    0.893    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.717    0.717 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.007    0.007 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
