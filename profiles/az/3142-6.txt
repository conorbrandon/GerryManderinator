         4558863295 function calls (4558741256 primitive calls) in 1663.292 seconds
        1   11.652   11.652 1662.527 1662.527 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.386    0.001 1650.803    0.163 GerrymanderingMCMC.py:235(recombination_of_districts)
   337146    2.469    0.000 1023.013    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1348584    1.653    0.000  719.060    0.001 GerrymanderingMCMC.py:190(__district_size)
254425960  144.038    0.000  588.034    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10101   10.175    0.001  304.501    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.044    0.000   41.003    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.058    0.000   39.581    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.210    0.001   39.454    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.096    0.000   27.123    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.232    0.000   14.587    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.097    0.000    2.301    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.278    0.000    0.865    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.732    0.732 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.006    0.006    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
