         4947184041 function calls (4947062002 primitive calls) in 1793.482 seconds
        1   11.282   11.282 1792.744 1792.744 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    6.070    0.001 1781.418    0.176 GerrymanderingMCMC.py:235(recombination_of_districts)
   379927    2.722    0.000 1154.533    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1519708    1.857    0.000  810.590    0.001 GerrymanderingMCMC.py:190(__district_size)
288029890  162.930    0.000  663.534    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10103    9.877    0.001  301.858    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.040    0.000   40.826    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.056    0.000   39.399    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.289    0.001   39.277    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.093    0.000   27.068    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.189    0.000   14.534    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.091    0.000    2.218    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.283    0.000    0.886    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.705    0.705 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.006    0.006    0.030    0.030 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
