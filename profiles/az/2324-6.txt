         4659506338 function calls (4659384299 primitive calls) in 1694.433 seconds
        1   11.034   11.034 1693.729 1693.729 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.566    0.001 1682.664    0.167 GerrymanderingMCMC.py:235(recombination_of_districts)
   343951    2.403    0.000 1055.839    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1375804    1.645    0.000  743.100    0.001 GerrymanderingMCMC.py:190(__district_size)
262926094  148.182    0.000  607.235    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   10.043    0.001  304.907    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.041    0.000   40.709    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.058    0.000   39.263    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.226    0.001   39.138    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.095    0.000   26.932    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.237    0.000   14.669    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.096    0.000    2.288    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.281    0.000    0.842    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.672    0.672 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.006    0.006    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
