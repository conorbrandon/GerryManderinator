         4690450995 function calls (4690328956 primitive calls) in 1696.158 seconds
        1   11.544   11.544 1695.390 1695.390 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.646    0.001 1683.782    0.167 GerrymanderingMCMC.py:235(recombination_of_districts)
   346292    2.441    0.000 1059.563    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1385168    1.615    0.000  745.692    0.001 GerrymanderingMCMC.py:190(__district_size)
265949140  150.154    0.000  612.570    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10101    9.880    0.001  300.954    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.048    0.000   40.855    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.058    0.000   39.431    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.419    0.001   39.306    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.096    0.000   27.080    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.193    0.000   14.352    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.094    0.000    2.266    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.281    0.000    0.846    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.735    0.735 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.006    0.006    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
