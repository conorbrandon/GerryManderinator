         4737985329 function calls (4737863290 primitive calls) in 1713.565 seconds
        1   12.130   12.130 1712.865 1712.865 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.680    0.001 1700.702    0.168 GerrymanderingMCMC.py:235(recombination_of_districts)
   358826    2.467    0.000 1073.770    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1435304    1.702    0.000  755.932    0.001 GerrymanderingMCMC.py:190(__district_size)
269906118  152.607    0.000  620.452    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10101   10.171    0.001  303.883    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.051    0.000   40.723    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.061    0.000   39.276    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.227    0.001   39.149    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.094    0.000   26.872    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.171    0.000   14.315    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.093    0.000    2.241    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.281    0.000    0.859    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.667    0.667 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
