         4688054905 function calls (4687932866 primitive calls) in 1713.334 seconds
        1   11.785   11.785 1712.626 1712.626 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.595    0.001 1700.812    0.168 GerrymanderingMCMC.py:235(recombination_of_districts)
   354830    2.500    0.000 1072.636    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1419320    1.713    0.000  755.937    0.001 GerrymanderingMCMC.py:190(__district_size)
265908524  154.421    0.000  620.313    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10103   10.076    0.001  304.779    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.047    0.000   40.960    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.058    0.000   39.556    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.368    0.001   39.434    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.092    0.000   26.989    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.237    0.000   14.478    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.099    0.000    2.250    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.278    0.000    0.837    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.675    0.675 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
