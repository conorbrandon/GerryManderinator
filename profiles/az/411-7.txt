         4866359339 function calls (4866237300 primitive calls) in 1742.919 seconds
        1   11.113   11.113 1742.143 1742.143 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.895    0.001 1730.972    0.171 GerrymanderingMCMC.py:235(recombination_of_districts)
   359427    2.536    0.000 1113.250    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1437708    1.762    0.000  782.436    0.001 GerrymanderingMCMC.py:190(__district_size)
281592736  159.916    0.000  638.848    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   10.195    0.001  298.527    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.038    0.000   39.963    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.058    0.000   38.550    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   12.840    0.001   38.424    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.094    0.000   26.494    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.151    0.000   14.245    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.108    0.000    2.303    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.275    0.000    0.845    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.744    0.744 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
