         5067308011 function calls (5067185972 primitive calls) in 1819.154 seconds
        1   11.620   11.620 1818.387 1818.387 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    6.241    0.001 1806.687    0.179 GerrymanderingMCMC.py:235(recombination_of_districts)
   391015    2.790    0.000 1182.033    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1564060    1.842    0.000  832.175    0.001 GerrymanderingMCMC.py:190(__district_size)
297873392  168.197    0.000  681.361    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10101   10.226    0.001  304.545    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.041    0.000   40.094    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.057    0.000   38.683    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.047    0.001   38.564    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.093    0.000   26.578    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.230    0.000   14.473    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.094    0.000    2.219    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.293    0.000    0.862    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.734    0.734 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
