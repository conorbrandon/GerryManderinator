         4746985850 function calls (4746863811 primitive calls) in 1721.167 seconds
        1   11.944   11.944 1720.357 1720.357 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.770    0.001 1708.384    0.169 GerrymanderingMCMC.py:235(recombination_of_districts)
   357603    2.557    0.000 1075.966    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1430412    1.737    0.000  755.629    0.001 GerrymanderingMCMC.py:190(__district_size)
270740798  151.819    0.000  618.089    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10101   10.204    0.001  306.838    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.042    0.000   40.455    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.058    0.000   38.994    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.034    0.001   38.871    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.100    0.000   26.886    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.158    0.000   14.307    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.096    0.000    2.288    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.274    0.000    0.860    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.774    0.774 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.033    0.033 GerrymanderingMCMC.py:21(__init__)
        1    0.007    0.007    0.032    0.032 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.008    0.008 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
