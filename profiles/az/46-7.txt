         4645685274 function calls (4645563235 primitive calls) in 1697.793 seconds
        1   11.353   11.353 1697.006 1697.006 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.698    0.001 1685.620    0.167 GerrymanderingMCMC.py:235(recombination_of_districts)
   350623    2.421    0.000 1057.180    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1402492    1.709    0.000  741.886    0.001 GerrymanderingMCMC.py:190(__district_size)
261920190  149.523    0.000  606.624    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10101   10.033    0.001  304.993    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.041    0.000   40.999    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.057    0.000   39.568    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.300    0.001   39.446    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.094    0.000   27.205    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.179    0.000   14.548    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.100    0.000    2.345    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.299    0.000    0.863    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.753    0.753 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.006    0.006    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
