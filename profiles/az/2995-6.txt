         4792313781 function calls (4792191742 primitive calls) in 1744.556 seconds
        1   11.353   11.353 1743.827 1743.827 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.778    0.001 1732.424    0.172 GerrymanderingMCMC.py:235(recombination_of_districts)
   365873    2.556    0.000 1104.688    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1463492    1.750    0.000  777.611    0.001 GerrymanderingMCMC.py:190(__district_size)
274296018  156.200    0.000  635.143    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   10.066    0.001  305.420    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.050    0.000   41.081    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.056    0.000   39.656    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.335    0.001   39.523    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.095    0.000   27.243    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.185    0.000   14.568    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.093    0.000    2.281    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.293    0.000    0.863    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.696    0.696 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
