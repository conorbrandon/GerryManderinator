         4793229479 function calls (4793107440 primitive calls) in 1741.702 seconds
        1   11.943   11.943 1740.959 1740.959 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.812    0.001 1728.980    0.171 GerrymanderingMCMC.py:235(recombination_of_districts)
   351005    2.424    0.000 1101.457    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1404020    1.691    0.000  777.577    0.001 GerrymanderingMCMC.py:190(__district_size)
274777254  158.691    0.000  636.810    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10101    9.868    0.001  301.757    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.041    0.000   40.639    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.058    0.000   39.213    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.151    0.001   39.089    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.096    0.000   26.794    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.253    0.000   14.427    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.094    0.000    2.264    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.280    0.000    0.845    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.709    0.709 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.030    0.030 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
