         4704247141 function calls (4704125102 primitive calls) in 1686.249 seconds
        1   10.908   10.908 1685.508 1685.508 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.606    0.001 1674.572    0.166 GerrymanderingMCMC.py:235(recombination_of_districts)
   351955    2.373    0.000 1054.201    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1407820    1.678    0.000  742.838    0.001 GerrymanderingMCMC.py:190(__district_size)
267045378  149.879    0.000  609.869    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100    9.859    0.001  302.221    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.037    0.000   40.313    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.054    0.000   38.917    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   12.999    0.001   38.801    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.089    0.000   26.651    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.253    0.000   14.330    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.102    0.000    2.166    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.285    0.000    0.870    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.709    0.709 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
