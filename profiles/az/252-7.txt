         5040317142 function calls (5040195103 primitive calls) in 1833.136 seconds
        1   11.495   11.495 1832.343 1832.343 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    6.253    0.001 1820.779    0.180 GerrymanderingMCMC.py:235(recombination_of_districts)
   380140    2.666    0.000 1192.943    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1520560    1.862    0.000  838.816    0.001 GerrymanderingMCMC.py:190(__district_size)
295429198  167.339    0.000  686.308    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   10.076    0.001  304.830    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.040    0.000   40.997    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.057    0.000   39.578    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.262    0.001   39.456    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.093    0.000   27.150    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.199    0.000   14.553    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.094    0.000    2.273    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.282    0.000    0.855    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.760    0.760 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.006    0.006    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
