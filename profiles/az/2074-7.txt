         4650266212 function calls (4650144173 primitive calls) in 1685.069 seconds
        1   11.033   11.033 1684.336 1684.336 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.640    0.001 1673.273    0.166 GerrymanderingMCMC.py:235(recombination_of_districts)
   352564    2.459    0.000 1046.070    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1410256    1.691    0.000  734.978    0.001 GerrymanderingMCMC.py:190(__district_size)
262557102  148.950    0.000  602.778    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100    9.930    0.001  305.099    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.051    0.000   40.306    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.056    0.000   38.879    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   12.975    0.001   38.761    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.093    0.000   26.796    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.185    0.000   14.399    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.090    0.000    2.215    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.294    0.000    0.868    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.700    0.700 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.006    0.006    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.007    0.007 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
