         4637726384 function calls (4637604345 primitive calls) in 1681.333 seconds
        1   11.767   11.767 1680.550 1680.550 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.649    0.001 1668.754    0.165 GerrymanderingMCMC.py:235(recombination_of_districts)
   347169    2.465    0.000 1044.078    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1388676    1.655    0.000  732.961    0.001 GerrymanderingMCMC.py:190(__district_size)
261795386  149.098    0.000  599.063    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10101    9.952    0.001  301.352    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.043    0.000   40.602    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.069    0.000   39.196    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.147    0.001   39.063    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.093    0.000   26.811    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.188    0.000   14.288    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.103    0.000    2.236    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.287    0.000    0.881    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.749    0.749 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
