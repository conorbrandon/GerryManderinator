         4645348471 function calls (4645226432 primitive calls) in 1673.230 seconds
        1   11.520   11.520 1672.494 1672.494 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.579    0.001 1660.929    0.164 GerrymanderingMCMC.py:235(recombination_of_districts)
   350623    2.427    0.000 1040.852    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1402492    1.703    0.000  731.606    0.001 GerrymanderingMCMC.py:190(__district_size)
262045430  146.384    0.000  600.367    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100    9.779    0.001  300.671    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.040    0.000   40.453    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.057    0.000   39.013    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.146    0.001   38.890    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.093    0.000   26.766    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.183    0.000   14.287    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.092    0.000    2.239    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.285    0.000    0.854    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.704    0.704 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.006    0.006    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
