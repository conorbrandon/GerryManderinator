         4613992527 function calls (4613870488 primitive calls) in 1672.993 seconds
        1   11.060   11.060 1672.256 1672.256 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.622    0.001 1661.166    0.164 GerrymanderingMCMC.py:235(recombination_of_districts)
   348158    2.366    0.000 1035.361    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1392632    1.696    0.000  725.953    0.001 GerrymanderingMCMC.py:190(__district_size)
259642272  145.621    0.000  594.439    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   10.112    0.001  305.394    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.070    0.000   40.554    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.055    0.000   39.119    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.120    0.001   39.002    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.091    0.000   27.033    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.179    0.000   14.410    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.090    0.000    2.254    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.301    0.000    0.898    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.705    0.705 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
