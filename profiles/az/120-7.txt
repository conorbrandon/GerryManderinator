         4880090561 function calls (4879968522 primitive calls) in 1754.159 seconds
        1   11.779   11.779 1753.457 1753.457 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.883    0.001 1741.648    0.172 GerrymanderingMCMC.py:235(recombination_of_districts)
   369591    2.547    0.000 1116.008    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1478364    1.800    0.000  783.730    0.001 GerrymanderingMCMC.py:190(__district_size)
281836626  158.118    0.000  643.000    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   10.020    0.001  302.943    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.042    0.000   40.271    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.058    0.000   38.822    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.035    0.001   38.698    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.093    0.000   26.871    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.268    0.000   14.428    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.095    0.000    2.273    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.298    0.000    0.870    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.670    0.670 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.006    0.006    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
