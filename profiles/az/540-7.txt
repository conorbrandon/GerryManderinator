         4994684413 function calls (4994562374 primitive calls) in 1785.622 seconds
        1   11.407   11.407 1784.884 1784.884 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    6.192    0.001 1773.445    0.176 GerrymanderingMCMC.py:235(recombination_of_districts)
   389287    2.606    0.000 1153.079    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1557148    1.832    0.000  811.876    0.001 GerrymanderingMCMC.py:190(__district_size)
292103676  163.449    0.000  665.624    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10101    9.846    0.001  301.418    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.040    0.000   40.079    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.055    0.000   38.631    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   12.895    0.001   38.514    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.090    0.000   26.475    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.197    0.000   14.287    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.089    0.000    2.225    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.269    0.000    0.832    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.705    0.705 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
