         4547956837 function calls (4547834798 primitive calls) in 1640.450 seconds
        1   12.004   12.004 1639.690 1639.690 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.419    0.001 1627.653    0.161 GerrymanderingMCMC.py:235(recombination_of_districts)
   329397    2.255    0.000  999.490    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1317588    1.608    0.000  701.881    0.001 GerrymanderingMCMC.py:190(__district_size)
253003218  141.183    0.000  575.079    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   10.144    0.001  305.616    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.042    0.000   40.430    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.057    0.000   38.992    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   12.994    0.001   38.869    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.095    0.000   26.748    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.216    0.000   14.434    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.096    0.000    2.303    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.281    0.000    0.877    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.727    0.727 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.006    0.006    0.030    0.030 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
