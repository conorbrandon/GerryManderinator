         4638411452 function calls (4638289413 primitive calls) in 1697.778 seconds
        1   11.776   11.776 1697.031 1697.031 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.574    0.001 1685.225    0.167 GerrymanderingMCMC.py:235(recombination_of_districts)
   354250    2.484    0.000 1057.883    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1417000    1.689    0.000  744.835    0.001 GerrymanderingMCMC.py:190(__district_size)
261903808  147.263    0.000  609.029    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10102   10.140    0.001  303.418    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.041    0.000   40.919    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.058    0.000   39.470    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.350    0.001   39.344    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.097    0.000   27.159    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.189    0.000   14.308    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.107    0.000    2.278    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.293    0.000    0.901    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.714    0.714 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.030    0.030 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
