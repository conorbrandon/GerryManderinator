         4409815602 function calls (4409693563 primitive calls) in 1600.691 seconds
        1   12.150   12.150 1599.988 1599.988 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.166    0.001 1587.808    0.157 GerrymanderingMCMC.py:235(recombination_of_districts)
   331489    2.360    0.000  960.818    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1325956    1.630    0.000  673.891    0.001 GerrymanderingMCMC.py:190(__district_size)
241644710  135.408    0.000  551.430    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   10.031    0.001  303.758    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.042    0.000   40.629    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.060    0.000   39.179    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.188    0.001   39.053    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.095    0.000   26.813    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.174    0.000   14.263    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.093    0.000    2.245    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.277    0.000    0.842    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.670    0.670 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
