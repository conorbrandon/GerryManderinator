         4861038189 function calls (4860916150 primitive calls) in 1781.009 seconds
        1   11.210   11.210 1780.305 1780.305 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    6.063    0.001 1769.066    0.175 GerrymanderingMCMC.py:235(recombination_of_districts)
   369795    2.719    0.000 1140.164    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1479180    1.796    0.000  804.646    0.001 GerrymanderingMCMC.py:190(__district_size)
280608820  163.507    0.000  659.783    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10102    9.900    0.001  305.121    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.040    0.000   40.983    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.055    0.000   39.547    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.249    0.001   39.421    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.091    0.000   27.144    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.201    0.000   14.483    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.097    0.000    2.234    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.281    0.000    0.885    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.671    0.671 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.006    0.006    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
