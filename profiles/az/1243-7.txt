         5381965637 function calls (5381843598 primitive calls) in 1904.090 seconds
        1   11.308   11.308 1903.272 1903.272 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    6.624    0.001 1891.927    0.187 GerrymanderingMCMC.py:235(recombination_of_districts)
   412399    2.767    0.000 1271.579    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1649596    1.981    0.000  893.237    0.001 GerrymanderingMCMC.py:190(__district_size)
324909110  181.329    0.000  732.078    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10101    9.801    0.001  301.126    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.040    0.000   39.764    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.057    0.000   38.314    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   12.670    0.001   38.194    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.093    0.000   26.274    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.159    0.000   14.339    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.100    0.000    2.224    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.279    0.000    0.844    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.785    0.785 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
