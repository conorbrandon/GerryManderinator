         4898439701 function calls (4898317662 primitive calls) in 1789.815 seconds
        1   11.952   11.952 1789.009 1789.009 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.977    0.001 1777.026    0.176 GerrymanderingMCMC.py:235(recombination_of_districts)
   371568    2.627    0.000 1145.032    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1486272    1.838    0.000  804.780    0.001 GerrymanderingMCMC.py:190(__district_size)
283304214  164.888    0.000  659.259    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10103   10.143    0.001  307.699    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.041    0.000   40.809    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.060    0.000   39.356    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.334    0.001   39.233    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.097    0.000   27.047    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.281    0.000   14.760    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.090    0.000    2.354    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.298    0.000    0.881    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.772    0.772 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.006    0.006    0.030    0.030 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.007    0.007 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
