         4968231615 function calls (4968109576 primitive calls) in 1769.540 seconds
        1   11.007   11.007 1768.792 1768.792 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    6.021    0.001 1757.757    0.174 GerrymanderingMCMC.py:235(recombination_of_districts)
   377045    2.550    0.000 1140.721    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1508180    1.765    0.000  800.722    0.001 GerrymanderingMCMC.py:190(__district_size)
290005826  159.377    0.000  657.171    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10102    9.839    0.001  300.984    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.040    0.000   39.989    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.055    0.000   38.608    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   12.754    0.001   38.492    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.092    0.000   26.587    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.115    0.000   14.238    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.089    0.000    2.199    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.273    0.000    0.848    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.715    0.715 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
