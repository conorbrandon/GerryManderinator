         4918394485 function calls (4918272446 primitive calls) in 1771.469 seconds
        1   11.919   11.919 1770.729 1770.729 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.997    0.001 1758.781    0.174 GerrymanderingMCMC.py:235(recombination_of_districts)
   373969    2.597    0.000 1128.652    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1495876    1.769    0.000  794.458    0.001 GerrymanderingMCMC.py:190(__district_size)
285182824  160.276    0.000  650.317    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100    9.989    0.001  305.461    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.041    0.000   40.963    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.058    0.000   39.500    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.178    0.001   39.373    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.096    0.000   26.935    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.212    0.000   14.423    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.098    0.000    2.302    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.282    0.000    0.852    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.707    0.707 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.030    0.030 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
