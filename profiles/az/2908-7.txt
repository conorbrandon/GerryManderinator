         4878936653 function calls (4878814614 primitive calls) in 1791.649 seconds
        1   11.871   11.871 1790.933 1790.933 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.951    0.001 1779.024    0.176 GerrymanderingMCMC.py:235(recombination_of_districts)
   370533    2.605    0.000 1142.084    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1482132    1.793    0.000  806.579    0.001 GerrymanderingMCMC.py:190(__district_size)
281379538  160.499    0.000  661.010    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   10.219    0.001  308.398    0.031 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.042    0.000   41.664    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.060    0.000   40.158    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.579    0.001   40.033    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.095    0.000   27.494    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.240    0.000   14.768    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.097    0.000    2.292    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.290    0.000    0.877    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.683    0.683 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
