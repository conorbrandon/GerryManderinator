         5400443390 function calls (5400321351 primitive calls) in 1925.210 seconds
        1   11.449   11.449 1924.099 1924.099 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    6.768    0.001 1912.622    0.189 GerrymanderingMCMC.py:235(recombination_of_districts)
   413493    2.887    0.000 1290.654    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1653972    1.972    0.000  908.976    0.001 GerrymanderingMCMC.py:190(__district_size)
326753128  184.093    0.000  745.006    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   10.078    0.001  301.309    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.065    0.000   40.298    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.058    0.000   38.853    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.152    0.001   38.729    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.094    0.000   26.669    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.228    0.000   14.352    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.096    0.000    2.267    0.000 GerrymanderingMCMC.py:157(__random_district_label)
        1    0.000    0.000    1.079    1.079 GerrymanderingMCMC.py:1(<module>)
    10100    0.281    0.000    0.857    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
