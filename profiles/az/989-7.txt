         4707147330 function calls (4707025291 primitive calls) in 1687.480 seconds
        1   11.292   11.292 1686.781 1686.781 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.594    0.001 1675.460    0.166 GerrymanderingMCMC.py:235(recombination_of_districts)
   344684    2.352    0.000 1053.433    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1378736    1.620    0.000  739.643    0.001 GerrymanderingMCMC.py:190(__district_size)
266891368  152.089    0.000  605.707    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10101    9.774    0.001  301.133    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.044    0.000   40.462    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.059    0.000   39.072    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.172    0.001   38.951    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.090    0.000   26.746    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.215    0.000   14.399    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.091    0.000    2.243    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.296    0.000    0.856    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.667    0.667 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
