         4544138950 function calls (4544016911 primitive calls) in 1649.821 seconds
        1   11.291   11.291 1648.963 1648.963 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.403    0.001 1637.617    0.162 GerrymanderingMCMC.py:235(recombination_of_districts)
   344143    2.390    0.000 1015.279    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1376572    1.637    0.000  712.222    0.001 GerrymanderingMCMC.py:190(__district_size)
253584478  142.265    0.000  582.864    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10101    9.854    0.001  300.150    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.042    0.000   40.466    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.057    0.000   39.069    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.195    0.001   38.948    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.094    0.000   26.802    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.168    0.000   14.305    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.092    0.000    2.209    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.287    0.000    0.841    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.800    0.800 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
