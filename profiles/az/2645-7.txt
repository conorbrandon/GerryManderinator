         4719570003 function calls (4719447964 primitive calls) in 1700.240 seconds
        1   11.576   11.576 1699.480 1699.480 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.660    0.001 1687.875    0.167 GerrymanderingMCMC.py:235(recombination_of_districts)
   353461    2.462    0.000 1063.313    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1413844    1.682    0.000  746.518    0.001 GerrymanderingMCMC.py:190(__district_size)
267859970  148.535    0.000  610.509    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   10.006    0.001  301.189    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.040    0.000   40.220    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.059    0.000   38.799    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   12.915    0.001   38.674    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.098    0.000   26.700    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.247    0.000   14.453    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.096    0.000    2.264    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.299    0.000    0.866    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.732    0.732 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
