         5141543631 function calls (5141421592 primitive calls) in 1845.746 seconds
        1   11.531   11.531 1844.918 1844.918 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    6.292    0.001 1833.315    0.182 GerrymanderingMCMC.py:235(recombination_of_districts)
   383660    2.685    0.000 1204.806    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1534640    1.792    0.000  846.689    0.001 GerrymanderingMCMC.py:190(__district_size)
304189946  168.647    0.000  692.492    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10101   10.093    0.001  304.717    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.041    0.000   40.381    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.058    0.000   38.951    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.111    0.001   38.825    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.098    0.000   26.794    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.181    0.000   14.448    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.094    0.000    2.255    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.282    0.000    0.848    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.794    0.794 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
