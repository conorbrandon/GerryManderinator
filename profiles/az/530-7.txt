         4913968113 function calls (4913846074 primitive calls) in 1770.100 seconds
        1   11.950   11.950 1769.381 1769.381 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.908    0.001 1757.394    0.174 GerrymanderingMCMC.py:235(recombination_of_districts)
   378094    2.593    0.000 1133.927    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1512376    1.825    0.000  795.356    0.001 GerrymanderingMCMC.py:190(__district_size)
284743134  161.312    0.000  651.444    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   10.062    0.001  300.766    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.040    0.000   40.807    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.057    0.000   39.385    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.169    0.001   39.264    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.095    0.000   26.988    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.219    0.000   14.479    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.102    0.000    2.240    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.291    0.000    0.858    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.686    0.686 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
