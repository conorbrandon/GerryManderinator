         4778965736 function calls (4778843697 primitive calls) in 1715.747 seconds
        1   11.732   11.732 1715.000 1715.000 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.734    0.001 1703.221    0.169 GerrymanderingMCMC.py:235(recombination_of_districts)
   354800    2.478    0.000 1078.300    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1419200    1.650    0.000  757.874    0.001 GerrymanderingMCMC.py:190(__district_size)
273319174  152.398    0.000  621.461    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10103   10.006    0.001  305.485    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.040    0.000   40.106    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.058    0.000   38.709    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   12.944    0.001   38.583    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.106    0.000   26.501    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.150    0.000   14.276    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.093    0.000    2.222    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.274    0.000    0.828    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.715    0.715 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
