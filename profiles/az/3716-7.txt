         4721006824 function calls (4720884785 primitive calls) in 1694.832 seconds
        1   12.358   12.358 1694.091 1694.091 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.707    0.001 1681.704    0.167 GerrymanderingMCMC.py:235(recombination_of_districts)
   359554    2.432    0.000 1057.669    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1438216    1.664    0.000  741.778    0.001 GerrymanderingMCMC.py:190(__district_size)
268875452  147.843    0.000  608.506    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10102   10.054    0.001  302.055    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.041    0.000   40.478    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.060    0.000   39.041    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.243    0.001   38.911    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.096    0.000   26.711    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.146    0.000   14.166    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.097    0.000    2.302    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.275    0.000    0.836    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.709    0.709 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
