         4689995115 function calls (4689873076 primitive calls) in 1689.019 seconds
        1   11.506   11.506 1688.263 1688.263 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.599    0.001 1676.726    0.166 GerrymanderingMCMC.py:235(recombination_of_districts)
   355748    2.478    0.000 1059.229    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1422992    1.675    0.000  746.879    0.001 GerrymanderingMCMC.py:190(__district_size)
266261966  147.241    0.000  612.197    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10101    9.955    0.001  298.611    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.041    0.000   40.177    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.057    0.000   38.777    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   12.895    0.001   38.651    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.095    0.000   26.633    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.202    0.000   14.228    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.092    0.000    2.241    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.281    0.000    0.879    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.722    0.722 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.006    0.006    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
