         5065113224 function calls (5064991185 primitive calls) in 1817.985 seconds
        1   11.082   11.082 1817.255 1817.255 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    6.131    0.001 1806.142    0.179 GerrymanderingMCMC.py:235(recombination_of_districts)
   387520    2.628    0.000 1184.620    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1550080    1.860    0.000  835.061    0.001 GerrymanderingMCMC.py:190(__district_size)
297906088  169.095    0.000  683.814    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10102    9.923    0.001  302.509    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.039    0.000   40.079    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.054    0.000   38.704    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   12.823    0.001   38.590    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.093    0.000   26.601    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.168    0.000   14.299    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.095    0.000    2.215    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.277    0.000    0.844    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.697    0.697 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
