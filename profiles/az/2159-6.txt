         4868113173 function calls (4867991134 primitive calls) in 1758.639 seconds
        1   11.777   11.777 1757.868 1757.868 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.931    0.001 1746.042    0.173 GerrymanderingMCMC.py:235(recombination_of_districts)
   369475    2.639    0.000 1114.908    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1477900    1.754    0.000  783.324    0.001 GerrymanderingMCMC.py:190(__district_size)
280345736  156.069    0.000  639.232    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10103   10.140    0.001  308.303    0.031 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.041    0.000   40.383    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.062    0.000   38.945    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.106    0.001   38.817    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.096    0.000   26.827    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.213    0.000   14.491    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.095    0.000    2.298    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.276    0.000    0.837    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.739    0.739 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.006    0.006    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
