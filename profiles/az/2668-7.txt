         5274292359 function calls (5274170320 primitive calls) in 1894.205 seconds
        1   11.368   11.368 1893.451 1893.451 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    6.571    0.001 1882.053    0.186 GerrymanderingMCMC.py:235(recombination_of_districts)
   411437    2.888    0.000 1253.270    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1645748    2.049    0.000  882.213    0.001 GerrymanderingMCMC.py:190(__district_size)
315792264  177.787    0.000  722.785    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10103    9.950    0.001  304.732    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.041    0.000   40.877    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.057    0.000   39.456    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.280    0.001   39.333    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.096    0.000   27.010    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.165    0.000   14.289    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.094    0.000    2.279    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.295    0.000    0.858    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.721    0.721 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.006    0.006    0.030    0.030 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
