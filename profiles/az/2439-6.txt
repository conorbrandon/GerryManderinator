         4782039016 function calls (4781916977 primitive calls) in 1738.980 seconds
        1   12.306   12.306 1738.198 1738.198 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.764    0.001 1725.849    0.171 GerrymanderingMCMC.py:235(recombination_of_districts)
   361951    2.555    0.000 1095.345    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1447804    1.779    0.000  769.862    0.001 GerrymanderingMCMC.py:190(__district_size)
273626814  155.255    0.000  631.780    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10102   10.042    0.001  305.431    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.041    0.000   40.615    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.068    0.000   39.207    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.183    0.001   39.072    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.093    0.000   26.978    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.219    0.000   14.501    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.097    0.000    2.253    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.281    0.000    0.844    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.750    0.750 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.006    0.006    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.007    0.007 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
