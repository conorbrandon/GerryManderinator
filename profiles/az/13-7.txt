         5009372188 function calls (5009250149 primitive calls) in 1797.499 seconds
        1   11.084   11.084 1793.830 1793.830 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    6.188    0.001 1782.664    0.177 GerrymanderingMCMC.py:235(recombination_of_districts)
   382645    2.629    0.000 1163.653    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1530580    1.785    0.000  817.966    0.001 GerrymanderingMCMC.py:190(__district_size)
293286880  164.112    0.000  671.641    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10101    9.794    0.001  300.983    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.040    0.000   40.518    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.055    0.000   39.100    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   12.987    0.001   38.982    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.091    0.000   26.786    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.147    0.000   14.358    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
        1    0.000    0.000    3.623    3.623 GerrymanderingMCMC.py:1(<module>)
    30300    0.095    0.000    2.210    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.276    0.000    0.857    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.033    0.033 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.032    0.032 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.010    0.010 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
