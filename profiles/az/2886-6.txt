         4810514527 function calls (4810392488 primitive calls) in 1741.429 seconds
        1   12.456   12.456 1740.730 1740.730 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.870    0.001 1728.240    0.171 GerrymanderingMCMC.py:235(recombination_of_districts)
   371157    2.662    0.000 1100.626    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1484628    1.830    0.000  772.312    0.001 GerrymanderingMCMC.py:190(__district_size)
276265232  153.432    0.000  632.093    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10103   10.073    0.001  302.029    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.058    0.000   40.534    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.059    0.000   39.088    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.167    0.001   38.961    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.108    0.000   26.850    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.203    0.000   14.415    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.102    0.000    2.319    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.274    0.000    0.828    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.666    0.666 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.006    0.006    0.030    0.030 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
