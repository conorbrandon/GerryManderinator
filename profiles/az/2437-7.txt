         5001925203 function calls (5001803164 primitive calls) in 1810.097 seconds
        1   11.006   11.006 1809.350 1809.350 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    6.127    0.001 1798.314    0.178 GerrymanderingMCMC.py:235(recombination_of_districts)
   379745    2.615    0.000 1167.704    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1518980    1.802    0.000  820.062    0.001 GerrymanderingMCMC.py:190(__district_size)
292284222  163.944    0.000  671.760    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10103    9.975    0.001  306.183    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.039    0.000   41.034    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.055    0.000   39.588    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.126    0.001   39.472    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.091    0.000   27.165    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.208    0.000   14.629    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.091    0.000    2.316    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.280    0.000    0.858    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.715    0.715 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
