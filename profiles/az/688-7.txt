         4689114870 function calls (4688992831 primitive calls) in 1710.505 seconds
        1   11.549   11.549 1709.755 1709.755 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.672    0.001 1698.173    0.168 GerrymanderingMCMC.py:235(recombination_of_districts)
   355551    2.550    0.000 1069.839    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1422204    1.679    0.000  751.844    0.001 GerrymanderingMCMC.py:190(__district_size)
265667834  151.569    0.000  616.940    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   10.110    0.001  305.972    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.041    0.000   40.687    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.057    0.000   39.288    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.217    0.001   39.167    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.092    0.000   27.021    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.249    0.000   14.472    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.092    0.000    2.230    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.303    0.000    0.868    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.717    0.717 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.006    0.006    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
