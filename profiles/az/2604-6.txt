         5512082888 function calls (5511960849 primitive calls) in 1986.002 seconds
        1   11.701   11.701 1985.264 1985.264 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    7.041    0.001 1973.530    0.195 GerrymanderingMCMC.py:235(recombination_of_districts)
   424112    3.048    0.000 1347.122    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1696448    2.051    0.000  943.462    0.001 GerrymanderingMCMC.py:190(__district_size)
336765240  190.624    0.000  772.666    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10101    9.977    0.001  303.796    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.041    0.000   40.163    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.060    0.000   38.757    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.015    0.001   38.632    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.094    0.000   26.636    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.196    0.000   14.490    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.095    0.000    2.222    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.275    0.000    0.839    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.705    0.705 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
