         4664370939 function calls (4664248900 primitive calls) in 1802.189 seconds
        1   11.463   11.463 1801.428 1801.428 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.639    0.001 1789.900    0.177 GerrymanderingMCMC.py:235(recombination_of_districts)
   359642    2.543    0.000 1137.397    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1438568    1.781    0.000  819.127    0.001 GerrymanderingMCMC.py:190(__district_size)
263389676  153.170    0.000  680.895    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100    9.974    0.001  327.674    0.032 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.042    0.000   40.720    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.057    0.000   39.273    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.180    0.001   39.138    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.095    0.000   26.944    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.216    0.000   14.742    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.095    0.000    2.295    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.279    0.000    0.849    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.728    0.728 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.006    0.006    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
