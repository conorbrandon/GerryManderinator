         4777382712 function calls (4777260673 primitive calls) in 1713.452 seconds
        1   11.367   11.367 1712.768 1712.768 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.771    0.001 1701.371    0.168 GerrymanderingMCMC.py:235(recombination_of_districts)
   361319    2.540    0.000 1083.034    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1445276    1.718    0.000  761.297    0.001 GerrymanderingMCMC.py:190(__district_size)
273397910  152.014    0.000  623.279    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10104    9.625    0.001  299.873    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.048    0.000   39.998    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.057    0.000   38.558    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   12.984    0.001   38.436    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.096    0.000   26.570    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.164    0.000   14.341    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.093    0.000    2.240    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.275    0.000    0.848    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.652    0.652 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.006    0.006    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
