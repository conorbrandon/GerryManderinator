         4750574747 function calls (4750452708 primitive calls) in 1728.675 seconds
        1   12.139   12.139 1727.939 1727.939 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.683    0.001 1715.753    0.170 GerrymanderingMCMC.py:235(recombination_of_districts)
   357874    2.453    0.000 1086.801    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1431496    1.727    0.000  767.275    0.001 GerrymanderingMCMC.py:190(__district_size)
270707108  154.486    0.000  628.185    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10101   10.110    0.001  304.714    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.041    0.000   40.539    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.058    0.000   39.121    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.211    0.001   38.995    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.096    0.000   26.839    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.233    0.000   14.466    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.094    0.000    2.295    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.282    0.000    0.873    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.704    0.704 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
