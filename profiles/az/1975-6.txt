         4804527143 function calls (4804405104 primitive calls) in 1740.134 seconds
        1   11.274   11.274 1739.326 1739.326 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.851    0.001 1728.022    0.171 GerrymanderingMCMC.py:235(recombination_of_districts)
   354294    2.481    0.000 1102.386    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1417176    1.741    0.000  776.019    0.001 GerrymanderingMCMC.py:190(__district_size)
275926534  156.250    0.000  635.724    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10103    9.961    0.001  303.322    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.040    0.000   40.963    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.060    0.000   39.496    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.158    0.001   39.371    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.093    0.000   26.810    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.190    0.000   14.495    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.091    0.000    2.224    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.277    0.000    0.846    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.774    0.774 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.031    0.031 GerrymanderingMCMC.py:21(__init__)
        1    0.006    0.006    0.031    0.031 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.007    0.007 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
