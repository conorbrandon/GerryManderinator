         4712635506 function calls (4712513467 primitive calls) in 1711.244 seconds
        1   11.095   11.095 1710.424 1710.424 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.662    0.001 1699.299    0.168 GerrymanderingMCMC.py:235(recombination_of_districts)
   352487    2.464    0.000 1071.499    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1409948    1.706    0.000  754.747    0.001 GerrymanderingMCMC.py:190(__district_size)
268029660  151.552    0.000  617.927    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10102   10.064    0.001  304.500    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.039    0.000   41.069    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.056    0.000   39.664    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.250    0.001   39.543    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.091    0.000   27.189    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.192    0.000   14.339    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.089    0.000    2.208    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.304    0.000    0.873    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.788    0.788 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.030    0.030 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
