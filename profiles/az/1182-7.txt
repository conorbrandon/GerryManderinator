         4956768203 function calls (4956646164 primitive calls) in 1803.845 seconds
        1   11.742   11.742 1803.116 1803.116 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    6.060    0.001 1791.339    0.177 GerrymanderingMCMC.py:235(recombination_of_districts)
   383117    2.737    0.000 1164.259    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1532468    1.845    0.000  819.973    0.001 GerrymanderingMCMC.py:190(__district_size)
288755862  162.463    0.000  672.513    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   10.056    0.001  304.353    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.042    0.000   41.050    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.060    0.000   39.638    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.424    0.001   39.511    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.094    0.000   27.114    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.202    0.000   14.499    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.097    0.000    2.307    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.306    0.000    0.881    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.696    0.696 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.006    0.006    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
