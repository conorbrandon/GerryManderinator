         4841657551 function calls (4841535512 primitive calls) in 1746.700 seconds
        1   11.752   11.752 1745.975 1745.975 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    6.056    0.001 1734.194    0.172 GerrymanderingMCMC.py:235(recombination_of_districts)
   370256    2.653    0.000 1110.930    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1481024    1.787    0.000  782.002    0.001 GerrymanderingMCMC.py:190(__district_size)
278912770  155.615    0.000  642.306    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10101    9.822    0.001  300.337    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.043    0.000   40.564    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.057    0.000   39.160    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.258    0.001   39.039    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.092    0.000   26.748    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.194    0.000   14.275    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.091    0.000    2.213    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.284    0.000    0.865    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.692    0.692 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
