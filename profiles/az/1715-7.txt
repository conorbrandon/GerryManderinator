         4394735144 function calls (4394613105 primitive calls) in 1593.979 seconds
        1   11.134   11.134 1593.278 1593.278 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.203    0.001 1582.115    0.157 GerrymanderingMCMC.py:235(recombination_of_districts)
   323734    2.353    0.000  962.289    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1294936    1.544    0.000  677.634    0.001 GerrymanderingMCMC.py:190(__district_size)
240000134  136.198    0.000  554.098    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10102    9.961    0.001  302.740    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.056    0.000   40.147    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.060    0.000   38.738    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   12.970    0.001   38.615    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.091    0.000   26.510    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.211    0.000   14.440    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.102    0.000    2.216    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.277    0.000    0.837    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.668    0.668 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.006    0.006    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
