         4746079232 function calls (4745957193 primitive calls) in 1736.090 seconds
        1   11.879   11.879 1735.372 1735.372 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.848    0.001 1723.464    0.171 GerrymanderingMCMC.py:235(recombination_of_districts)
   358899    2.482    0.000 1093.003    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1435596    1.775    0.000  769.318    0.001 GerrymanderingMCMC.py:190(__district_size)
270386874  155.980    0.000  630.688    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10101    9.955    0.001  304.444    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.041    0.000   41.167    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.058    0.000   39.718    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.177    0.001   39.594    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.095    0.000   27.132    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.212    0.000   14.574    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.093    0.000    2.309    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.279    0.000    0.850    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.689    0.689 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.006    0.006    0.030    0.030 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.007    0.007 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
