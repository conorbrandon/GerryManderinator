         4728507617 function calls (4728385578 primitive calls) in 1688.686 seconds
        1   10.888   10.888 1687.981 1687.981 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.709    0.001 1677.063    0.166 GerrymanderingMCMC.py:235(recombination_of_districts)
   356767    2.439    0.000 1056.219    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1427068    1.692    0.000  741.129    0.001 GerrymanderingMCMC.py:190(__district_size)
269135400  149.663    0.000  606.828    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10102    9.768    0.001  301.905    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.049    0.000   39.986    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.055    0.000   38.552    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   12.744    0.001   38.435    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.090    0.000   26.404    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.112    0.000   14.189    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.088    0.000    2.179    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.302    0.000    0.859    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.674    0.674 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.006    0.006    0.030    0.030 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
