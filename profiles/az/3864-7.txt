         4658405712 function calls (4658283673 primitive calls) in 1702.132 seconds
        1   11.826   11.826 1701.396 1701.396 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.557    0.001 1689.540    0.167 GerrymanderingMCMC.py:235(recombination_of_districts)
   352660    2.522    0.000 1055.669    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1410640    1.679    0.000  743.196    0.001 GerrymanderingMCMC.py:190(__district_size)
262848726  148.139    0.000  609.225    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10101   10.201    0.001  308.341    0.031 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.042    0.000   40.699    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.057    0.000   39.273    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.169    0.001   39.153    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.094    0.000   26.929    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.197    0.000   14.550    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.095    0.000    2.246    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.280    0.000    0.873    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.702    0.702 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.006    0.006    0.030    0.030 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
