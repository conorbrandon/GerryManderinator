         4684997118 function calls (4684875079 primitive calls) in 1703.048 seconds
        1   11.581   11.581 1702.295 1702.295 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.659    0.001 1690.640    0.167 GerrymanderingMCMC.py:235(recombination_of_districts)
   358311    2.470    0.000 1064.944    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1433244    1.788    0.000  748.294    0.001 GerrymanderingMCMC.py:190(__district_size)
265941526  147.249    0.000  611.954    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10101    9.887    0.001  301.891    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.041    0.000   40.829    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.057    0.000   39.433    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.127    0.001   39.306    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.095    0.000   26.950    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.195    0.000   14.312    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.105    0.000    2.265    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.271    0.000    0.834    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.718    0.718 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.006    0.006    0.030    0.030 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
