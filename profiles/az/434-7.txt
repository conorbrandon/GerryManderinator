         5196521914 function calls (5196399875 primitive calls) in 1882.727 seconds
        1   11.704   11.704 1881.986 1881.986 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    6.606    0.001 1870.248    0.185 GerrymanderingMCMC.py:235(recombination_of_districts)
   400459    2.944    0.000 1235.026    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1601836    1.924    0.000  867.379    0.001 GerrymanderingMCMC.py:190(__district_size)
309071596  171.764    0.000  708.883    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   10.215    0.001  309.125    0.031 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.041    0.000   40.935    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.055    0.000   39.440    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.213    0.001   39.321    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.094    0.000   27.044    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.177    0.000   14.454    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.093    0.000    2.261    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.281    0.000    0.856    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.708    0.708 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.006    0.006    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
