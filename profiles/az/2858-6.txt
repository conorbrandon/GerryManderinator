         4615422524 function calls (4615300485 primitive calls) in 1665.694 seconds
        1   11.199   11.199 1664.994 1664.994 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.532    0.001 1653.763    0.164 GerrymanderingMCMC.py:235(recombination_of_districts)
   334918    2.315    0.000 1028.461    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1339672    1.632    0.000  723.460    0.001 GerrymanderingMCMC.py:190(__district_size)
258947362  145.644    0.000  592.380    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10102    9.817    0.001  304.252    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.039    0.000   40.526    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.059    0.000   39.109    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.197    0.001   38.985    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.096    0.000   26.837    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.244    0.000   14.512    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.097    0.000    2.256    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.280    0.000    0.850    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.667    0.667 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.006    0.006    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
