         5077582402 function calls (5077460363 primitive calls) in 1807.425 seconds
        1   11.026   11.026 1806.664 1806.664 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    6.240    0.001 1795.605    0.178 GerrymanderingMCMC.py:235(recombination_of_districts)
   388491    2.701    0.000 1177.194    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1553964    1.966    0.000  828.327    0.001 GerrymanderingMCMC.py:190(__district_size)
299166790  166.364    0.000  678.413    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10102    9.722    0.001  299.166    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.038    0.000   40.120    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.055    0.000   38.749    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.087    0.001   38.633    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.092    0.000   26.602    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.140    0.000   14.260    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.088    0.000    2.248    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.293    0.000    0.866    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.735    0.735 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
