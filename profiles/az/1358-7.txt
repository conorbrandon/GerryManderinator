         5458752084 function calls (5458630045 primitive calls) in 1954.388 seconds
        1   11.850   11.850 1953.649 1953.649 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    6.898    0.001 1941.768    0.192 GerrymanderingMCMC.py:235(recombination_of_districts)
   419763    3.087    0.000 1310.768    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1679052    2.057    0.000  920.470    0.001 GerrymanderingMCMC.py:190(__district_size)
331335006  183.453    0.000  755.743    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10102   10.041    0.001  305.245    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.044    0.000   41.269    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.058    0.000   39.833    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.371    0.001   39.708    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.097    0.000   27.185    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.196    0.000   14.457    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.094    0.000    2.284    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.284    0.000    0.855    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.707    0.707 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.006    0.006    0.030    0.030 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
