         5151180201 function calls (5151058162 primitive calls) in 1860.168 seconds
        1   10.984   10.984 1859.464 1859.464 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    6.357    0.001 1848.446    0.183 GerrymanderingMCMC.py:235(recombination_of_districts)
   401380    2.750    0.000 1220.504    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1605520    1.895    0.000  858.503    0.001 GerrymanderingMCMC.py:190(__district_size)
305600148  171.267    0.000  705.127    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10103    9.823    0.001  303.953    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.039    0.000   40.784    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.056    0.000   39.375    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.003    0.001   39.256    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.090    0.000   26.901    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.180    0.000   14.418    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.093    0.000    2.232    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.281    0.000    0.872    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.672    0.672 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.006    0.006    0.030    0.030 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
