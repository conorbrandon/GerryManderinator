         4708839347 function calls (4708717308 primitive calls) in 1706.728 seconds
        1   11.333   11.333 1706.018 1706.018 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.781    0.001 1694.657    0.168 GerrymanderingMCMC.py:235(recombination_of_districts)
   354241    2.422    0.000 1069.416    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1416964    1.712    0.000  749.623    0.001 GerrymanderingMCMC.py:190(__district_size)
267176792  150.854    0.000  613.082    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10101   10.017    0.001  304.169    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.040    0.000   40.618    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.055    0.000   39.229    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.134    0.001   39.111    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.093    0.000   26.871    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.223    0.000   14.481    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.088    0.000    2.247    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.296    0.000    0.857    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.678    0.678 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
