         4315068504 function calls (4314946465 primitive calls) in 1590.563 seconds
        1   11.100   11.100 1589.865 1589.865 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.041    0.000 1578.731    0.156 GerrymanderingMCMC.py:235(recombination_of_districts)
   317769    2.260    0.000  948.363    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1271076    1.541    0.000  668.974    0.001 GerrymanderingMCMC.py:190(__district_size)
233381680  134.464    0.000  548.613    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10104   10.121    0.001  306.818    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.039    0.000   41.700    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.056    0.000   40.290    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.652    0.001   40.167    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.095    0.000   27.511    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.234    0.000   14.604    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.093    0.000    2.230    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.287    0.000    0.886    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.674    0.674 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.006    0.006    0.030    0.030 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
