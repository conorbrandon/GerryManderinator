         4587438108 function calls (4587316069 primitive calls) in 1661.842 seconds
        1   11.310   11.310 1661.097 1661.097 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.437    0.001 1649.757    0.163 GerrymanderingMCMC.py:235(recombination_of_districts)
   340550    2.387    0.000 1028.181    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1362200    1.615    0.000  722.893    0.001 GerrymanderingMCMC.py:190(__district_size)
257109950  145.576    0.000  592.868    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10102    9.905    0.001  302.168    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.041    0.000   40.031    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.057    0.000   38.616    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   12.860    0.001   38.493    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.104    0.000   26.575    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.198    0.000   14.344    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.095    0.000    2.322    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.277    0.000    0.846    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.712    0.712 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
