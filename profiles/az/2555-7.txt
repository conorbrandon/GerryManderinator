         4883385239 function calls (4883263200 primitive calls) in 1748.025 seconds
        1   10.847   10.847 1747.324 1747.324 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.989    0.001 1736.432    0.172 GerrymanderingMCMC.py:235(recombination_of_districts)
   375513    2.545    0.000 1120.381    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1502052    1.749    0.000  788.357    0.001 GerrymanderingMCMC.py:190(__district_size)
282563126  157.027    0.000  645.760    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100    9.802    0.001  299.369    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.039    0.000   40.497    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.063    0.000   39.096    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   12.741    0.001   38.970    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.090    0.000   26.778    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.159    0.000   14.390    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.089    0.000    2.218    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.279    0.000    0.873    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.669    0.669 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
