         4447762898 function calls (4447640859 primitive calls) in 1616.565 seconds
        1   11.682   11.682 1615.837 1615.837 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.253    0.001 1604.121    0.159 GerrymanderingMCMC.py:235(recombination_of_districts)
   333102    2.288    0.000  978.721    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1332408    1.611    0.000  688.195    0.001 GerrymanderingMCMC.py:190(__district_size)
244629712  138.004    0.000  563.995    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10101    9.959    0.001  303.356    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.040    0.000   40.685    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.057    0.000   39.268    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.139    0.001   39.143    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.097    0.000   26.889    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.201    0.000   14.378    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.094    0.000    2.296    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.280    0.000    0.867    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.696    0.696 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
