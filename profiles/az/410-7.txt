         4977452694 function calls (4977330655 primitive calls) in 1809.399 seconds
        1   11.292   11.292 1808.692 1808.692 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    6.113    0.001 1797.370    0.178 GerrymanderingMCMC.py:235(recombination_of_districts)
   365386    2.517    0.000 1165.615    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1461544    1.857    0.000  820.754    0.001 GerrymanderingMCMC.py:190(__district_size)
289630900  168.927    0.000  670.718    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   10.184    0.001  309.845    0.031 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.042    0.000   40.763    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.056    0.000   39.352    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.322    0.001   39.232    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.096    0.000   26.997    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.253    0.000   14.791    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.097    0.000    2.287    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.285    0.000    0.874    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.677    0.677 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.006    0.006    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
