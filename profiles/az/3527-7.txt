         5087206884 function calls (5087084845 primitive calls) in 1818.318 seconds
        1   11.266   11.266 1817.514 1817.514 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    6.182    0.001 1806.220    0.179 GerrymanderingMCMC.py:235(recombination_of_districts)
   391549    2.749    0.000 1187.302    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1566196    1.859    0.000  835.576    0.001 GerrymanderingMCMC.py:190(__district_size)
299848046  168.210    0.000  686.943    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10101    9.689    0.001  299.566    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.040    0.000   40.054    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.055    0.000   38.662    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   12.954    0.001   38.544    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.091    0.000   26.521    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.197    0.000   14.327    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.089    0.000    2.209    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.278    0.000    0.845    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.771    0.771 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
