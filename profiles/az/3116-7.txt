         4637219434 function calls (4637097395 primitive calls) in 1677.256 seconds
        1   11.739   11.739 1676.524 1676.524 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.556    0.001 1664.755    0.165 GerrymanderingMCMC.py:235(recombination_of_districts)
   349591    2.339    0.000 1047.089    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1398364    1.638    0.000  737.748    0.001 GerrymanderingMCMC.py:190(__district_size)
262206944  147.564    0.000  604.214    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10101    9.754    0.001  295.883    0.029 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.040    0.000   40.844    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.059    0.000   39.423    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.225    0.001   39.296    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.092    0.000   27.032    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.183    0.000   14.284    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.094    0.000    2.247    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.280    0.000    0.862    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.699    0.699 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
