         5628877877 function calls (5628755838 primitive calls) in 2006.774 seconds
        1   11.284   11.284 2006.038 2006.038 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    7.165    0.001 1994.725    0.197 GerrymanderingMCMC.py:235(recombination_of_districts)
   439889    3.049    0.000 1371.776    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1759556    2.107    0.000  963.803    0.001 GerrymanderingMCMC.py:190(__district_size)
346189714  195.667    0.000  789.779    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10101    9.802    0.001  301.742    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.048    0.000   40.357    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.059    0.000   38.956    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.235    0.001   38.833    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.106    0.000   26.836    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.221    0.000   14.452    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.089    0.000    2.195    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.284    0.000    0.860    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.705    0.705 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
