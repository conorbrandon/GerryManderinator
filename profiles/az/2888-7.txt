         5183882163 function calls (5183760124 primitive calls) in 1865.526 seconds
        1   10.963   10.963 1864.821 1864.821 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    6.450    0.001 1853.816    0.184 GerrymanderingMCMC.py:235(recombination_of_districts)
   401610    2.794    0.000 1231.323    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1606440    1.867    0.000  866.854    0.001 GerrymanderingMCMC.py:190(__district_size)
307980056  174.101    0.000  711.600    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   10.114    0.001  302.183    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.041    0.000   40.260    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.054    0.000   38.865    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.297    0.001   38.735    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.105    0.000   26.765    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.197    0.000   14.461    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.089    0.000    2.216    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.298    0.000    0.885    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.672    0.672 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
