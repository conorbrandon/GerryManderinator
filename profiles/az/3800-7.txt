         4461227573 function calls (4461105534 primitive calls) in 1626.492 seconds
        1   12.528   12.528 1625.705 1625.705 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.280    0.001 1613.148    0.160 GerrymanderingMCMC.py:235(recombination_of_districts)
   332076    2.351    0.000  981.337    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1328304    1.600    0.000  688.863    0.001 GerrymanderingMCMC.py:190(__district_size)
245912444  136.433    0.000  564.242    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10101   10.025    0.001  305.638    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.043    0.000   40.997    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.061    0.000   39.579    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.322    0.001   39.448    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.097    0.000   27.093    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.209    0.000   14.478    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.097    0.000    2.297    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.304    0.000    0.880    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.754    0.754 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
