         5471606981 function calls (5471484942 primitive calls) in 1941.804 seconds
        1   11.062   11.062 1941.106 1941.106 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    6.827    0.001 1930.016    0.191 GerrymanderingMCMC.py:235(recombination_of_districts)
   422896    2.932    0.000 1311.181    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1691584    2.023    0.000  920.774    0.001 GerrymanderingMCMC.py:190(__district_size)
332772752  185.886    0.000  753.133    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100    9.684    0.001  298.802    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.040    0.000   39.990    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.055    0.000   38.589    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   12.697    0.001   38.472    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.089    0.000   26.551    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.153    0.000   14.398    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.093    0.000    2.183    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.279    0.000    0.884    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.665    0.665 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
