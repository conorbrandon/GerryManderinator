         4548497628 function calls (4548375589 primitive calls) in 1631.831 seconds
        1   10.910   10.910 1631.124 1631.124 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.325    0.001 1620.186    0.160 GerrymanderingMCMC.py:235(recombination_of_districts)
   331435    2.341    0.000 1001.427    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1325740    1.555    0.000  703.791    0.001 GerrymanderingMCMC.py:190(__district_size)
253648606  141.191    0.000  576.525    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100    9.992    0.001  299.928    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.043    0.000   39.960    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.055    0.000   38.538    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   12.865    0.001   38.422    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.102    0.000   26.406    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.168    0.000   14.184    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.089    0.000    2.167    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.267    0.000    0.814    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.675    0.675 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
