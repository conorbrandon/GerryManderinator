         4359567133 function calls (4359445094 primitive calls) in 1584.638 seconds
        1   11.331   11.331 1583.860 1583.860 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.110    0.001 1572.482    0.156 GerrymanderingMCMC.py:235(recombination_of_districts)
   325814    2.264    0.000  950.236    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1303256    1.557    0.000  666.473    0.001 GerrymanderingMCMC.py:190(__district_size)
237622296  133.132    0.000  545.657    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10101    9.799    0.001  302.031    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.045    0.000   40.458    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.057    0.000   39.014    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.079    0.001   38.883    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.106    0.000   26.816    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.155    0.000   14.379    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.099    0.000    2.260    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.278    0.000    0.866    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.745    0.745 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
