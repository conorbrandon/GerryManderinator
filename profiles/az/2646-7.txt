         5149909805 function calls (5149787766 primitive calls) in 1866.103 seconds
        1   12.524   12.524 1865.372 1865.372 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    6.379    0.001 1852.818    0.183 GerrymanderingMCMC.py:235(recombination_of_districts)
   389017    2.628    0.000 1217.199    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1556068    1.880    0.000  854.123    0.001 GerrymanderingMCMC.py:190(__district_size)
304697766  173.546    0.000  699.069    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10102   10.279    0.001  309.776    0.031 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.042    0.000   40.882    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.061    0.000   39.399    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.353    0.001   39.256    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.118    0.000   27.006    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.259    0.000   14.632    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.102    0.000    2.345    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.285    0.000    0.849    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.698    0.698 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.006    0.006    0.030    0.030 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
