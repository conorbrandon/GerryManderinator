         4828167378 function calls (4828045339 primitive calls) in 1758.425 seconds
        1   11.170   11.170 1757.594 1757.594 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.828    0.001 1746.393    0.173 GerrymanderingMCMC.py:235(recombination_of_districts)
   365786    2.547    0.000 1122.890    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1463144    1.783    0.000  791.835    0.001 GerrymanderingMCMC.py:190(__district_size)
278016040  159.552    0.000  647.952    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10103   10.031    0.001  303.259    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.040    0.000   40.925    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.056    0.000   39.529    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.090    0.001   39.409    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.092    0.000   27.110    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.188    0.000   14.418    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.093    0.000    2.211    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.280    0.000    0.882    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.796    0.796 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.006    0.006    0.030    0.030 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
