         4874467803 function calls (4874345764 primitive calls) in 1764.174 seconds
        1   11.452   11.452 1763.103 1763.103 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    6.108    0.001 1751.621    0.173 GerrymanderingMCMC.py:235(recombination_of_districts)
   369805    2.617    0.000 1120.005    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1479220    1.791    0.000  785.258    0.001 GerrymanderingMCMC.py:190(__district_size)
281057244  158.976    0.000  643.137    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10101   10.194    0.001  306.624    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.042    0.000   40.014    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.056    0.000   38.563    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   12.807    0.001   38.414    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.092    0.000   26.606    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.203    0.000   14.498    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.090    0.000    2.244    0.000 GerrymanderingMCMC.py:157(__random_district_label)
        1    0.000    0.000    1.038    1.038 GerrymanderingMCMC.py:1(<module>)
    10100    0.311    0.000    0.870    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.030    0.030 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.007    0.007 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
