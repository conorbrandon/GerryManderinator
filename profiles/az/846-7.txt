         5047791905 function calls (5047669866 primitive calls) in 1837.448 seconds
        1   11.556   11.556 1836.742 1836.742 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    6.149    0.001 1825.156    0.181 GerrymanderingMCMC.py:235(recombination_of_districts)
   376954    2.720    0.000 1192.722    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1507816    1.808    0.000  840.585    0.001 GerrymanderingMCMC.py:190(__district_size)
295886392  168.047    0.000  688.409    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10102   10.016    0.001  306.097    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.042    0.000   41.126    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.059    0.000   39.680    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.180    0.001   39.553    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.098    0.000   27.256    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.254    0.000   14.722    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.095    0.000    2.317    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.283    0.000    0.878    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.673    0.673 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.006    0.006    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
