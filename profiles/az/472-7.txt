         5116860998 function calls (5116738959 primitive calls) in 1867.905 seconds
        1   11.220   11.220 1866.995 1866.995 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    6.409    0.001 1855.744    0.184 GerrymanderingMCMC.py:235(recombination_of_districts)
   389327    2.725    0.000 1224.235    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1557308    1.884    0.000  861.854    0.001 GerrymanderingMCMC.py:190(__district_size)
302710734  172.801    0.000  705.461    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10102   10.110    0.001  305.188    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.040    0.000   40.829    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.058    0.000   39.418    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.330    0.001   39.296    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.091    0.000   27.108    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.223    0.000   14.531    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.093    0.000    2.239    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.285    0.000    0.895    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.877    0.877 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
