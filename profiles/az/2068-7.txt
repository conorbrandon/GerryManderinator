         4798679439 function calls (4798557400 primitive calls) in 1736.267 seconds
        1   11.375   11.375 1735.565 1735.565 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.918    0.001 1724.161    0.171 GerrymanderingMCMC.py:235(recombination_of_districts)
   360497    2.489    0.000 1095.816    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1441988    1.696    0.000  770.366    0.001 GerrymanderingMCMC.py:190(__district_size)
274634460  155.293    0.000  632.131    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10101    9.833    0.001  304.270    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.041    0.000   40.721    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.058    0.000   39.253    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.068    0.001   39.127    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.096    0.000   27.089    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.190    0.000   14.450    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.096    0.000    2.318    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.283    0.000    0.863    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.670    0.670 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
