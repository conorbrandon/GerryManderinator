         5217620937 function calls (5217498898 primitive calls) in 1886.841 seconds
        1   11.010   11.010 1886.054 1886.054 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    6.541    0.001 1874.995    0.186 GerrymanderingMCMC.py:235(recombination_of_districts)
   400058    2.816    0.000 1247.058    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1600232    1.882    0.000  878.152    0.001 GerrymanderingMCMC.py:190(__district_size)
310656184  177.824    0.000  720.541    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   10.011    0.001  305.207    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.041    0.000   40.466    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.056    0.000   39.021    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.067    0.001   38.898    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.100    0.000   26.837    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.210    0.000   14.606    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.097    0.000    2.293    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.297    0.000    0.878    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.755    0.755 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
