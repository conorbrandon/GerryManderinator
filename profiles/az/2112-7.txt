         5000015145 function calls (4999893106 primitive calls) in 1821.476 seconds
        1   11.592   11.592 1820.728 1820.728 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    6.226    0.001 1809.107    0.179 GerrymanderingMCMC.py:235(recombination_of_districts)
   387445    2.746    0.000 1181.561    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1549780    1.886    0.000  831.164    0.001 GerrymanderingMCMC.py:190(__district_size)
292447332  167.935    0.000  680.245    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10103    9.895    0.001  304.170    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.040    0.000   41.285    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.057    0.000   39.864    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.502    0.001   39.742    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.093    0.000   27.256    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.253    0.000   14.620    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.106    0.000    2.249    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.291    0.000    0.878    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.716    0.716 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.006    0.006    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
