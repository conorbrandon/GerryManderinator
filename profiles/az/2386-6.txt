         4993771377 function calls (4993649338 primitive calls) in 1795.508 seconds
        1   11.686   11.686 1794.775 1794.775 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    6.240    0.001 1783.060    0.177 GerrymanderingMCMC.py:235(recombination_of_districts)
   386869    2.748    0.000 1158.233    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1547476    1.827    0.000  813.823    0.001 GerrymanderingMCMC.py:190(__district_size)
291996272  161.946    0.000  664.975    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10101    9.813    0.001  301.394    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.041    0.000   40.407    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.057    0.000   38.991    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   12.965    0.001   38.863    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.094    0.000   26.624    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.187    0.000   14.305    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.095    0.000    2.288    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.274    0.000    0.830    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.701    0.701 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
