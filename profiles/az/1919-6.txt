         4667939247 function calls (4667817208 primitive calls) in 1682.246 seconds
        1   11.022   11.022 1680.828 1680.828 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.593    0.001 1669.777    0.165 GerrymanderingMCMC.py:235(recombination_of_districts)
   343728    2.471    0.000 1047.251    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1374912    1.703    0.000  737.528    0.001 GerrymanderingMCMC.py:190(__district_size)
263838328  149.285    0.000  603.298    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10102    9.852    0.001  303.002    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.047    0.000   40.368    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.055    0.000   38.950    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   12.974    0.001   38.829    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.092    0.000   26.805    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.153    0.000   14.253    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.088    0.000    2.178    0.000 GerrymanderingMCMC.py:157(__random_district_label)
        1    0.000    0.000    1.356    1.356 GerrymanderingMCMC.py:1(<module>)
    10100    0.274    0.000    0.915    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.063    0.063 GerrymanderingMCMC.py:21(__init__)
        1    0.012    0.012    0.063    0.063 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.011    0.011 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
