         4423822166 function calls (4423700127 primitive calls) in 1598.112 seconds
        1   10.779   10.779 1594.437 1594.437 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.174    0.001 1583.621    0.157 GerrymanderingMCMC.py:235(recombination_of_districts)
   326685    2.291    0.000  964.019    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1306740    1.570    0.000  671.681    0.001 GerrymanderingMCMC.py:190(__district_size)
243184454  135.255    0.000  549.721    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10103    9.714    0.001  298.643    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.040    0.000   39.992    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.057    0.000   38.602    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   12.815    0.001   38.479    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.095    0.000   26.604    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.113    0.000   14.393    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
        1    0.000    0.000    3.622    3.622 GerrymanderingMCMC.py:1(<module>)
    30300    0.095    0.000    2.249    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.270    0.000    0.831    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.034    0.034 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.034    0.034 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.011    0.011 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
