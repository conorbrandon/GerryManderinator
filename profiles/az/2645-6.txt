         4717998045 function calls (4717876006 primitive calls) in 1707.379 seconds
        1   11.828   11.828 1706.681 1706.681 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.794    0.001 1694.820    0.168 GerrymanderingMCMC.py:235(recombination_of_districts)
   356470    2.437    0.000 1066.422    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1425880    1.714    0.000  749.753    0.001 GerrymanderingMCMC.py:190(__district_size)
268199152  151.073    0.000  615.429    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   10.166    0.001  305.440    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.040    0.000   40.549    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.057    0.000   39.131    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.149    0.001   39.010    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.093    0.000   26.925    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.192    0.000   14.328    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.093    0.000    2.246    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.287    0.000    0.853    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.666    0.666 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
