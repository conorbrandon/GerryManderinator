         4521151822 function calls (4521029783 primitive calls) in 1641.414 seconds
        1   11.288   11.288 1640.627 1640.627 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.383    0.001 1629.250    0.161 GerrymanderingMCMC.py:235(recombination_of_districts)
   344622    2.365    0.000 1004.836    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1378488    1.661    0.000  706.305    0.001 GerrymanderingMCMC.py:190(__district_size)
252166418  141.012    0.000  579.187    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   10.243    0.001  301.308    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.039    0.000   40.561    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.057    0.000   39.142    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.132    0.001   39.018    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.097    0.000   26.771    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.107    0.000   14.260    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.106    0.000    2.343    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.273    0.000    0.862    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.755    0.755 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
