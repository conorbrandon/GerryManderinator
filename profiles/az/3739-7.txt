         4680490540 function calls (4680368501 primitive calls) in 1673.828 seconds
        1   11.143   11.143 1673.093 1673.093 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.574    0.001 1661.919    0.165 GerrymanderingMCMC.py:235(recombination_of_districts)
   351276    2.410    0.000 1044.218    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1405104    1.708    0.000  731.603    0.001 GerrymanderingMCMC.py:190(__district_size)
264596316  147.472    0.000  599.319    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10101    9.762    0.001  299.869    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.049    0.000   39.923    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.055    0.000   38.509    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   12.976    0.001   38.386    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.089    0.000   26.481    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.240    0.000   14.365    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.094    0.000    2.181    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.294    0.000    0.878    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.703    0.703 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
