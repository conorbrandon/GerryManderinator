         4226518358 function calls (4226396319 primitive calls) in 1529.454 seconds
        1   10.894   10.894 1528.685 1528.685 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    4.874    0.000 1517.763    0.150 GerrymanderingMCMC.py:235(recombination_of_districts)
   307433    2.093    0.000  896.308    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1229732    1.492    0.000  630.719    0.001 GerrymanderingMCMC.py:190(__district_size)
226058250  125.764    0.000  517.433    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10103    9.955    0.001  301.796    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.041    0.000   40.411    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.062    0.000   39.002    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.054    0.001   38.877    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.090    0.000   26.675    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.161    0.000   14.250    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.089    0.000    2.196    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.277    0.000    0.873    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.737    0.737 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
