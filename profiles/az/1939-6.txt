         5449793070 function calls (5449671031 primitive calls) in 1951.688 seconds
        1   11.086   11.086 1950.938 1950.938 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    6.776    0.001 1939.792    0.192 GerrymanderingMCMC.py:235(recombination_of_districts)
   412967    2.884    0.000 1312.263    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1651868    1.955    0.000  920.988    0.001 GerrymanderingMCMC.py:190(__district_size)
330363364  186.353    0.000  754.241    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10102    9.989    0.001  306.467    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.040    0.000   40.236    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.055    0.000   38.833    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   12.999    0.001   38.715    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.091    0.000   26.579    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.215    0.000   14.550    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.089    0.000    2.227    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.280    0.000    0.844    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.718    0.718 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
