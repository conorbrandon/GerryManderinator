         5230805233 function calls (5230683194 primitive calls) in 1894.437 seconds
        1   11.827   11.827 1893.733 1893.733 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    6.486    0.001 1881.878    0.186 GerrymanderingMCMC.py:235(recombination_of_districts)
   399619    2.779    0.000 1250.522    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1598476    1.900    0.000  879.295    0.001 GerrymanderingMCMC.py:190(__district_size)
312354340  175.907    0.000  721.038    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10103   10.127    0.001  305.388    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.042    0.000   40.944    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.058    0.000   39.495    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.161    0.001   39.372    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.093    0.000   27.171    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.195    0.000   14.496    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.091    0.000    2.270    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.284    0.000    0.865    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.672    0.672 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
