         4664655762 function calls (4664533723 primitive calls) in 1686.630 seconds
        1   11.392   11.392 1685.870 1685.870 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.544    0.001 1674.445    0.166 GerrymanderingMCMC.py:235(recombination_of_districts)
   347901    2.432    0.000 1052.098    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1391604    1.693    0.000  740.855    0.001 GerrymanderingMCMC.py:190(__district_size)
263732120  149.701    0.000  607.440    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10103   10.016    0.001  302.193    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.039    0.000   40.343    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.057    0.000   38.919    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.188    0.001   38.798    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.092    0.000   26.699    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.227    0.000   14.362    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.089    0.000    2.240    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.276    0.000    0.838    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.737    0.737 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.006    0.006    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
