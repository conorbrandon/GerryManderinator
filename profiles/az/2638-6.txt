         4400544268 function calls (4400422229 primitive calls) in 1603.914 seconds
        1   11.560   11.560 1603.172 1603.172 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.128    0.001 1591.576    0.158 GerrymanderingMCMC.py:235(recombination_of_districts)
   335312    2.332    0.000  965.346    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1341248    1.642    0.000  679.662    0.001 GerrymanderingMCMC.py:190(__district_size)
241248288  137.356    0.000  556.823    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100    9.871    0.001  302.373    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.041    0.000   40.392    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.056    0.000   38.994    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.047    0.001   38.872    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.092    0.000   26.641    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.169    0.000   14.337    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.091    0.000    2.255    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.271    0.000    0.827    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.709    0.709 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.030    0.030 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
