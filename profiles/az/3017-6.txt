         4393797057 function calls (4393675018 primitive calls) in 1597.566 seconds
        1   11.767   11.767 1596.816 1596.816 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.160    0.001 1585.017    0.157 GerrymanderingMCMC.py:235(recombination_of_districts)
   326978    2.294    0.000  954.428    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1307912    1.583    0.000  670.810    0.001 GerrymanderingMCMC.py:190(__district_size)
239906078  137.194    0.000  550.451    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10102   10.064    0.001  306.335    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.041    0.000   40.739    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.057    0.000   39.324    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.172    0.001   39.195    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.093    0.000   26.865    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.198    0.000   14.434    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.092    0.000    2.233    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.296    0.000    0.870    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.718    0.718 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
