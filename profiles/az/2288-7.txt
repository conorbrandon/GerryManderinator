         5105257627 function calls (5105135588 primitive calls) in 1816.111 seconds
        1   10.837   10.837 1815.376 1815.376 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    6.362    0.001 1804.476    0.179 GerrymanderingMCMC.py:235(recombination_of_districts)
   389500    2.655    0.000 1185.666    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1558000    1.803    0.000  832.045    0.001 GerrymanderingMCMC.py:190(__district_size)
301042838  168.470    0.000  682.835    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10102    9.955    0.001  301.272    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.053    0.000   39.866    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.055    0.000   38.478    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   12.853    0.001   38.361    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.091    0.000   26.607    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.164    0.000   14.237    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.084    0.000    2.164    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.286    0.000    0.852    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.719    0.719 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
