         4861111528 function calls (4860989489 primitive calls) in 1736.768 seconds
        1   11.113   11.113 1735.981 1735.981 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.947    0.001 1724.839    0.171 GerrymanderingMCMC.py:235(recombination_of_districts)
   375039    2.607    0.000 1105.546    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1500156    1.758    0.000  776.523    0.001 GerrymanderingMCMC.py:190(__district_size)
280764824  155.818    0.000  637.261    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10103    9.797    0.001  301.467    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.040    0.000   40.308    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.057    0.000   38.936    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   12.946    0.001   38.818    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.095    0.000   26.561    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.188    0.000   14.230    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.090    0.000    2.209    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.288    0.000    0.875    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.757    0.757 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.036    0.036 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.036    0.036 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
