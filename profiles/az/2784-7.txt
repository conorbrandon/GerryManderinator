         4462885989 function calls (4462763950 primitive calls) in 1610.139 seconds
        1   10.911   10.911 1609.350 1609.350 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.228    0.001 1598.410    0.158 GerrymanderingMCMC.py:235(recombination_of_districts)
   328879    2.305    0.000  983.153    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1315516    1.537    0.000  692.583    0.001 GerrymanderingMCMC.py:190(__district_size)
246397356  139.754    0.000  567.837    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   10.012    0.001  300.280    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.040    0.000   40.245    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.056    0.000   38.852    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   12.977    0.001   38.729    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.092    0.000   26.752    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.160    0.000   14.196    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.092    0.000    2.231    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.275    0.000    0.843    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.756    0.756 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
