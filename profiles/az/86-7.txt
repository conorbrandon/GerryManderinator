         5438780713 function calls (5438658674 primitive calls) in 1932.597 seconds
        1   10.945   10.945 1931.865 1931.865 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    6.738    0.001 1920.892    0.190 GerrymanderingMCMC.py:235(recombination_of_districts)
   420713    2.916    0.000 1295.288    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1682852    1.997    0.000  909.127    0.001 GerrymanderingMCMC.py:190(__district_size)
330082784  182.961    0.000  743.726    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10101    9.970    0.001  302.597    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.041    0.000   40.046    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.054    0.000   38.656    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   12.781    0.001   38.527    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.091    0.000   26.550    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.127    0.000   14.259    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.087    0.000    2.179    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.274    0.000    0.840    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.700    0.700 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
