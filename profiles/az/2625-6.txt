         4819827732 function calls (4819705693 primitive calls) in 1739.201 seconds
        1   11.391   11.391 1738.470 1738.470 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.852    0.001 1727.049    0.171 GerrymanderingMCMC.py:235(recombination_of_districts)
   365054    2.523    0.000 1098.675    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1460216    1.710    0.000  771.962    0.001 GerrymanderingMCMC.py:190(__district_size)
276827540  155.330    0.000  632.516    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10104   10.267    0.001  306.050    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.039    0.000   40.587    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.057    0.000   39.136    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.092    0.001   39.014    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.093    0.000   26.811    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.168    0.000   14.349    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.093    0.000    2.260    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.303    0.000    0.864    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.698    0.698 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
