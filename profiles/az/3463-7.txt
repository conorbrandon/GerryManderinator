         4759713581 function calls (4759591542 primitive calls) in 1711.553 seconds
        1   12.233   12.233 1710.782 1710.782 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.740    0.001 1698.518    0.168 GerrymanderingMCMC.py:235(recombination_of_districts)
   362765    2.437    0.000 1074.911    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1451060    1.706    0.000  754.892    0.001 GerrymanderingMCMC.py:190(__district_size)
272462094  150.516    0.000  617.272    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10103    9.869    0.001  299.782    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.042    0.000   40.215    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.058    0.000   38.772    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.138    0.001   38.648    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.095    0.000   26.717    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.136    0.000   14.088    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.096    0.000    2.269    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.286    0.000    0.858    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.739    0.739 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
