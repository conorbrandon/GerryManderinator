         4709831522 function calls (4709709483 primitive calls) in 1688.374 seconds
        1   11.131   11.131 1687.609 1687.609 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.638    0.001 1676.449    0.166 GerrymanderingMCMC.py:235(recombination_of_districts)
   358200    2.430    0.000 1058.351    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1432800    1.690    0.000  742.046    0.001 GerrymanderingMCMC.py:190(__district_size)
267952594  149.425    0.000  607.282    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10101    9.738    0.001  299.824    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.040    0.000   40.150    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.056    0.000   38.783    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   12.800    0.001   38.664    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.091    0.000   26.647    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.169    0.000   14.230    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.090    0.000    2.192    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.288    0.000    0.866    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.734    0.734 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
