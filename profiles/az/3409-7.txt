         4449509850 function calls (4449387811 primitive calls) in 1617.823 seconds
        1   11.587   11.587 1616.991 1616.991 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.286    0.001 1605.375    0.159 GerrymanderingMCMC.py:235(recombination_of_districts)
   332183    2.337    0.000  978.032    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1328732    1.571    0.000  686.477    0.001 GerrymanderingMCMC.py:190(__district_size)
245461638  136.697    0.000  562.645    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10104   10.106    0.001  304.470    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.042    0.000   40.230    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.057    0.000   38.830    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   12.990    0.001   38.708    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.097    0.000   26.700    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.198    0.000   14.411    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.091    0.000    2.271    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.355    0.000    0.915    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.799    0.799 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.030    0.030 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
