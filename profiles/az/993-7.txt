         4679543768 function calls (4679421729 primitive calls) in 1695.505 seconds
        1   11.384   11.384 1694.757 1694.757 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.565    0.001 1683.343    0.167 GerrymanderingMCMC.py:235(recombination_of_districts)
   348149    2.434    0.000 1058.566    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1392596    1.701    0.000  747.179    0.001 GerrymanderingMCMC.py:190(__district_size)
264711960  149.649    0.000  612.334    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10101    9.996    0.001  303.845    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.040    0.000   40.407    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.058    0.000   38.994    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.046    0.001   38.874    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.092    0.000   26.795    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.192    0.000   14.374    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.093    0.000    2.200    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.280    0.000    0.857    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.714    0.714 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.006    0.006    0.030    0.030 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
