         5411720837 function calls (5411598798 primitive calls) in 1920.215 seconds
        1   10.899   10.899 1919.433 1919.433 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    6.666    0.001 1908.504    0.189 GerrymanderingMCMC.py:235(recombination_of_districts)
   413402    2.934    0.000 1290.222    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1653608    1.928    0.000  908.401    0.001 GerrymanderingMCMC.py:190(__district_size)
327979200  185.098    0.000  746.155    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10102   10.002    0.001  299.285    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.041    0.000   39.807    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.057    0.000   38.373    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   12.888    0.001   38.232    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.094    0.000   26.310    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.194    0.000   14.151    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.104    0.000    2.243    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.288    0.000    0.847    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.750    0.750 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
