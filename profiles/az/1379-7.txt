         5178785248 function calls (5178663209 primitive calls) in 1882.408 seconds
        1   11.201   11.201 1881.673 1881.673 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    6.487    0.001 1870.442    0.185 GerrymanderingMCMC.py:235(recombination_of_districts)
   406802    2.862    0.000 1238.456    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1627208    1.949    0.000  870.493    0.001 GerrymanderingMCMC.py:190(__district_size)
307312380  174.147    0.000  711.791    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10102   10.215    0.001  306.904    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.039    0.000   41.092    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.056    0.000   39.663    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.216    0.001   39.544    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.093    0.000   27.149    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.240    0.000   14.581    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.094    0.000    2.241    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.281    0.000    0.853    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.707    0.707 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.006    0.006    0.030    0.030 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
