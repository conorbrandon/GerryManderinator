         4672666734 function calls (4672544695 primitive calls) in 1685.083 seconds
        1   11.358   11.358 1684.345 1684.345 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.637    0.001 1672.921    0.166 GerrymanderingMCMC.py:235(recombination_of_districts)
   353766    2.466    0.000 1054.894    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1415064    1.722    0.000  744.421    0.001 GerrymanderingMCMC.py:190(__district_size)
264410906  151.037    0.000  611.074    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100    9.980    0.001  298.998    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.040    0.000   40.629    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.055    0.000   39.216    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.123    0.001   39.096    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.092    0.000   26.840    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.165    0.000   14.234    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.090    0.000    2.199    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.281    0.000    0.866    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.705    0.705 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
