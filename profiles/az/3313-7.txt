         4943416196 function calls (4943294157 primitive calls) in 1792.197 seconds
        1   11.026   11.026 1791.499 1791.499 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    6.124    0.001 1780.442    0.176 GerrymanderingMCMC.py:235(recombination_of_districts)
   370981    2.600    0.000 1151.793    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1483924    1.789    0.000  809.921    0.001 GerrymanderingMCMC.py:190(__district_size)
286904796  164.239    0.000  663.006    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10102    9.979    0.001  305.903    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.040    0.000   40.475    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.057    0.000   39.046    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.133    0.001   38.921    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.097    0.000   26.893    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.192    0.000   14.551    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.095    0.000    2.299    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.281    0.000    0.855    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.667    0.667 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
