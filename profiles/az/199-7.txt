         4777350890 function calls (4777228851 primitive calls) in 1745.823 seconds
        1   11.568   11.568 1745.051 1745.051 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.899    0.001 1733.265    0.172 GerrymanderingMCMC.py:235(recombination_of_districts)
   361389    2.570    0.000 1098.109    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1445556    1.763    0.000  770.781    0.001 GerrymanderingMCMC.py:190(__district_size)
272855994  154.022    0.000  630.194    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   10.068    0.001  307.750    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.040    0.000   40.939    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.057    0.000   39.485    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.079    0.001   39.365    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.093    0.000   26.982    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.235    0.000   14.695    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.090    0.000    2.311    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.280    0.000    0.854    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.739    0.739 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.006    0.006    0.030    0.030 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
