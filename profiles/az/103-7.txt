         4594463357 function calls (4594341318 primitive calls) in 1650.597 seconds
        1   11.251   11.251 1649.862 1649.862 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.426    0.001 1638.540    0.162 GerrymanderingMCMC.py:235(recombination_of_districts)
   336010    2.345    0.000 1016.773    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1344040    1.581    0.000  716.070    0.001 GerrymanderingMCMC.py:190(__district_size)
256859450  146.408    0.000  586.809    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100    9.876    0.001  303.555    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.039    0.000   39.946    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.054    0.000   38.554    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   12.829    0.001   38.439    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.093    0.000   26.606    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.193    0.000   14.351    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.088    0.000    2.177    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.275    0.000    0.830    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.702    0.702 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
