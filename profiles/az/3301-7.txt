         5082409368 function calls (5082287329 primitive calls) in 1832.082 seconds
        1   11.725   11.725 1831.325 1831.325 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    6.313    0.001 1819.546    0.180 GerrymanderingMCMC.py:235(recombination_of_districts)
   396848    2.679    0.000 1193.259    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1587392    1.882    0.000  840.818    0.001 GerrymanderingMCMC.py:190(__district_size)
299815126  169.829    0.000  690.514    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10104   10.165    0.001  303.195    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.039    0.000   40.456    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.057    0.000   39.054    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.025    0.001   38.933    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.093    0.000   26.740    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.219    0.000   14.350    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.099    0.000    2.277    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.283    0.000    0.849    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.725    0.725 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
