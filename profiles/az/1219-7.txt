         4754687283 function calls (4754565244 primitive calls) in 1716.222 seconds
        1   11.539   11.539 1715.516 1715.516 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.764    0.001 1703.948    0.169 GerrymanderingMCMC.py:235(recombination_of_districts)
   358019    2.447    0.000 1076.074    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1432076    1.686    0.000  756.267    0.001 GerrymanderingMCMC.py:190(__district_size)
271182712  151.703    0.000  619.998    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10101    9.970    0.001  304.458    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.042    0.000   39.825    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.059    0.000   38.375    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   12.836    0.001   38.251    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.093    0.000   26.470    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.203    0.000   14.366    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.108    0.000    2.262    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.276    0.000    0.847    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.673    0.673 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
