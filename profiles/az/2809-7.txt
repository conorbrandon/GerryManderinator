         4335304850 function calls (4335182811 primitive calls) in 1582.591 seconds
        1   11.814   11.814 1581.889 1581.889 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.220    0.001 1570.029    0.155 GerrymanderingMCMC.py:235(recombination_of_districts)
   318298    2.276    0.000  940.414    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1273192    1.515    0.000  661.364    0.001 GerrymanderingMCMC.py:190(__district_size)
235466600  132.854    0.000  541.764    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10102   10.156    0.001  307.225    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.042    0.000   40.954    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.060    0.000   39.532    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.404    0.001   39.408    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.111    0.000   27.046    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.182    0.000   14.366    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.096    0.000    2.251    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.279    0.000    0.858    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.669    0.669 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
