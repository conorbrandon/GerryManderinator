         5007513055 function calls (5007391016 primitive calls) in 1795.700 seconds
        1   11.295   11.295 1794.931 1794.931 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    6.125    0.001 1783.606    0.177 GerrymanderingMCMC.py:235(recombination_of_districts)
   388735    2.688    0.000 1163.460    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1554940    1.897    0.000  817.637    0.001 GerrymanderingMCMC.py:190(__district_size)
293146270  165.298    0.000  670.612    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10101    9.803    0.001  300.699    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.040    0.000   40.149    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.057    0.000   38.753    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   12.942    0.001   38.629    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.112    0.000   26.513    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.155    0.000   14.262    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.102    0.000    2.275    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.275    0.000    0.838    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.736    0.736 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
