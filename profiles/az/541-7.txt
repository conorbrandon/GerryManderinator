         4893427847 function calls (4893305808 primitive calls) in 1795.406 seconds
        1   11.225   11.225 1794.523 1794.523 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.998    0.001 1783.233    0.177 GerrymanderingMCMC.py:235(recombination_of_districts)
   370154    2.594    0.000 1149.513    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1480616    1.757    0.000  803.646    0.001 GerrymanderingMCMC.py:190(__district_size)
282648914  161.234    0.000  659.180    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10101   10.053    0.001  307.809    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.050    0.000   41.072    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.057    0.000   39.604    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.134    0.001   39.480    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.112    0.000   27.271    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.189    0.000   14.929    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.095    0.000    2.332    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.282    0.000    0.855    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.850    0.850 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
