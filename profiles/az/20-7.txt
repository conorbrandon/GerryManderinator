         4553942377 function calls (4553820338 primitive calls) in 1617.374 seconds
        1   10.700   10.700 1613.694 1613.694 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.289    0.001 1602.959    0.159 GerrymanderingMCMC.py:235(recombination_of_districts)
   337689    2.354    0.000  993.574    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1350756    1.610    0.000  699.646    0.001 GerrymanderingMCMC.py:190(__district_size)
254322994  138.655    0.000  573.131    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100    9.591    0.001  295.823    0.029 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.040    0.000   39.562    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.056    0.000   38.176    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   12.675    0.001   38.055    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.097    0.000   26.261    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.092    0.000   13.990    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
        1    0.000    0.000    3.598    3.598 GerrymanderingMCMC.py:1(<module>)
    30300    0.090    0.000    2.211    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.276    0.000    0.849    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.058    0.058 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.057    0.057 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.035    0.035 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
