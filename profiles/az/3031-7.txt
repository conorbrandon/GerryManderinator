         4751082771 function calls (4750960732 primitive calls) in 1743.110 seconds
        1   11.282   11.282 1742.384 1742.384 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.867    0.001 1731.057    0.171 GerrymanderingMCMC.py:235(recombination_of_districts)
   357761    2.561    0.000 1107.016    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1431044    1.859    0.000  782.334    0.001 GerrymanderingMCMC.py:190(__district_size)
271398700  157.431    0.000  642.585    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100    9.921    0.001  303.024    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.042    0.000   41.164    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.057    0.000   39.767    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.455    0.001   39.643    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.095    0.000   27.185    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.205    0.000   14.550    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.096    0.000    2.284    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.287    0.000    0.864    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.694    0.694 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
