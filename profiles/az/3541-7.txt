         4787319285 function calls (4787197246 primitive calls) in 1730.026 seconds
        1   11.403   11.403 1729.267 1729.267 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.771    0.001 1717.819    0.170 GerrymanderingMCMC.py:235(recombination_of_districts)
   356654    2.485    0.000 1090.970    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1426616    1.715    0.000  767.512    0.001 GerrymanderingMCMC.py:190(__district_size)
274010140  154.221    0.000  627.780    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10102    9.961    0.001  304.642    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.040    0.000   40.762    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.056    0.000   39.356    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.138    0.001   39.235    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.093    0.000   26.921    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.151    0.000   14.330    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.103    0.000    2.246    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.278    0.000    0.869    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.725    0.725 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
