         4684087360 function calls (4683965321 primitive calls) in 1704.799 seconds
        1   11.754   11.754 1704.022 1704.022 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.581    0.001 1692.238    0.168 GerrymanderingMCMC.py:235(recombination_of_districts)
   348895    2.410    0.000 1062.677    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1395580    1.648    0.000  747.171    0.001 GerrymanderingMCMC.py:190(__district_size)
264768646  147.479    0.000  612.099    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10101   10.005    0.001  303.557    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.046    0.000   40.958    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.057    0.000   39.522    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.265    0.001   39.399    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.094    0.000   27.008    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.206    0.000   14.499    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.099    0.000    2.271    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.303    0.000    0.875    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.742    0.742 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.031    0.031 GerrymanderingMCMC.py:21(__init__)
        1    0.007    0.007    0.031    0.031 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
