         4778751072 function calls (4778629033 primitive calls) in 1709.422 seconds
        1   10.960   10.960 1708.620 1708.620 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.799    0.001 1697.615    0.168 GerrymanderingMCMC.py:235(recombination_of_districts)
   357864    2.574    0.000 1080.964    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1431456    1.702    0.000  762.242    0.001 GerrymanderingMCMC.py:190(__district_size)
273561686  151.242    0.000  624.973    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10103    9.887    0.001  299.322    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.039    0.000   39.970    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.057    0.000   38.581    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   12.796    0.001   38.456    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.094    0.000   26.454    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.156    0.000   14.138    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.093    0.000    2.268    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.270    0.000    0.834    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.772    0.772 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.033    0.033 GerrymanderingMCMC.py:21(__init__)
        1    0.006    0.006    0.033    0.033 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.007    0.007 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
