         5316519757 function calls (5316397718 primitive calls) in 1912.359 seconds
        1   10.965   10.965 1911.649 1911.649 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    6.580    0.001 1900.656    0.188 GerrymanderingMCMC.py:235(recombination_of_districts)
   404194    2.855    0.000 1275.115    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1616776    2.114    0.000  895.766    0.001 GerrymanderingMCMC.py:190(__district_size)
319180192  180.216    0.000  735.299    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10102    9.865    0.001  304.698    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.038    0.000   40.760    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.054    0.000   39.401    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.310    0.001   39.271    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.093    0.000   26.952    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.177    0.000   14.472    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.091    0.000    2.230    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.281    0.000    0.858    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.679    0.679 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
