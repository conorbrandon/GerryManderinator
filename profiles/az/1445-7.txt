         4779317399 function calls (4779195360 primitive calls) in 1726.580 seconds
        1   11.446   11.446 1725.820 1725.820 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.771    0.001 1714.345    0.170 GerrymanderingMCMC.py:235(recombination_of_districts)
   361723    2.518    0.000 1090.421    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1446892    1.745    0.000  765.754    0.001 GerrymanderingMCMC.py:190(__district_size)
273581092  153.608    0.000  628.241    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100    9.786    0.001  301.157    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.040    0.000   40.417    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.077    0.000   38.996    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.064    0.001   38.852    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.110    0.000   26.708    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.204    0.000   14.421    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.094    0.000    2.243    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.283    0.000    0.864    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.727    0.727 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.006    0.006    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
