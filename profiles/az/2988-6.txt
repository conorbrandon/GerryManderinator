         4755132533 function calls (4755010494 primitive calls) in 1719.285 seconds
        1   11.452   11.452 1718.532 1718.532 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.910    0.001 1707.051    0.169 GerrymanderingMCMC.py:235(recombination_of_districts)
   357751    2.427    0.000 1080.450    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1431004    1.701    0.000  759.851    0.001 GerrymanderingMCMC.py:190(__district_size)
271486300  152.919    0.000  623.305    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10102   10.057    0.001  302.652    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.045    0.000   40.479    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.057    0.000   39.046    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.048    0.001   38.920    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.093    0.000   26.714    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.162    0.000   14.422    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.092    0.000    2.278    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.282    0.000    0.855    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.721    0.721 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
