         5098207847 function calls (5098085808 primitive calls) in 1818.696 seconds
        1   11.483   11.483 1817.964 1817.964 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    6.198    0.001 1806.435    0.179 GerrymanderingMCMC.py:235(recombination_of_districts)
   386143    2.624    0.000 1185.038    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1544572    1.814    0.000  831.042    0.001 GerrymanderingMCMC.py:190(__district_size)
300436118  165.112    0.000  679.432    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10102    9.874    0.001  302.104    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.049    0.000   40.033    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.058    0.000   38.623    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   12.712    0.001   38.501    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.093    0.000   26.543    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.183    0.000   14.451    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.094    0.000    2.240    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.275    0.000    0.860    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.700    0.700 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
