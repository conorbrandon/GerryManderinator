         4445806683 function calls (4445684644 primitive calls) in 1608.107 seconds
        1   11.841   11.841 1607.358 1607.358 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.245    0.001 1595.488    0.158 GerrymanderingMCMC.py:235(recombination_of_districts)
   327576    2.177    0.000  971.481    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1310304    1.539    0.000  682.746    0.001 GerrymanderingMCMC.py:190(__district_size)
245401992  137.432    0.000  559.715    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100    9.817    0.001  300.825    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.041    0.000   40.536    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.066    0.000   39.118    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.153    0.001   38.984    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.103    0.000   26.957    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.159    0.000   14.176    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.097    0.000    2.252    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.293    0.000    0.854    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.716    0.716 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
