         4933521368 function calls (4933399329 primitive calls) in 1788.682 seconds
        1   11.086   11.086 1787.953 1787.953 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    6.030    0.001 1776.827    0.176 GerrymanderingMCMC.py:235(recombination_of_districts)
   375335    2.622    0.000 1150.765    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1501340    1.777    0.000  809.599    0.001 GerrymanderingMCMC.py:190(__district_size)
286905086  162.991    0.000  662.972    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10102    9.984    0.001  303.668    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.039    0.000   40.937    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.057    0.000   39.533    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.329    0.001   39.412    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.093    0.000   27.101    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.256    0.000   14.529    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.091    0.000    2.239    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.282    0.000    0.866    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.696    0.696 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.006    0.006    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
