         4947081767 function calls (4946959728 primitive calls) in 1773.998 seconds
        1   11.002   11.002 1773.273 1773.273 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    6.086    0.001 1762.232    0.174 GerrymanderingMCMC.py:235(recombination_of_districts)
   375619    2.560    0.000 1142.474    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1502476    1.787    0.000  803.203    0.001 GerrymanderingMCMC.py:190(__district_size)
287460910  163.311    0.000  657.708    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100    9.979    0.001  301.789    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.039    0.000   39.854    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.055    0.000   38.482    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   12.618    0.001   38.365    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.090    0.000   26.467    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.181    0.000   14.443    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.088    0.000    2.199    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.293    0.000    0.870    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.697    0.697 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.006    0.006    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
