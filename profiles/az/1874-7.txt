         4562101559 function calls (4561979520 primitive calls) in 1671.549 seconds
        1   10.998   10.998 1670.737 1670.737 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.442    0.001 1659.709    0.164 GerrymanderingMCMC.py:235(recombination_of_districts)
   338664    2.340    0.000 1030.601    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1354656    1.667    0.000  725.856    0.001 GerrymanderingMCMC.py:190(__district_size)
254897586  147.597    0.000  593.442    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10103   10.309    0.001  304.123    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.052    0.000   40.922    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.056    0.000   39.505    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.113    0.001   39.386    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.092    0.000   26.982    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.240    0.000   14.585    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.095    0.000    2.212    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.281    0.000    0.855    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.766    0.766 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.043    0.043 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.043    0.043 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
