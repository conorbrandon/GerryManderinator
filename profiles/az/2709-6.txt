         5485931500 function calls (5485809461 primitive calls) in 1974.309 seconds
        1   12.310   12.310 1973.574 1973.574 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    7.010    0.001 1961.230    0.194 GerrymanderingMCMC.py:235(recombination_of_districts)
   432776    2.970    0.000 1326.887    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1731104    2.032    0.000  934.196    0.001 GerrymanderingMCMC.py:190(__district_size)
334302294  188.056    0.000  766.401    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   10.205    0.001  306.798    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.043    0.000   40.539    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.059    0.000   39.088    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.163    0.001   38.960    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.095    0.000   26.767    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.264    0.000   14.467    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.098    0.000    2.355    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.289    0.000    0.873    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.703    0.703 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
