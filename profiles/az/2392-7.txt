         4749282542 function calls (4749160503 primitive calls) in 1714.524 seconds
        1   11.465   11.465 1713.817 1713.817 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.645    0.001 1702.321    0.169 GerrymanderingMCMC.py:235(recombination_of_districts)
   350834    2.436    0.000 1072.429    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1403336    1.665    0.000  755.537    0.001 GerrymanderingMCMC.py:190(__district_size)
269657180  153.149    0.000  618.248    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10101   10.131    0.001  308.467    0.031 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.039    0.000   40.662    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.056    0.000   39.231    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.226    0.001   39.109    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.093    0.000   27.039    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.212    0.000   14.528    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.092    0.000    2.295    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.286    0.000    0.855    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.674    0.674 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.006    0.006    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
