         4865006150 function calls (4864884111 primitive calls) in 1768.335 seconds
        1   11.164   11.164 1767.624 1767.624 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.948    0.001 1756.379    0.174 GerrymanderingMCMC.py:235(recombination_of_districts)
   373168    2.639    0.000 1128.059    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1492672    1.815    0.000  794.303    0.001 GerrymanderingMCMC.py:190(__district_size)
281217384  159.412    0.000  650.833    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10101   10.101    0.001  304.958    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.041    0.000   41.028    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.056    0.000   39.590    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.262    0.001   39.456    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.097    0.000   27.088    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.148    0.000   14.413    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.089    0.000    2.285    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.291    0.000    0.885    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.677    0.677 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.006    0.006    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
