         5472496445 function calls (5472374406 primitive calls) in 1949.486 seconds
        1   10.888   10.888 1945.814 1945.814 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    6.823    0.001 1934.892    0.192 GerrymanderingMCMC.py:235(recombination_of_districts)
   426195    3.017    0.000 1313.053    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1704780    2.026    0.000  923.671    0.001 GerrymanderingMCMC.py:190(__district_size)
332916074  185.592    0.000  758.840    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10103    9.910    0.001  302.874    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.042    0.000   40.087    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.055    0.000   38.690    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   12.973    0.001   38.572    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.091    0.000   26.572    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.194    0.000   14.302    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
        1    0.000    0.000    3.622    3.622 GerrymanderingMCMC.py:1(<module>)
    30300    0.089    0.000    2.248    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.276    0.000    0.852    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.034    0.034 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.033    0.033 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.011    0.011 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
