         4630014360 function calls (4629892321 primitive calls) in 1672.338 seconds
        1   11.144   11.144 1671.586 1671.586 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.571    0.001 1660.361    0.164 GerrymanderingMCMC.py:235(recombination_of_districts)
   345555    2.405    0.000 1037.865    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1382220    1.648    0.000  729.557    0.001 GerrymanderingMCMC.py:190(__district_size)
260660136  144.875    0.000  596.825    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10103    9.759    0.001  301.338    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.041    0.000   40.659    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.056    0.000   39.234    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.058    0.001   39.110    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.102    0.000   26.864    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.203    0.000   14.463    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.092    0.000    2.321    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.280    0.000    0.849    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.719    0.719 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.006    0.006    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
