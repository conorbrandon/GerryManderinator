         4899774650 function calls (4899652611 primitive calls) in 1775.557 seconds
        1   11.271   11.271 1774.774 1774.774 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.960    0.001 1763.467    0.175 GerrymanderingMCMC.py:235(recombination_of_districts)
   365855    2.525    0.000 1139.272    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1463420    1.788    0.000  800.758    0.001 GerrymanderingMCMC.py:190(__district_size)
283932622  159.099    0.000  654.286    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10101    9.856    0.001  302.727    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.039    0.000   40.707    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.056    0.000   39.304    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   12.950    0.001   39.185    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.091    0.000   27.127    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.176    0.000   14.443    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.089    0.000    2.227    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.283    0.000    0.873    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.751    0.751 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
