         4989332199 function calls (4989210160 primitive calls) in 1796.409 seconds
        1   11.406   11.406 1795.661 1795.661 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    6.084    0.001 1784.226    0.177 GerrymanderingMCMC.py:235(recombination_of_districts)
   378659    2.663    0.000 1158.564    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1514636    1.794    0.000  813.492    0.001 GerrymanderingMCMC.py:190(__district_size)
291700440  163.125    0.000  666.576    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10101    9.981    0.001  303.106    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.041    0.000   40.477    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.057    0.000   39.081    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   12.999    0.001   38.959    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.093    0.000   26.862    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.219    0.000   14.491    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.091    0.000    2.224    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.279    0.000    0.843    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.721    0.721 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.007    0.007 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
