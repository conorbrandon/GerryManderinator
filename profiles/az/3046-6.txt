         5143731806 function calls (5143609767 primitive calls) in 1847.496 seconds
        1   11.391   11.391 1846.787 1846.787 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    6.281    0.001 1834.107    0.182 GerrymanderingMCMC.py:235(recombination_of_districts)
   393058    2.788    0.000 1203.299    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1572232    1.858    0.000  843.096    0.001 GerrymanderingMCMC.py:190(__district_size)
304127680  167.774    0.000  690.408    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10101   10.047    0.001  306.826    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.041    0.000   40.099    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.056    0.000   38.632    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   12.961    0.001   38.512    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.092    0.000   26.726    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.194    0.000   14.472    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.092    0.000    2.254    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.278    0.000    0.848    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.676    0.676 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
