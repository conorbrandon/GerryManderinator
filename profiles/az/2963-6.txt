         4461863204 function calls (4461741165 primitive calls) in 1614.398 seconds
        1   11.006   11.006 1613.703 1613.703 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.304    0.001 1602.629    0.159 GerrymanderingMCMC.py:235(recombination_of_districts)
   331009    2.288    0.000  979.528    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1324036    1.591    0.000  688.973    0.001 GerrymanderingMCMC.py:190(__district_size)
246175218  138.930    0.000  564.327    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10101    9.834    0.001  303.054    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.046    0.000   40.439    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.054    0.000   39.039    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.074    0.001   38.922    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.090    0.000   26.749    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.160    0.000   14.235    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.088    0.000    2.197    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.282    0.000    0.861    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.672    0.672 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
