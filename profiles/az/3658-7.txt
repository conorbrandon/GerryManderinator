         4676308442 function calls (4676186403 primitive calls) in 1684.438 seconds
        1   10.874   10.874 1683.696 1683.696 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.551    0.001 1672.794    0.166 GerrymanderingMCMC.py:235(recombination_of_districts)
   352758    2.457    0.000 1053.710    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1411032    1.655    0.000  741.341    0.001 GerrymanderingMCMC.py:190(__district_size)
264610048  149.081    0.000  607.161    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10101    9.772    0.001  301.126    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.041    0.000   40.368    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.068    0.000   38.978    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.028    0.001   38.849    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.094    0.000   26.769    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.176    0.000   14.277    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.089    0.000    2.223    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.295    0.000    0.861    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.709    0.709 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.006    0.006    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
