         4890864685 function calls (4890742646 primitive calls) in 1752.063 seconds
        1   11.062   11.062 1751.353 1751.353 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.935    0.001 1740.262    0.172 GerrymanderingMCMC.py:235(recombination_of_districts)
   370637    2.568    0.000 1114.434    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1482548    1.727    0.000  782.829    0.001 GerrymanderingMCMC.py:190(__district_size)
282328194  157.142    0.000  641.287    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10103   10.034    0.001  305.406    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.041    0.000   40.092    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.056    0.000   38.684    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   12.979    0.001   38.564    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.091    0.000   26.520    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.161    0.000   14.391    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.091    0.000    2.236    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.289    0.000    0.868    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.677    0.677 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.006    0.006    0.030    0.030 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
