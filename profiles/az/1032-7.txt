         5003003407 function calls (5002881368 primitive calls) in 1804.257 seconds
        1   11.933   11.933 1803.489 1803.489 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    6.159    0.001 1791.529    0.177 GerrymanderingMCMC.py:235(recombination_of_districts)
   387743    2.696    0.000 1162.756    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1550972    1.877    0.000  817.220    0.001 GerrymanderingMCMC.py:190(__district_size)
292855852  165.531    0.000  668.339    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10104    9.977    0.001  300.758    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.040    0.000   41.194    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.057    0.000   39.780    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.037    0.001   39.652    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.094    0.000   27.100    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.169    0.000   14.467    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.094    0.000    2.254    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.282    0.000    0.859    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.735    0.735 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.030    0.030 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
