         4594452343 function calls (4594330304 primitive calls) in 1653.263 seconds
        1   11.105   11.105 1652.547 1652.547 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.503    0.001 1641.410    0.163 GerrymanderingMCMC.py:235(recombination_of_districts)
   345214    2.389    0.000 1021.232    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1380856    1.659    0.000  717.069    0.001 GerrymanderingMCMC.py:190(__district_size)
257500754  142.895    0.000  587.935    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10101    9.990    0.001  302.129    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.040    0.000   40.362    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.056    0.000   38.931    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   12.994    0.001   38.813    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.091    0.000   26.713    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.125    0.000   14.375    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.089    0.000    2.202    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.276    0.000    0.841    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.683    0.683 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
