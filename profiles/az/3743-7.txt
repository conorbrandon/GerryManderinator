         5201817410 function calls (5201695371 primitive calls) in 1874.182 seconds
        1   11.349   11.349 1873.472 1873.472 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    6.488    0.001 1862.094    0.184 GerrymanderingMCMC.py:235(recombination_of_districts)
   407287    2.904    0.000 1233.888    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1629148    1.917    0.000  868.180    0.001 GerrymanderingMCMC.py:190(__district_size)
309805194  175.390    0.000  711.424    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10102   10.101    0.001  304.593    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.041    0.000   40.300    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.057    0.000   38.869    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   12.944    0.001   38.744    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.094    0.000   26.671    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.231    0.000   14.414    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.096    0.000    2.244    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.287    0.000    0.861    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.677    0.677 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.006    0.006    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
