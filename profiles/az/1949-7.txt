         5222223228 function calls (5222101189 primitive calls) in 1883.758 seconds
        1   10.992   10.992 1882.988 1882.988 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    6.547    0.001 1871.926    0.185 GerrymanderingMCMC.py:235(recombination_of_districts)
   401425    2.851    0.000 1242.689    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1605700    1.923    0.000  873.762    0.001 GerrymanderingMCMC.py:190(__district_size)
311015662  176.081    0.000  716.760    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10103    9.898    0.001  305.990    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.040    0.000   40.715    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.058    0.000   39.325    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.279    0.001   39.191    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.091    0.000   26.987    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.195    0.000   14.508    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.089    0.000    2.206    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.283    0.000    0.863    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.737    0.737 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
