         5406353464 function calls (5406231425 primitive calls) in 1968.785 seconds
        1   11.394   11.394 1968.031 1968.031 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    6.894    0.001 1956.604    0.194 GerrymanderingMCMC.py:235(recombination_of_districts)
   428781    3.063    0.000 1327.635    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1715124    2.084    0.000  932.151    0.001 GerrymanderingMCMC.py:190(__district_size)
327761438  190.179    0.000  761.247    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10104    9.834    0.001  303.856    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.042    0.000   41.105    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.056    0.000   39.656    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.482    0.001   39.537    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.094    0.000   27.184    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.252    0.000   14.640    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.100    0.000    2.259    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.287    0.000    0.879    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.722    0.722 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
