         4604777980 function calls (4604655941 primitive calls) in 1661.247 seconds
        1   11.588   11.588 1660.491 1660.491 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.468    0.001 1648.874    0.163 GerrymanderingMCMC.py:235(recombination_of_districts)
   339385    2.423    0.000 1023.515    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1357540    1.646    0.000  719.068    0.001 GerrymanderingMCMC.py:190(__district_size)
258522474  143.708    0.000  589.440    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   10.102    0.001  303.779    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.042    0.000   40.636    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.057    0.000   39.213    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.162    0.001   39.090    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.093    0.000   26.850    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.187    0.000   14.388    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.111    0.000    2.297    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.278    0.000    0.848    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.722    0.722 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.031    0.031 GerrymanderingMCMC.py:21(__init__)
        1    0.006    0.006    0.030    0.030 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
