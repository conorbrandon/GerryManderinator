         5096747744 function calls (5096625705 primitive calls) in 1850.941 seconds
        1   11.464   11.464 1850.215 1850.215 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    6.317    0.001 1838.714    0.182 GerrymanderingMCMC.py:235(recombination_of_districts)
   387442    2.816    0.000 1207.126    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1549768    1.910    0.000  850.446    0.001 GerrymanderingMCMC.py:190(__district_size)
300579952  170.220    0.000  696.994    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10101   10.123    0.001  308.399    0.031 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.049    0.000   41.089    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.058    0.000   39.596    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.305    0.001   39.471    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.093    0.000   27.112    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.241    0.000   14.555    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.102    0.000    2.376    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.281    0.000    0.852    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.694    0.694 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.028    0.028 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
