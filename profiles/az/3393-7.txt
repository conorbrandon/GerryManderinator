         4461820721 function calls (4461698682 primitive calls) in 1615.408 seconds
        1   11.002   11.002 1614.665 1614.665 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.325    0.001 1603.634    0.159 GerrymanderingMCMC.py:235(recombination_of_districts)
   327623    2.264    0.000  981.797    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1310492    1.541    0.000  691.236    0.001 GerrymanderingMCMC.py:190(__district_size)
246480096  140.042    0.000  567.709    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100    9.892    0.001  301.855    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.043    0.000   40.251    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.057    0.000   38.859    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.189    0.001   38.734    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.095    0.000   26.628    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.174    0.000   14.243    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.097    0.000    2.244    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.278    0.000    0.835    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.720    0.720 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
