         5104155257 function calls (5104033218 primitive calls) in 1842.576 seconds
        1   11.750   11.750 1841.855 1841.855 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    6.194    0.001 1830.053    0.181 GerrymanderingMCMC.py:235(recombination_of_districts)
   387887    2.646    0.000 1201.618    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1551548    1.842    0.000  845.321    0.001 GerrymanderingMCMC.py:190(__district_size)
300818510  172.794    0.000  693.670    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   10.197    0.001  305.925    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.041    0.000   40.870    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.059    0.000   39.446    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.346    0.001   39.319    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.094    0.000   26.976    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.217    0.000   14.513    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.094    0.000    2.341    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.287    0.000    0.867    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.688    0.688 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.006    0.006    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
