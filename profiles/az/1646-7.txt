         5000335073 function calls (5000213034 primitive calls) in 1811.497 seconds
        1   10.996   10.996 1810.719 1810.719 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    6.057    0.001 1799.694    0.178 GerrymanderingMCMC.py:235(recombination_of_districts)
   384467    2.683    0.000 1171.029    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1537868    1.841    0.000  823.636    0.001 GerrymanderingMCMC.py:190(__district_size)
292462290  166.864    0.000  676.820    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10102   10.025    0.001  306.587    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.041    0.000   40.811    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.055    0.000   39.394    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   12.934    0.001   39.276    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.094    0.000   27.031    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.213    0.000   14.593    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.090    0.000    2.219    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.312    0.000    0.885    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.745    0.745 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.006    0.006    0.030    0.030 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
