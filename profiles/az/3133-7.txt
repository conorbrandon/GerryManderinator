         4782490972 function calls (4782368933 primitive calls) in 1711.720 seconds
        1   10.903   10.903 1711.015 1711.015 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.719    0.001 1700.084    0.168 GerrymanderingMCMC.py:235(recombination_of_districts)
   365717    2.492    0.000 1082.056    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1462868    1.762    0.000  761.818    0.001 GerrymanderingMCMC.py:190(__district_size)
273954894  153.567    0.000  623.683    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100    9.791    0.001  301.336    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.038    0.000   39.877    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.055    0.000   38.476    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   12.882    0.001   38.358    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.090    0.000   26.446    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.137    0.000   14.130    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.095    0.000    2.179    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.286    0.000    0.869    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.673    0.673 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
