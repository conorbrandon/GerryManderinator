         5188271948 function calls (5188149909 primitive calls) in 1880.908 seconds
        1   11.220   11.220 1880.141 1880.141 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    6.527    0.001 1868.891    0.185 GerrymanderingMCMC.py:235(recombination_of_districts)
   411324    2.852    0.000 1240.567    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1645296    1.968    0.000  871.549    0.001 GerrymanderingMCMC.py:190(__district_size)
308698662  177.572    0.000  712.882    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10101   10.128    0.001  302.935    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.040    0.000   40.757    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.055    0.000   39.342    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.202    0.001   39.224    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.098    0.000   26.918    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.172    0.000   14.502    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.098    0.000    2.234    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.297    0.000    0.869    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.734    0.734 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.006    0.006    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
