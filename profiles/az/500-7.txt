         4571281381 function calls (4571159342 primitive calls) in 1676.503 seconds
        1   11.149   11.149 1675.440 1675.440 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.516    0.001 1664.214    0.165 GerrymanderingMCMC.py:235(recombination_of_districts)
   340559    2.398    0.000 1038.769    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1362236    1.663    0.000  730.721    0.001 GerrymanderingMCMC.py:190(__district_size)
255902296  147.210    0.000  599.965    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100    9.967    0.001  303.243    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.042    0.000   41.612    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.057    0.000   40.198    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.626    0.001   40.076    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.092    0.000   27.639    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.182    0.000   14.541    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.101    0.000    2.323    0.000 GerrymanderingMCMC.py:157(__random_district_label)
        1    0.000    0.000    1.043    1.043 GerrymanderingMCMC.py:1(<module>)
    10100    0.293    0.000    0.925    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.006    0.006    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
