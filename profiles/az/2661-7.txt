         4638694772 function calls (4638572733 primitive calls) in 1684.037 seconds
        1   11.309   11.309 1683.296 1683.296 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.645    0.001 1671.957    0.166 GerrymanderingMCMC.py:235(recombination_of_districts)
   348866    2.428    0.000 1044.862    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1395464    1.653    0.000  733.854    0.001 GerrymanderingMCMC.py:190(__district_size)
261338346  149.077    0.000  601.030    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   10.027    0.001  305.719    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.039    0.000   40.995    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.061    0.000   39.587    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.107    0.001   39.461    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.093    0.000   27.130    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.222    0.000   14.622    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.095    0.000    2.251    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.300    0.000    0.878    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.707    0.707 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
