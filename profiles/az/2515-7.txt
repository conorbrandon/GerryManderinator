         4682407722 function calls (4682285683 primitive calls) in 1696.427 seconds
        1   11.206   11.206 1695.722 1695.722 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.604    0.001 1684.484    0.167 GerrymanderingMCMC.py:235(recombination_of_districts)
   357698    2.508    0.000 1057.951    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1430792    1.733    0.000  743.067    0.001 GerrymanderingMCMC.py:190(__district_size)
265205424  146.946    0.000  609.308    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   10.004    0.001  304.369    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.040    0.000   41.124    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.057    0.000   39.702    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.428    0.001   39.579    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.097    0.000   27.226    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.207    0.000   14.435    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.096    0.000    2.283    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.294    0.000    0.899    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.665    0.665 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
