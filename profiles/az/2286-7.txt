         4752177118 function calls (4752055079 primitive calls) in 1710.055 seconds
        1   11.230   11.230 1709.278 1709.278 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.784    0.001 1698.018    0.168 GerrymanderingMCMC.py:235(recombination_of_districts)
   360745    2.425    0.000 1071.944    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1442980    1.726    0.000  753.251    0.001 GerrymanderingMCMC.py:190(__district_size)
271056844  151.611    0.000  617.829    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10104    9.978    0.001  304.626    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.039    0.000   40.180    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.057    0.000   38.767    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   12.978    0.001   38.646    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.092    0.000   26.747    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.181    0.000   14.354    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.106    0.000    2.262    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.293    0.000    0.861    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.745    0.745 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
