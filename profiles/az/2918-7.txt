         4738135172 function calls (4738013133 primitive calls) in 1718.472 seconds
        1   11.272   11.272 1717.694 1717.694 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.671    0.001 1706.392    0.169 GerrymanderingMCMC.py:235(recombination_of_districts)
   354978    2.565    0.000 1081.867    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1419912    1.671    0.000  761.246    0.001 GerrymanderingMCMC.py:190(__district_size)
269670872  155.022    0.000  623.495    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100    9.790    0.001  302.600    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.039    0.000   40.003    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.056    0.000   38.589    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   12.764    0.001   38.462    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.090    0.000   26.554    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.223    0.000   14.389    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.094    0.000    2.245    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.275    0.000    0.841    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.745    0.745 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.006    0.006    0.030    0.030 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
