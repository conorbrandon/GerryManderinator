         5345943331 function calls (5345821292 primitive calls) in 1935.780 seconds
        1   11.722   11.722 1935.024 1935.024 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    6.535    0.001 1923.271    0.190 GerrymanderingMCMC.py:235(recombination_of_districts)
   405694    2.870    0.000 1292.383    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1622776    1.943    0.000  912.029    0.001 GerrymanderingMCMC.py:190(__district_size)
321789068  184.628    0.000  748.149    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10102   10.175    0.001  305.474    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.041    0.000   41.178    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.058    0.000   39.745    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.296    0.001   39.614    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.102    0.000   27.299    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.267    0.000   14.637    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.091    0.000    2.282    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.311    0.000    0.904    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.724    0.724 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.006    0.006    0.028    0.028 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
