         4416019116 function calls (4415897077 primitive calls) in 1624.131 seconds
        1   11.911   11.911 1623.423 1623.423 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.290    0.001 1611.482    0.160 GerrymanderingMCMC.py:235(recombination_of_districts)
   324235    2.326    0.000  982.889    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1296940    1.629    0.000  691.032    0.001 GerrymanderingMCMC.py:190(__district_size)
242666234  139.309    0.000  565.728    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10101    9.977    0.001  303.599    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.041    0.000   41.056    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.057    0.000   39.604    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.279    0.001   39.481    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.094    0.000   27.162    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.212    0.000   14.571    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.093    0.000    2.260    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.293    0.000    0.877    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.675    0.675 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.030    0.030 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
