         4671782590 function calls (4671660551 primitive calls) in 1696.456 seconds
        1   11.733   11.733 1695.629 1695.629 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.706    0.001 1683.866    0.167 GerrymanderingMCMC.py:235(recombination_of_districts)
   350161    2.440    0.000 1053.303    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1400644    1.673    0.000  740.673    0.001 GerrymanderingMCMC.py:190(__district_size)
263519678  150.548    0.000  606.733    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10103   10.000    0.001  306.626    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.040    0.000   40.718    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.058    0.000   39.304    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.357    0.001   39.180    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.105    0.000   26.946    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.213    0.000   14.546    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.093    0.000    2.279    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.282    0.000    0.844    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.795    0.795 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.006    0.006    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
