         4770569146 function calls (4770447107 primitive calls) in 1719.102 seconds
        1   11.339   11.339 1718.333 1718.333 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.790    0.001 1706.963    0.169 GerrymanderingMCMC.py:235(recombination_of_districts)
   366201    2.518    0.000 1084.756    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1464804    1.735    0.000  764.033    0.001 GerrymanderingMCMC.py:190(__district_size)
272748078  153.392    0.000  626.714    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10101    9.924    0.001  301.725    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.039    0.000   40.521    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.058    0.000   39.094    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   12.987    0.001   38.970    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.093    0.000   26.812    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.177    0.000   14.309    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.111    0.000    2.378    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.289    0.000    0.859    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.750    0.750 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
