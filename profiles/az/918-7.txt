         4318839597 function calls (4318717558 primitive calls) in 1571.497 seconds
        1   11.164   11.164 1570.778 1570.778 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.027    0.000 1559.566    0.154 GerrymanderingMCMC.py:235(recombination_of_districts)
   312289    2.155    0.000  934.158    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1249156    1.471    0.000  655.581    0.001 GerrymanderingMCMC.py:190(__district_size)
234256630  133.513    0.000  536.144    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100    9.954    0.001  304.126    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.042    0.000   40.830    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.064    0.000   39.311    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.213    0.001   39.171    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.091    0.000   26.907    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.180    0.000   14.285    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.087    0.000    2.228    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.297    0.000    0.864    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.686    0.686 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
