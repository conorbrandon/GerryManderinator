         4617664578 function calls (4617542539 primitive calls) in 1676.516 seconds
        1   11.180   11.180 1675.764 1675.764 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.499    0.001 1664.550    0.165 GerrymanderingMCMC.py:235(recombination_of_districts)
   341650    2.384    0.000 1038.654    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1366600    1.633    0.000  729.474    0.001 GerrymanderingMCMC.py:190(__district_size)
259039408  146.446    0.000  596.739    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10102   10.187    0.001  305.618    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.040    0.000   40.875    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.055    0.000   39.434    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.225    0.001   39.317    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.091    0.000   27.057    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.232    0.000   14.553    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.089    0.000    2.218    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.280    0.000    0.848    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.717    0.717 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.006    0.006    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
