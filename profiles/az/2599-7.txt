         4586229781 function calls (4586107742 primitive calls) in 1642.080 seconds
        1   10.877   10.877 1641.317 1641.317 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.456    0.001 1630.410    0.161 GerrymanderingMCMC.py:235(recombination_of_districts)
   342809    2.311    0.000 1009.652    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1371236    1.634    0.000  708.719    0.001 GerrymanderingMCMC.py:190(__district_size)
256696922  142.926    0.000  578.851    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10101    9.950    0.001  302.493    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.039    0.000   40.261    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.057    0.000   38.873    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   12.799    0.001   38.748    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.094    0.000   26.633    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.111    0.000   14.283    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.091    0.000    2.215    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.272    0.000    0.831    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.730    0.730 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
