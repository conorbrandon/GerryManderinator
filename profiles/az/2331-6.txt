         4864362884 function calls (4864240845 primitive calls) in 1761.350 seconds
        1   11.393   11.393 1760.561 1760.561 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.995    0.001 1749.139    0.173 GerrymanderingMCMC.py:235(recombination_of_districts)
   364577    2.532    0.000 1123.368    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1458308    1.755    0.000  791.846    0.001 GerrymanderingMCMC.py:190(__district_size)
280854498  160.093    0.000  649.960    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10102   10.061    0.001  303.726    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.040    0.000   40.712    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.058    0.000   39.310    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.185    0.001   39.185    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.098    0.000   26.910    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.182    0.000   14.339    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.100    0.000    2.347    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.279    0.000    0.890    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.754    0.754 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.032    0.032 GerrymanderingMCMC.py:21(__init__)
        1    0.006    0.006    0.031    0.031 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.007    0.007 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
