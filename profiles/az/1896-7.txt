         5167743378 function calls (5167621339 primitive calls) in 1852.069 seconds
        1   11.064   11.064 1851.293 1851.293 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    6.363    0.001 1840.199    0.182 GerrymanderingMCMC.py:235(recombination_of_districts)
   392511    2.777    0.000 1220.553    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1570044    1.863    0.000  855.497    0.001 GerrymanderingMCMC.py:190(__district_size)
306394776  171.430    0.000  700.594    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10102    9.833    0.001  300.450    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.042    0.000   40.035    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.056    0.000   38.607    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   12.910    0.001   38.489    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.090    0.000   26.558    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.189    0.000   14.440    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.097    0.000    2.224    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.288    0.000    0.852    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.745    0.745 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
