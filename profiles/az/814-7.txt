         4850003131 function calls (4849881092 primitive calls) in 1741.331 seconds
        1   11.202   11.202 1740.562 1740.562 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    6.001    0.001 1729.325    0.171 GerrymanderingMCMC.py:235(recombination_of_districts)
   372012    2.623    0.000 1106.225    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1488048    1.811    0.000  774.843    0.001 GerrymanderingMCMC.py:190(__district_size)
279153970  156.938    0.000  635.957    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10101    9.969    0.001  303.541    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.041    0.000   40.149    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.061    0.000   38.691    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   12.841    0.001   38.562    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.099    0.000   26.591    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.213    0.000   14.479    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.102    0.000    2.331    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.279    0.000    0.849    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.736    0.736 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
