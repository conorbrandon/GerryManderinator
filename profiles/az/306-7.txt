         5372134404 function calls (5372012365 primitive calls) in 1928.056 seconds
        1   11.836   11.836 1927.340 1927.340 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    6.755    0.001 1915.472    0.190 GerrymanderingMCMC.py:235(recombination_of_districts)
   410842    2.892    0.000 1282.183    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1643368    1.988    0.000  898.723    0.001 GerrymanderingMCMC.py:190(__district_size)
323400498  182.693    0.000  735.886    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10102   10.138    0.001  307.151    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.040    0.000   40.629    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.058    0.000   39.206    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.235    0.001   39.081    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.094    0.000   26.978    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.200    0.000   14.566    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.093    0.000    2.321    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.300    0.000    0.907    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.684    0.684 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.006    0.006    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
