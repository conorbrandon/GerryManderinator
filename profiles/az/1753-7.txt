         4794992594 function calls (4794870555 primitive calls) in 1714.859 seconds
        1   11.165   11.165 1714.100 1714.100 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.880    0.001 1702.905    0.169 GerrymanderingMCMC.py:235(recombination_of_districts)
   363048    2.566    0.000 1083.978    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1452192    1.710    0.000  761.491    0.001 GerrymanderingMCMC.py:190(__district_size)
275163894  151.205    0.000  624.546    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10101    9.818    0.001  300.945    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.040    0.000   40.072    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.055    0.000   38.629    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   12.848    0.001   38.513    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.114    0.000   26.596    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.112    0.000   14.185    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.102    0.000    2.216    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.285    0.000    0.838    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.727    0.727 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.030    0.030 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.007    0.007 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
