         5466433706 function calls (5466311667 primitive calls) in 1964.422 seconds
        1   12.775   12.775 1963.695 1963.695 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    6.866    0.001 1950.846    0.193 GerrymanderingMCMC.py:235(recombination_of_districts)
   427034    2.958    0.000 1320.969    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1708136    2.036    0.000  926.709    0.001 GerrymanderingMCMC.py:190(__district_size)
332245740  183.486    0.000  761.253    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   10.037    0.001  303.324    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.056    0.000   40.463    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.073    0.000   38.987    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.282    0.001   38.847    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.096    0.000   26.884    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.234    0.000   14.549    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.102    0.000    2.334    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.291    0.000    0.883    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.695    0.695 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
