         5213995636 function calls (5213873597 primitive calls) in 1880.872 seconds
        1   11.178   11.178 1880.075 1880.075 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    6.553    0.001 1868.866    0.185 GerrymanderingMCMC.py:235(recombination_of_districts)
   395359    2.757    0.000 1240.191    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1581436    1.908    0.000  873.706    0.001 GerrymanderingMCMC.py:190(__district_size)
310086572  175.359    0.000  716.258    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10101    9.993    0.001  305.200    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.040    0.000   40.981    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.057    0.000   39.552    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.190    0.001   39.430    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.092    0.000   27.194    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.240    0.000   14.644    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.087    0.000    2.238    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.287    0.000    0.877    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.764    0.764 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.006    0.006    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
