         4667468254 function calls (4667346215 primitive calls) in 1693.011 seconds
        1   11.200   11.200 1692.277 1692.277 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.592    0.001 1681.048    0.166 GerrymanderingMCMC.py:235(recombination_of_districts)
   351900    2.423    0.000 1055.607    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1407600    1.715    0.000  743.044    0.001 GerrymanderingMCMC.py:190(__district_size)
263752480  151.281    0.000  610.239    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10103    9.927    0.001  303.610    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.039    0.000   41.030    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.058    0.000   39.611    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.361    0.001   39.485    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.108    0.000   27.218    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.246    0.000   14.382    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.098    0.000    2.269    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.311    0.000    0.875    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.702    0.702 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.006    0.006    0.030    0.030 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
