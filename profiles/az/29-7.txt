         4480899470 function calls (4480777431 primitive calls) in 1612.963 seconds
        1   10.685   10.685 1609.291 1609.291 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.204    0.001 1598.576    0.158 GerrymanderingMCMC.py:235(recombination_of_districts)
   323094    2.177    0.000  977.078    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1292376    1.567    0.000  686.696    0.001 GerrymanderingMCMC.py:190(__district_size)
247740678  138.132    0.000  562.869    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100    9.713    0.001  301.878    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.039    0.000   40.099    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.055    0.000   38.696    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   12.796    0.001   38.577    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.094    0.000   26.661    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.143    0.000   14.275    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
        1    0.000    0.000    3.625    3.625 GerrymanderingMCMC.py:1(<module>)
    30300    0.089    0.000    2.212    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.276    0.000    0.844    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.031    0.031 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.030    0.030 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.008    0.008 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
