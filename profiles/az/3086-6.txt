         4957614460 function calls (4957492421 primitive calls) in 1776.780 seconds
        1   11.312   11.312 1776.004 1776.004 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    6.027    0.001 1764.648    0.175 GerrymanderingMCMC.py:235(recombination_of_districts)
   380013    2.614    0.000 1143.233    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1520052    1.850    0.000  805.166    0.001 GerrymanderingMCMC.py:190(__district_size)
288432906  162.808    0.000  661.190    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10101    9.856    0.001  300.893    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.039    0.000   40.207    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.057    0.000   38.780    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   12.931    0.001   38.655    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.098    0.000   26.723    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.204    0.000   14.311    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.091    0.000    2.274    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.276    0.000    0.846    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.742    0.742 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
