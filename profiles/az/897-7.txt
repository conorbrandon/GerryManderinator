         4619527851 function calls (4619405812 primitive calls) in 1684.977 seconds
        1   11.271   11.271 1684.275 1684.275 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.527    0.001 1672.957    0.166 GerrymanderingMCMC.py:235(recombination_of_districts)
   352972    2.497    0.000 1050.409    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1411888    1.707    0.000  737.434    0.001 GerrymanderingMCMC.py:190(__district_size)
260197012  147.741    0.000  602.310    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10102   10.007    0.001  300.353    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.040    0.000   40.658    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.067    0.000   39.215    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.099    0.001   39.082    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.100    0.000   26.850    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.157    0.000   14.397    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.095    0.000    2.289    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.275    0.000    0.838    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.670    0.670 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.006    0.006    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
