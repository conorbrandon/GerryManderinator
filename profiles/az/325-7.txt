         5036136408 function calls (5036014369 primitive calls) in 1803.509 seconds
        1   11.226   11.226 1802.771 1802.771 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    6.249    0.001 1791.515    0.177 GerrymanderingMCMC.py:235(recombination_of_districts)
   386935    2.596    0.000 1167.379    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1547740    1.877    0.000  821.565    0.001 GerrymanderingMCMC.py:190(__district_size)
295339754  164.867    0.000  672.851    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   10.387    0.001  304.639    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.039    0.000   40.359    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.069    0.000   38.974    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   12.956    0.001   38.842    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.092    0.000   26.716    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.164    0.000   14.325    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.091    0.000    2.233    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.276    0.000    0.851    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.707    0.707 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
