         4712090750 function calls (4711968711 primitive calls) in 1711.715 seconds
        1   11.147   11.147 1710.974 1710.974 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.640    0.001 1699.784    0.168 GerrymanderingMCMC.py:235(recombination_of_districts)
   354245    2.467    0.000 1077.572    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1416980    1.705    0.000  756.351    0.001 GerrymanderingMCMC.py:190(__district_size)
267673604  152.351    0.000  619.397    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   10.081    0.001  302.487    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.073    0.000   40.491    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.055    0.000   39.048    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.000    0.001   38.927    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.095    0.000   26.843    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.215    0.000   14.634    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.087    0.000    2.213    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.277    0.000    0.861    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.708    0.708 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.006    0.006    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
