         5017830612 function calls (5017708573 primitive calls) in 1813.728 seconds
        1   11.350   11.350 1812.967 1812.967 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    6.129    0.001 1801.539    0.178 GerrymanderingMCMC.py:235(recombination_of_districts)
   377860    2.744    0.000 1176.320    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1511440    1.789    0.000  826.296    0.001 GerrymanderingMCMC.py:190(__district_size)
293423952  164.280    0.000  677.839    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   10.068    0.001  305.116    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.041    0.000   40.371    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.055    0.000   38.931    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.007    0.001   38.812    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.093    0.000   26.861    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.214    0.000   14.592    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.092    0.000    2.282    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.283    0.000    0.856    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.728    0.728 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.006    0.006    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
