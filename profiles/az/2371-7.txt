         4618862050 function calls (4618740011 primitive calls) in 1670.589 seconds
        1   10.980   10.980 1669.880 1669.880 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.508    0.001 1658.872    0.164 GerrymanderingMCMC.py:235(recombination_of_districts)
   340768    2.421    0.000 1035.058    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1363072    1.596    0.000  727.127    0.001 GerrymanderingMCMC.py:190(__district_size)
259619720  147.441    0.000  596.657    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10101    9.863    0.001  302.544    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.040    0.000   40.504    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.055    0.000   39.099    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.013    0.001   38.974    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.094    0.000   26.879    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.192    0.000   14.422    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.091    0.000    2.197    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.298    0.000    0.881    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.677    0.677 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
