         4629006458 function calls (4628884419 primitive calls) in 1667.776 seconds
        1   10.908   10.908 1667.002 1667.002 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.496    0.001 1656.067    0.164 GerrymanderingMCMC.py:235(recombination_of_districts)
   345270    2.337    0.000 1037.519    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1381080    1.642    0.000  733.652    0.001 GerrymanderingMCMC.py:190(__district_size)
260719502  148.687    0.000  602.508    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100    9.878    0.001  300.529    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.041    0.000   41.205    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.056    0.000   39.789    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.482    0.001   39.672    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.094    0.000   26.987    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.183    0.000   14.268    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.100    0.000    2.293    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.284    0.000    0.867    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.742    0.742 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
