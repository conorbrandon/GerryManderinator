         4851063454 function calls (4850941415 primitive calls) in 1738.461 seconds
        1   11.031   11.031 1737.764 1737.764 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.812    0.001 1726.704    0.171 GerrymanderingMCMC.py:235(recombination_of_districts)
   373335    2.594    0.000 1107.066    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1493340    1.749    0.000  780.719    0.001 GerrymanderingMCMC.py:190(__district_size)
279530422  155.422    0.000  638.875    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100    9.988    0.001  301.517    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.039    0.000   40.446    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.056    0.000   39.053    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   12.937    0.001   38.934    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.090    0.000   26.829    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.143    0.000   14.331    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.104    0.000    2.180    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.279    0.000    0.842    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.667    0.667 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
