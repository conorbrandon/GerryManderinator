         4714180774 function calls (4714058735 primitive calls) in 1692.669 seconds
        1   10.981   10.981 1691.967 1691.967 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.637    0.001 1680.954    0.166 GerrymanderingMCMC.py:235(recombination_of_districts)
   353295    2.380    0.000 1065.618    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1413180    1.659    0.000  752.132    0.001 GerrymanderingMCMC.py:190(__district_size)
268113062  150.766    0.000  617.814    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10101    9.815    0.001  298.795    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.040    0.000   40.227    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.055    0.000   38.859    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   12.830    0.001   38.739    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.105    0.000   26.671    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.212    0.000   14.321    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.087    0.000    2.201    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.274    0.000    0.865    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.670    0.670 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
