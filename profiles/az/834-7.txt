         4733816247 function calls (4733694208 primitive calls) in 1708.059 seconds
        1   11.172   11.172 1707.285 1707.285 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.688    0.001 1696.081    0.168 GerrymanderingMCMC.py:235(recombination_of_districts)
   365797    2.552    0.000 1074.920    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1463188    1.767    0.000  755.686    0.001 GerrymanderingMCMC.py:190(__district_size)
269616616  151.962    0.000  618.513    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10102    9.891    0.001  299.437    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.039    0.000   41.072    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.055    0.000   39.709    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.363    0.001   39.591    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.090    0.000   27.114    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.195    0.000   14.434    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.089    0.000    2.291    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.288    0.000    0.867    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.742    0.742 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
