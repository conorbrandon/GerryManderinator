         4713499956 function calls (4713377917 primitive calls) in 1689.126 seconds
        1   11.189   11.189 1688.290 1688.290 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.591    0.001 1677.072    0.166 GerrymanderingMCMC.py:235(recombination_of_districts)
   355200    2.484    0.000 1055.930    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1420800    1.658    0.000  743.836    0.001 GerrymanderingMCMC.py:190(__district_size)
267559228  149.614    0.000  609.778    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10102    9.924    0.001  301.899    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.040    0.000   39.882    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.057    0.000   38.471    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   12.863    0.001   38.347    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.093    0.000   26.497    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.178    0.000   14.223    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.095    0.000    2.282    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.274    0.000    0.840    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.803    0.803 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
