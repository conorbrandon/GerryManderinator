         4606870154 function calls (4606748115 primitive calls) in 1704.652 seconds
        1   10.999   10.999 1703.888 1703.888 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.580    0.001 1692.858    0.168 GerrymanderingMCMC.py:235(recombination_of_districts)
   351034    2.524    0.000 1077.536    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1404136    1.700    0.000  771.103    0.001 GerrymanderingMCMC.py:190(__district_size)
259012634  147.364    0.000  638.543    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100    9.660    0.001  297.511    0.029 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.040    0.000   39.978    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.056    0.000   38.581    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   12.797    0.001   38.464    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.089    0.000   26.488    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.121    0.000   14.156    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.089    0.000    2.252    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.277    0.000    0.854    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.736    0.736 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.006    0.006    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
