         4336166023 function calls (4336043984 primitive calls) in 1583.482 seconds
        1   11.179   11.179 1582.722 1582.722 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.212    0.001 1571.501    0.156 GerrymanderingMCMC.py:235(recombination_of_districts)
   318551    2.244    0.000  946.152    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1274204    1.541    0.000  665.925    0.001 GerrymanderingMCMC.py:190(__district_size)
236181686  133.642    0.000  546.168    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10101    9.817    0.001  301.611    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.041    0.000   40.866    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.057    0.000   39.443    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.305    0.001   39.318    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.093    0.000   27.076    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.110    0.000   14.224    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.094    0.000    2.297    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.295    0.000    0.883    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.722    0.722 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
