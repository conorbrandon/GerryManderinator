         4658092947 function calls (4657970908 primitive calls) in 1693.665 seconds
        1   11.691   11.691 1692.574 1692.574 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.606    0.001 1680.855    0.166 GerrymanderingMCMC.py:235(recombination_of_districts)
   349252    2.508    0.000 1058.111    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1397008    1.672    0.000  744.503    0.001 GerrymanderingMCMC.py:190(__district_size)
263489106  147.382    0.000  610.359    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100    9.870    0.001  301.770    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.041    0.000   40.477    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.057    0.000   39.021    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.090    0.001   38.899    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.094    0.000   26.929    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.173    0.000   14.334    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.099    0.000    2.266    0.000 GerrymanderingMCMC.py:157(__random_district_label)
        1    0.000    0.000    1.018    1.018 GerrymanderingMCMC.py:1(<module>)
    10100    0.298    0.000    0.865    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.069    0.069 GerrymanderingMCMC.py:21(__init__)
        1    0.006    0.006    0.069    0.069 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.020    0.020 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
