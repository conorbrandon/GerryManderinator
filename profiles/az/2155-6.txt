         5269637346 function calls (5269515307 primitive calls) in 1885.711 seconds
        1   12.056   12.056 1884.984 1884.984 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    6.637    0.001 1872.897    0.185 GerrymanderingMCMC.py:235(recombination_of_districts)
   409193    2.802    0.000 1246.078    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1636772    1.922    0.000  873.444    0.001 GerrymanderingMCMC.py:190(__district_size)
315519734  175.731    0.000  716.084    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10101   10.047    0.001  304.052    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.041    0.000   40.199    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.057    0.000   38.735    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   12.983    0.001   38.612    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.096    0.000   26.703    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.170    0.000   14.354    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.094    0.000    2.253    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.283    0.000    0.867    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.694    0.694 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
