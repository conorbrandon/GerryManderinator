         4808731185 function calls (4808609146 primitive calls) in 1735.513 seconds
        1   11.285   11.285 1734.771 1734.771 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.916    0.001 1723.453    0.171 GerrymanderingMCMC.py:235(recombination_of_districts)
   363066    2.669    0.000 1098.724    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1452264    1.733    0.000  773.660    0.001 GerrymanderingMCMC.py:190(__district_size)
275947288  156.054    0.000  634.129    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10102   10.169    0.001  301.884    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.041    0.000   41.070    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.057    0.000   39.666    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.267    0.001   39.539    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.097    0.000   27.055    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.185    0.000   14.339    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.101    0.000    2.300    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.285    0.000    0.870    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.709    0.709 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.006    0.006    0.030    0.030 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
