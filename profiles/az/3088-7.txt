         4595367103 function calls (4595245064 primitive calls) in 1662.453 seconds
        1   11.398   11.398 1661.745 1661.745 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.427    0.001 1650.317    0.163 GerrymanderingMCMC.py:235(recombination_of_districts)
   335986    2.288    0.000 1024.780    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1343944    1.591    0.000  721.681    0.001 GerrymanderingMCMC.py:190(__district_size)
257736270  145.877    0.000  590.710    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10101   10.089    0.001  303.762    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.041    0.000   40.501    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.057    0.000   39.072    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.047    0.001   38.951    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.092    0.000   26.724    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.198    0.000   14.387    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.108    0.000    2.285    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.276    0.000    0.838    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.675    0.675 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
