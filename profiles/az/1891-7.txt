         4564318626 function calls (4564196587 primitive calls) in 1645.775 seconds
        1   10.833   10.833 1645.008 1645.008 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.347    0.001 1634.145    0.162 GerrymanderingMCMC.py:235(recombination_of_districts)
   339719    2.359    0.000 1017.885    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1358876    1.600    0.000  713.422    0.001 GerrymanderingMCMC.py:190(__district_size)
254883084  139.688    0.000  583.326    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10101    9.851    0.001  299.934    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.040    0.000   40.090    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.056    0.000   38.696    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   12.849    0.001   38.574    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.126    0.000   26.601    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.145    0.000   14.493    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.090    0.000    2.257    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.280    0.000    0.849    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.734    0.734 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.006    0.006    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
