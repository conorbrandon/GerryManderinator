         4768968422 function calls (4768846383 primitive calls) in 1740.829 seconds
        1   11.872   11.872 1740.098 1740.098 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.816    0.001 1727.759    0.171 GerrymanderingMCMC.py:235(recombination_of_districts)
   354753    2.516    0.000 1095.772    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1419012    1.805    0.000  771.015    0.001 GerrymanderingMCMC.py:190(__district_size)
271676752  154.383    0.000  631.764    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10101   10.243    0.001  309.742    0.031 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.049    0.000   40.711    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.059    0.000   39.235    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.127    0.001   39.108    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.096    0.000   26.981    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.280    0.000   14.675    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.110    0.000    2.393    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.294    0.000    0.878    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.702    0.702 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
