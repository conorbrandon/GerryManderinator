         4690250139 function calls (4690128100 primitive calls) in 1682.811 seconds
        1   11.490   11.490 1682.110 1682.110 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.632    0.001 1670.587    0.165 GerrymanderingMCMC.py:235(recombination_of_districts)
   352336    2.412    0.000 1048.218    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1409344    1.661    0.000  736.920    0.001 GerrymanderingMCMC.py:190(__district_size)
265866670  146.929    0.000  602.924    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10101    9.951    0.001  303.231    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.041    0.000   40.096    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.056    0.000   38.679    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   12.932    0.001   38.559    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.092    0.000   26.670    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.159    0.000   14.258    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.099    0.000    2.226    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.276    0.000    0.835    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.669    0.669 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
