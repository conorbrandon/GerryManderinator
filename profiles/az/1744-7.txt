         5337065591 function calls (5336943552 primitive calls) in 1923.898 seconds
        1   12.507   12.507 1923.202 1923.202 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    6.600    0.001 1910.652    0.189 GerrymanderingMCMC.py:235(recombination_of_districts)
   416630    2.917    0.000 1278.388    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1666520    1.940    0.000  899.331    0.001 GerrymanderingMCMC.py:190(__district_size)
320832820  183.532    0.000  737.024    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   10.232    0.001  306.586    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.042    0.000   40.431    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.058    0.000   39.009    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.208    0.001   38.884    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.096    0.000   26.707    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.289    0.000   14.570    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.094    0.000    2.289    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.280    0.000    0.878    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.664    0.664 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
