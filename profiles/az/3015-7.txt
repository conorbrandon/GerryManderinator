         5277087456 function calls (5276965417 primitive calls) in 1891.314 seconds
        1   11.070   11.070 1890.573 1890.573 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    6.551    0.001 1879.475    0.186 GerrymanderingMCMC.py:235(recombination_of_districts)
   410015    2.885    0.000 1257.996    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1640060    1.956    0.000  887.635    0.001 GerrymanderingMCMC.py:190(__district_size)
315575580  179.925    0.000  728.352    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   10.042    0.001  302.813    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.059    0.000   40.655    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.055    0.000   39.255    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.169    0.001   39.137    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.116    0.000   26.910    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.197    0.000   14.481    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.089    0.000    2.184    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.285    0.000    0.884    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.708    0.708 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
