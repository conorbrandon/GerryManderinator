         4563979898 function calls (4563857859 primitive calls) in 1643.748 seconds
        1   11.953   11.953 1643.051 1643.051 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.502    0.001 1631.069    0.161 GerrymanderingMCMC.py:235(recombination_of_districts)
   339528    2.337    0.000 1007.035    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1358112    1.626    0.000  704.747    0.001 GerrymanderingMCMC.py:190(__district_size)
254313174  141.770    0.000  577.408    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100    9.890    0.001  302.708    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.045    0.000   40.099    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.057    0.000   38.640    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   12.980    0.001   38.514    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.093    0.000   26.528    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.195    0.000   14.499    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.094    0.000    2.254    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.287    0.000    0.855    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.665    0.665 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
