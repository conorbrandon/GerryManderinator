         4617041494 function calls (4616919455 primitive calls) in 1672.938 seconds
        1   11.285   11.285 1672.061 1672.061 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.491    0.001 1660.742    0.164 GerrymanderingMCMC.py:235(recombination_of_districts)
   351149    2.409    0.000 1039.038    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1404596    1.672    0.000  730.033    0.001 GerrymanderingMCMC.py:190(__district_size)
260027490  146.959    0.000  599.048    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10102    9.852    0.001  300.422    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.040    0.000   40.738    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.059    0.000   39.333    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.148    0.001   39.201    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.096    0.000   27.050    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.202    0.000   14.310    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.094    0.000    2.316    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.280    0.000    0.848    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.805    0.805 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.056    0.056 GerrymanderingMCMC.py:21(__init__)
        1    0.032    0.032    0.056    0.056 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
