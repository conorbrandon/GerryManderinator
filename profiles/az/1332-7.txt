         4844527908 function calls (4844405869 primitive calls) in 1743.297 seconds
        1   11.350   11.350 1742.513 1742.513 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.931    0.001 1731.133    0.171 GerrymanderingMCMC.py:235(recombination_of_districts)
   372797    2.615    0.000 1106.306    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1491188    1.768    0.000  777.353    0.001 GerrymanderingMCMC.py:190(__district_size)
278684602  155.622    0.000  638.776    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10101    9.876    0.001  304.150    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.041    0.000   40.307    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.057    0.000   38.864    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   12.924    0.001   38.742    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.094    0.000   26.712    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.201    0.000   14.314    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.092    0.000    2.281    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.282    0.000    0.859    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.752    0.752 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.006    0.006    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
