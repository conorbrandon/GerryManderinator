         4832229278 function calls (4832107239 primitive calls) in 1755.209 seconds
        1   12.247   12.247 1754.506 1754.506 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.783    0.001 1742.229    0.172 GerrymanderingMCMC.py:235(recombination_of_districts)
   364166    2.543    0.000 1110.879    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1456664    1.718    0.000  781.665    0.001 GerrymanderingMCMC.py:190(__district_size)
277585950  159.640    0.000  641.117    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10101   10.258    0.001  306.638    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.042    0.000   40.941    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.060    0.000   39.511    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.230    0.001   39.381    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.094    0.000   26.932    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.213    0.000   14.462    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.114    0.000    2.323    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.291    0.000    0.887    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.670    0.670 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.006    0.006    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
