         4869532843 function calls (4869410804 primitive calls) in 1753.575 seconds
        1   12.313   12.313 1752.874 1752.874 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    6.009    0.001 1740.532    0.172 GerrymanderingMCMC.py:235(recombination_of_districts)
   375171    2.603    0.000 1114.069    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1500684    1.770    0.000  782.852    0.001 GerrymanderingMCMC.py:190(__district_size)
281220656  159.739    0.000  640.305    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10103    9.917    0.001  301.325    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.044    0.000   40.424    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.059    0.000   39.001    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.208    0.001   38.874    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.097    0.000   26.728    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.232    0.000   14.309    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.099    0.000    2.314    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.278    0.000    0.864    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.668    0.668 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
