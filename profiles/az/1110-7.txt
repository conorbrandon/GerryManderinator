         5266989005 function calls (5266866966 primitive calls) in 1900.137 seconds
        1   11.157   11.157 1899.437 1899.437 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    6.780    0.001 1888.249    0.187 GerrymanderingMCMC.py:235(recombination_of_districts)
   413977    2.866    0.000 1259.131    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1655908    1.999    0.000  883.800    0.001 GerrymanderingMCMC.py:190(__district_size)
314917244  178.462    0.000  721.679    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10101    9.935    0.001  306.589    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.040    0.000   40.554    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.056    0.000   39.151    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   12.976    0.001   38.999    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.092    0.000   26.841    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.192    0.000   14.559    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.090    0.000    2.252    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.280    0.000    0.869    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.667    0.667 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.006    0.006    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
