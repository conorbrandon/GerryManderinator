         4758702071 function calls (4758580032 primitive calls) in 1732.881 seconds
        1   11.467   11.467 1732.149 1732.149 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.873    0.001 1720.654    0.170 GerrymanderingMCMC.py:235(recombination_of_districts)
   362990    2.482    0.000 1090.655    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1451960    1.741    0.000  765.856    0.001 GerrymanderingMCMC.py:190(__district_size)
271143712  153.428    0.000  626.842    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10101   10.317    0.001  307.997    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.048    0.000   40.990    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.058    0.000   39.574    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.323    0.001   39.448    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.095    0.000   27.184    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.241    0.000   14.697    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.098    0.000    2.320    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.293    0.000    0.862    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.698    0.698 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.006    0.006    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
