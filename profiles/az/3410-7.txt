         4638230489 function calls (4638108450 primitive calls) in 1696.740 seconds
        1   11.395   11.395 1695.995 1695.995 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.625    0.001 1684.533    0.167 GerrymanderingMCMC.py:235(recombination_of_districts)
   345827    2.409    0.000 1053.741    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1383308    1.712    0.000  742.421    0.001 GerrymanderingMCMC.py:190(__district_size)
260969106  148.885    0.000  608.748    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10101   10.103    0.001  307.558    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.041    0.000   40.892    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.059    0.000   39.423    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.183    0.001   39.296    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.095    0.000   27.064    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.187    0.000   14.497    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.095    0.000    2.355    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.282    0.000    0.864    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.713    0.713 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
