         5382023506 function calls (5381901467 primitive calls) in 1945.343 seconds
        1   12.036   12.036 1944.609 1944.609 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    6.832    0.001 1932.516    0.191 GerrymanderingMCMC.py:235(recombination_of_districts)
   423337    3.064    0.000 1302.297    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1693348    2.012    0.000  915.880    0.001 GerrymanderingMCMC.py:190(__district_size)
325504284  185.277    0.000  751.007    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10101   10.149    0.001  306.262    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.040    0.000   40.537    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.057    0.000   39.075    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.010    0.001   38.952    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.097    0.000   26.755    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.222    0.000   14.459    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.113    0.000    2.328    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.280    0.000    0.865    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.701    0.701 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
