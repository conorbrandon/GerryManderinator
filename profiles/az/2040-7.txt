         4667417034 function calls (4667294995 primitive calls) in 1686.583 seconds
        1   11.552   11.552 1685.872 1685.872 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.594    0.001 1674.274    0.166 GerrymanderingMCMC.py:235(recombination_of_districts)
   344161    2.375    0.000 1046.925    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1376644    1.658    0.000  736.030    0.001 GerrymanderingMCMC.py:190(__district_size)
263224362  149.950    0.000  601.246    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   10.004    0.001  304.392    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.040    0.000   40.315    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.057    0.000   38.870    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.197    0.001   38.746    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.095    0.000   26.604    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.215    0.000   14.528    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.098    0.000    2.247    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.276    0.000    0.835    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.679    0.679 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
