         4686370424 function calls (4686248385 primitive calls) in 1700.382 seconds
        1   12.035   12.035 1699.665 1699.665 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.688    0.001 1687.599    0.167 GerrymanderingMCMC.py:235(recombination_of_districts)
   352465    2.481    0.000 1060.995    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1409860    1.651    0.000  745.658    0.001 GerrymanderingMCMC.py:190(__district_size)
265741316  149.619    0.000  610.468    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10103    9.967    0.001  303.151    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.042    0.000   40.397    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.072    0.000   38.964    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   12.929    0.001   38.824    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.096    0.000   26.648    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.177    0.000   14.353    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.096    0.000    2.277    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.269    0.000    0.837    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.685    0.685 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
