         4783443644 function calls (4783321605 primitive calls) in 1720.886 seconds
        1   11.172   11.172 1720.114 1720.114 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.828    0.001 1708.873    0.169 GerrymanderingMCMC.py:235(recombination_of_districts)
   362720    2.459    0.000 1090.914    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1450880    1.712    0.000  766.049    0.001 GerrymanderingMCMC.py:190(__district_size)
273863026  153.366    0.000  628.342    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10105    9.874    0.001  299.518    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.041    0.000   40.071    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.057    0.000   38.679    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   12.781    0.001   38.557    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.100    0.000   26.567    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.173    0.000   14.296    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.091    0.000    2.292    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.275    0.000    0.844    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.740    0.740 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
