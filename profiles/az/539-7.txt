         4681949242 function calls (4681827203 primitive calls) in 1707.125 seconds
        1   12.417   12.417 1706.391 1706.391 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.599    0.001 1693.947    0.168 GerrymanderingMCMC.py:235(recombination_of_districts)
   353741    2.529    0.000 1066.213    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1414964    1.691    0.000  752.535    0.001 GerrymanderingMCMC.py:190(__district_size)
264925798  151.133    0.000  615.200    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   10.001    0.001  302.673    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.044    0.000   41.079    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.061    0.000   39.648    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.575    0.001   39.518    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.097    0.000   27.065    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.242    0.000   14.516    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.095    0.000    2.295    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.283    0.000    0.854    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.705    0.705 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
