         4713150539 function calls (4713028500 primitive calls) in 1699.235 seconds
        1   11.120   11.120 1698.404 1698.404 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.669    0.001 1687.252    0.167 GerrymanderingMCMC.py:235(recombination_of_districts)
   359781    2.496    0.000 1067.036    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1439124    1.738    0.000  749.286    0.001 GerrymanderingMCMC.py:190(__district_size)
268355242  149.471    0.000  613.807    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10101    9.736    0.001  299.965    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.041    0.000   39.989    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.056    0.000   38.599    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   12.948    0.001   38.476    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.093    0.000   26.415    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.198    0.000   14.310    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.095    0.000    2.238    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.277    0.000    0.840    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.795    0.795 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.032    0.032 GerrymanderingMCMC.py:21(__init__)
        1    0.006    0.006    0.032    0.032 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.007    0.007 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
