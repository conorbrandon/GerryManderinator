         5069218557 function calls (5069096518 primitive calls) in 1826.395 seconds
        1   11.353   11.353 1825.628 1825.628 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    6.262    0.001 1814.244    0.180 GerrymanderingMCMC.py:235(recombination_of_districts)
   385975    2.730    0.000 1186.814    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1543900    1.846    0.000  832.780    0.001 GerrymanderingMCMC.py:190(__district_size)
298119708  166.821    0.000  680.421    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10101   10.074    0.001  305.091    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.040    0.000   40.361    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.055    0.000   38.967    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.067    0.001   38.849    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.091    0.000   26.701    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.181    0.000   14.360    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.087    0.000    2.236    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.284    0.000    0.862    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.734    0.734 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
