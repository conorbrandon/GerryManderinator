         4726663998 function calls (4726541959 primitive calls) in 1703.353 seconds
        1   12.103   12.103 1702.612 1702.612 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.669    0.001 1690.480    0.167 GerrymanderingMCMC.py:235(recombination_of_districts)
   353011    2.416    0.000 1062.516    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1412044    1.646    0.000  745.504    0.001 GerrymanderingMCMC.py:190(__district_size)
268565592  148.939    0.000  610.773    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   10.052    0.001  304.974    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.040    0.000   40.369    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.059    0.000   38.941    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.202    0.001   38.815    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.110    0.000   26.760    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.185    0.000   14.402    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.096    0.000    2.293    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.292    0.000    0.854    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.709    0.709 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
