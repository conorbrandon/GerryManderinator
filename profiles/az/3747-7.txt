         4906600900 function calls (4906478861 primitive calls) in 1779.809 seconds
        1   10.970   10.970 1779.104 1779.104 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.953    0.001 1768.105    0.175 GerrymanderingMCMC.py:235(recombination_of_districts)
   370665    2.576    0.000 1139.414    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1482660    1.784    0.000  803.496    0.001 GerrymanderingMCMC.py:190(__district_size)
284153568  161.784    0.000  657.910    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10101    9.873    0.001  306.287    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.040    0.000   40.595    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.055    0.000   39.165    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   12.986    0.001   39.045    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.091    0.000   26.866    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.203    0.000   14.421    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.087    0.000    2.202    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.280    0.000    0.847    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.672    0.672 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
