         4981344137 function calls (4981222098 primitive calls) in 1818.346 seconds
        1   10.977   10.977 1817.616 1817.616 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    6.230    0.001 1806.572    0.179 GerrymanderingMCMC.py:235(recombination_of_districts)
   373412    2.647    0.000 1179.651    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1493648    1.823    0.000  835.995    0.001 GerrymanderingMCMC.py:190(__district_size)
290950636  168.362    0.000  685.677    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100    9.838    0.001  304.014    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.048    0.000   41.453    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.056    0.000   40.036    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.446    0.001   39.916    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.093    0.000   27.409    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.233    0.000   14.551    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.095    0.000    2.232    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.309    0.000    0.888    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.697    0.697 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.006    0.006    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
