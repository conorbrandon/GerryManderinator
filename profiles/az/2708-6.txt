         4997246428 function calls (4997124389 primitive calls) in 1785.610 seconds
        1   10.953   10.953 1784.902 1784.902 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    6.188    0.001 1773.902    0.176 GerrymanderingMCMC.py:235(recombination_of_districts)
   381024    2.614    0.000 1154.770    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1524096    1.792    0.000  812.610    0.001 GerrymanderingMCMC.py:190(__district_size)
292541648  161.998    0.000  665.172    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10102    9.736    0.001  299.981    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.040    0.000   39.754    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.055    0.000   38.386    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   12.677    0.001   38.268    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.104    0.000   26.373    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.174    0.000   14.149    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.089    0.000    2.214    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.273    0.000    0.863    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.675    0.675 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
