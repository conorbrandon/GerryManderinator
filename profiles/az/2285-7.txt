         5182715713 function calls (5182593674 primitive calls) in 1871.164 seconds
        1   11.054   11.054 1870.428 1870.428 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    6.450    0.001 1859.345    0.184 GerrymanderingMCMC.py:235(recombination_of_districts)
   392625    2.741    0.000 1226.515    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1570500    1.891    0.000  859.748    0.001 GerrymanderingMCMC.py:190(__district_size)
307273980  174.112    0.000  703.991    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10101   10.357    0.001  311.001    0.031 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.040    0.000   40.744    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.056    0.000   39.346    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   12.931    0.001   39.227    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.089    0.000   26.950    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.237    0.000   14.721    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.090    0.000    2.232    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.305    0.000    0.893    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.708    0.708 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
