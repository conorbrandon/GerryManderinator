         5164863139 function calls (5164741100 primitive calls) in 1864.232 seconds
        1   11.512   11.512 1863.445 1863.445 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    6.274    0.001 1851.901    0.183 GerrymanderingMCMC.py:235(recombination_of_districts)
   390563    2.705    0.000 1225.274    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1562252    1.834    0.000  860.064    0.001 GerrymanderingMCMC.py:190(__district_size)
306576738  171.532    0.000  703.952    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100    9.961    0.001  302.829    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.042    0.000   40.560    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.058    0.000   39.098    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.074    0.001   38.972    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.096    0.000   26.861    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.191    0.000   14.544    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.095    0.000    2.345    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.275    0.000    0.833    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.754    0.754 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
