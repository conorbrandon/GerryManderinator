         4986810048 function calls (4986688009 primitive calls) in 1813.058 seconds
        1   12.797   12.797 1812.355 1812.355 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    6.128    0.001 1799.528    0.178 GerrymanderingMCMC.py:235(recombination_of_districts)
   371927    2.630    0.000 1166.676    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1487708    1.795    0.000  820.918    0.001 GerrymanderingMCMC.py:190(__district_size)
291133764  164.799    0.000  670.757    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   10.444    0.001  304.861    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.043    0.000   41.553    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.062    0.000   40.035    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.450    0.001   39.899    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.098    0.000   27.382    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.229    0.000   14.668    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.100    0.000    2.367    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.287    0.000    0.859    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.670    0.670 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.006    0.006    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
