         4712364558 function calls (4712242519 primitive calls) in 1703.998 seconds
        1   11.649   11.649 1703.258 1703.258 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.571    0.001 1691.580    0.167 GerrymanderingMCMC.py:235(recombination_of_districts)
   347693    2.441    0.000 1069.713    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1390772    1.641    0.000  752.696    0.001 GerrymanderingMCMC.py:190(__district_size)
267350380  151.860    0.000  617.638    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10102    9.937    0.001  301.170    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.042    0.000   40.828    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.056    0.000   39.389    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.224    0.001   39.268    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.095    0.000   26.911    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.212    0.000   14.539    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.089    0.000    2.203    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.279    0.000    0.877    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.709    0.709 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
