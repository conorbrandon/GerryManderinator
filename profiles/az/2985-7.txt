         4505628362 function calls (4505506323 primitive calls) in 1654.142 seconds
        1   11.008   11.008 1653.410 1653.410 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.372    0.001 1642.281    0.163 GerrymanderingMCMC.py:235(recombination_of_districts)
   330669    2.326    0.000 1013.051    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1322676    1.561    0.000  715.267    0.001 GerrymanderingMCMC.py:190(__district_size)
249951824  144.260    0.000  586.890    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10102   10.398    0.001  308.378    0.031 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.040    0.000   41.004    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.053    0.000   39.601    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.285    0.001   39.484    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.090    0.000   27.048    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.203    0.000   14.535    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.090    0.000    2.234    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.296    0.000    0.881    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.703    0.703 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
