         4746020784 function calls (4745898745 primitive calls) in 1716.279 seconds
        1   10.999   10.999 1715.508 1715.508 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.802    0.001 1704.439    0.169 GerrymanderingMCMC.py:235(recombination_of_districts)
   352956    2.452    0.000 1081.791    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1411824    1.697    0.000  757.626    0.001 GerrymanderingMCMC.py:190(__district_size)
270319806  153.354    0.000  621.270    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10101    9.893    0.001  302.857    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.058    0.000   40.809    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.059    0.000   39.361    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.355    0.001   39.234    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.098    0.000   27.048    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.178    0.000   14.568    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.095    0.000    2.338    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.277    0.000    0.872    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.737    0.737 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.006    0.006    0.030    0.030 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
