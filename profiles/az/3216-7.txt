         4609940028 function calls (4609817989 primitive calls) in 1681.018 seconds
        1   11.206   11.206 1680.296 1680.296 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.524    0.001 1669.058    0.165 GerrymanderingMCMC.py:235(recombination_of_districts)
   333023    2.443    0.000 1039.528    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1332092    1.647    0.000  729.743    0.001 GerrymanderingMCMC.py:190(__district_size)
258694298  146.116    0.000  599.128    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   10.134    0.001  306.989    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.043    0.000   41.050    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.057    0.000   39.619    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.247    0.001   39.486    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.093    0.000   27.164    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.203    0.000   14.525    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.091    0.000    2.230    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.277    0.000    0.842    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.689    0.689 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
