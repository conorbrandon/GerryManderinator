         4966065789 function calls (4965943750 primitive calls) in 1783.022 seconds
        1   11.658   11.658 1782.320 1782.320 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    6.126    0.001 1770.614    0.175 GerrymanderingMCMC.py:235(recombination_of_districts)
   377620    2.570    0.000 1151.925    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1510480    1.767    0.000  808.389    0.001 GerrymanderingMCMC.py:190(__district_size)
289496282  161.620    0.000  659.425    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100    9.908    0.001  299.597    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.039    0.000   40.085    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.070    0.000   38.679    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   12.915    0.001   38.545    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.097    0.000   26.711    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.193    0.000   14.409    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.089    0.000    2.196    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.295    0.000    0.878    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.670    0.670 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
