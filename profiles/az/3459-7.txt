         5134164774 function calls (5134042735 primitive calls) in 1842.876 seconds
        1   11.597   11.597 1842.158 1842.158 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    6.323    0.001 1830.532    0.181 GerrymanderingMCMC.py:235(recombination_of_districts)
   391078    2.772    0.000 1205.582    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1564312    1.857    0.000  844.895    0.001 GerrymanderingMCMC.py:190(__district_size)
304093748  169.116    0.000  690.073    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10101    9.774    0.001  301.040    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.040    0.000   40.451    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.058    0.000   39.013    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.003    0.001   38.889    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.096    0.000   26.913    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.219    0.000   14.588    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.104    0.000    2.239    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.280    0.000    0.846    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.686    0.686 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
