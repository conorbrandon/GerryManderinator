         5144189850 function calls (5144067811 primitive calls) in 1863.404 seconds
        1   11.748   11.748 1862.663 1862.663 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    6.316    0.001 1850.883    0.183 GerrymanderingMCMC.py:235(recombination_of_districts)
   398727    2.813    0.000 1224.544    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1594908    1.894    0.000  859.857    0.001 GerrymanderingMCMC.py:190(__district_size)
304850706  170.459    0.000  703.899    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100    9.957    0.001  302.404    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.042    0.000   40.566    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.057    0.000   39.145    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.154    0.001   39.023    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.094    0.000   27.076    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.244    0.000   14.542    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.093    0.000    2.261    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.291    0.000    0.886    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.708    0.708 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
