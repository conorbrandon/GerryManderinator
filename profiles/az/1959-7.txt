         5449365082 function calls (5449243043 primitive calls) in 1943.182 seconds
        1   11.791   11.791 1942.481 1942.481 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    6.778    0.001 1930.660    0.191 GerrymanderingMCMC.py:235(recombination_of_districts)
   414951    2.850    0.000 1298.706    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1659804    1.978    0.000  911.095    0.001 GerrymanderingMCMC.py:190(__district_size)
330420582  183.109    0.000  745.577    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10101   10.118    0.001  307.763    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.052    0.000   40.268    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.058    0.000   38.805    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   12.994    0.001   38.680    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.101    0.000   26.814    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.200    0.000   14.474    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.097    0.000    2.291    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.289    0.000    0.872    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.669    0.669 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
