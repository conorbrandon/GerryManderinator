         4515351095 function calls (4515229056 primitive calls) in 1646.945 seconds
        1   11.795   11.795 1646.243 1646.243 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.375    0.001 1634.416    0.162 GerrymanderingMCMC.py:235(recombination_of_districts)
   339184    2.328    0.000 1003.208    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1356736    1.635    0.000  703.324    0.001 GerrymanderingMCMC.py:190(__district_size)
250465136  140.945    0.000  574.816    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10101   10.016    0.001  306.132    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.043    0.000   40.716    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.057    0.000   39.277    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.183    0.001   39.156    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.093    0.000   26.892    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.196    0.000   14.509    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.099    0.000    2.287    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.290    0.000    0.855    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.669    0.669 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
