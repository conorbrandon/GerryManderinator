         4753716143 function calls (4753594104 primitive calls) in 1732.856 seconds
        1   11.758   11.758 1732.082 1732.082 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.782    0.001 1720.294    0.170 GerrymanderingMCMC.py:235(recombination_of_districts)
   360107    2.563    0.000 1087.392    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1440428    1.817    0.000  765.439    0.001 GerrymanderingMCMC.py:190(__district_size)
271272990  154.706    0.000  628.387    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10102   10.165    0.001  306.994    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.041    0.000   41.319    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.060    0.000   39.856    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.149    0.001   39.726    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.098    0.000   27.189    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.187    0.000   14.436    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.100    0.000    2.310    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.275    0.000    0.847    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.742    0.742 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
