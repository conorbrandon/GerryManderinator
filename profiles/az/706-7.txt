         5003300153 function calls (5003178114 primitive calls) in 1803.642 seconds
        1   11.580   11.580 1802.901 1802.901 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    6.125    0.001 1791.287    0.177 GerrymanderingMCMC.py:235(recombination_of_districts)
   389091    2.679    0.000 1165.439    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1556364    1.869    0.000  821.250    0.001 GerrymanderingMCMC.py:190(__district_size)
292828494  165.668    0.000  673.668    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10101   10.227    0.001  303.033    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.041    0.000   40.937    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.058    0.000   39.490    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.196    0.001   39.368    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.096    0.000   26.918    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.210    0.000   14.333    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.105    0.000    2.296    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.288    0.000    0.854    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.709    0.709 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.006    0.006    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
