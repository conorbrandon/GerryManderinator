         4660052108 function calls (4659930069 primitive calls) in 1695.797 seconds
        1   10.990   10.990 1695.097 1695.097 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.567    0.001 1684.067    0.167 GerrymanderingMCMC.py:235(recombination_of_districts)
   355037    2.421    0.000 1061.105    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1420148    1.716    0.000  747.880    0.001 GerrymanderingMCMC.py:190(__district_size)
263731484  150.167    0.000  613.316    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100    9.867    0.001  300.829    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.040    0.000   40.827    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.055    0.000   39.427    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.301    0.001   39.303    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.091    0.000   27.100    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.181    0.000   14.379    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.093    0.000    2.201    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.298    0.000    0.879    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.668    0.668 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.007    0.007 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
