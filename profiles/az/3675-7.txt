         5236421943 function calls (5236299904 primitive calls) in 1886.344 seconds
        1   12.077   12.077 1885.636 1885.636 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    6.579    0.001 1873.529    0.185 GerrymanderingMCMC.py:235(recombination_of_districts)
   405143    2.796    0.000 1246.768    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1620572    1.918    0.000  878.575    0.001 GerrymanderingMCMC.py:190(__district_size)
313620314  177.438    0.000  720.699    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   10.055    0.001  302.542    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.041    0.000   40.869    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.058    0.000   39.429    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.171    0.001   39.304    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.094    0.000   26.861    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.177    0.000   14.335    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.093    0.000    2.235    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.288    0.000    0.872    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.675    0.675 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.006    0.006    0.030    0.030 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
