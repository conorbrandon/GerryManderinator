         4595484605 function calls (4595362566 primitive calls) in 1659.662 seconds
        1   11.309   11.309 1658.922 1658.922 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.520    0.001 1647.582    0.163 GerrymanderingMCMC.py:235(recombination_of_districts)
   339363    2.359    0.000 1026.094    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1357452    1.613    0.000  723.203    0.001 GerrymanderingMCMC.py:190(__district_size)
257466342  142.959    0.000  592.034    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10102    9.815    0.001  302.573    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.042    0.000   40.607    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.056    0.000   39.194    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.065    0.001   39.073    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.092    0.000   26.834    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.145    0.000   14.371    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.096    0.000    2.234    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.279    0.000    0.870    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.708    0.708 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
