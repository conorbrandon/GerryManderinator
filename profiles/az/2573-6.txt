         5594791108 function calls (5594669069 primitive calls) in 2015.133 seconds
        1   11.329   11.329 2014.366 2014.366 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    7.027    0.001 2002.992    0.198 GerrymanderingMCMC.py:235(recombination_of_districts)
   429510    3.003    0.000 1368.875    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1718040    2.015    0.000  963.228    0.001 GerrymanderingMCMC.py:190(__district_size)
342902594  189.841    0.000  787.737    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10102   10.000    0.001  307.175    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.042    0.000   40.901    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.057    0.000   39.493    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.081    0.001   39.372    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.093    0.000   27.181    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.172    0.000   14.450    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.089    0.000    2.220    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.280    0.000    0.874    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.734    0.734 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.030    0.030 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
