         5123480689 function calls (5123358650 primitive calls) in 1842.101 seconds
        1   11.136   11.136 1841.366 1841.366 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    6.305    0.001 1830.199    0.181 GerrymanderingMCMC.py:235(recombination_of_districts)
   390761    2.700    0.000 1201.769    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1563044    1.860    0.000  841.671    0.001 GerrymanderingMCMC.py:190(__district_size)
301969790  169.465    0.000  688.830    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10102   10.152    0.001  308.384    0.031 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.042    0.000   40.063    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.056    0.000   38.608    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.028    0.001   38.489    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.089    0.000   26.549    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.202    0.000   14.706    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.091    0.000    2.266    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.284    0.000    0.866    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.703    0.703 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
