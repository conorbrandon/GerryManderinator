         5244834967 function calls (5244712928 primitive calls) in 1890.624 seconds
        1   11.685   11.685 1889.894 1889.894 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    6.467    0.001 1878.152    0.186 GerrymanderingMCMC.py:235(recombination_of_districts)
   407969    2.805    0.000 1252.589    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1631876    1.922    0.000  883.158    0.001 GerrymanderingMCMC.py:190(__district_size)
313649542  176.799    0.000  723.632    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10102    9.946    0.001  302.252    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.040    0.000   40.469    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.058    0.000   38.991    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   12.879    0.001   38.869    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.092    0.000   26.815    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.189    0.000   14.417    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.094    0.000    2.244    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.278    0.000    0.865    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.696    0.696 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.030    0.030 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
