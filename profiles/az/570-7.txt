         4877356431 function calls (4877234392 primitive calls) in 1757.611 seconds
        1   11.703   11.703 1756.880 1756.880 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.981    0.001 1745.141    0.173 GerrymanderingMCMC.py:235(recombination_of_districts)
   378717    2.657    0.000 1117.837    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1514868    1.812    0.000  781.963    0.001 GerrymanderingMCMC.py:190(__district_size)
282223298  158.400    0.000  640.211    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10101    9.969    0.001  302.997    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.039    0.000   41.099    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.057    0.000   39.664    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.305    0.001   39.540    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.098    0.000   27.049    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.195    0.000   14.384    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.093    0.000    2.319    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.284    0.000    0.866    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.698    0.698 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
