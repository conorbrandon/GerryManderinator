         5190569468 function calls (5190447429 primitive calls) in 1865.537 seconds
        1   11.187   11.187 1864.805 1864.805 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    6.494    0.001 1853.587    0.184 GerrymanderingMCMC.py:235(recombination_of_districts)
   403540    2.806    0.000 1228.827    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1614160    1.979    0.000  860.560    0.001 GerrymanderingMCMC.py:190(__district_size)
308977100  171.037    0.000  703.215    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10101    9.946    0.001  302.556    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.040    0.000   40.383    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.056    0.000   38.952    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.025    0.001   38.834    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.093    0.000   26.721    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.214    0.000   14.556    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.091    0.000    2.226    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.275    0.000    0.837    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.700    0.700 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
