         4814302792 function calls (4814180753 primitive calls) in 1752.796 seconds
        1   11.259   11.259 1752.100 1752.100 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.866    0.001 1740.809    0.172 GerrymanderingMCMC.py:235(recombination_of_districts)
   365380    2.518    0.000 1112.053    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1461520    1.767    0.000  781.530    0.001 GerrymanderingMCMC.py:190(__district_size)
276184538  156.733    0.000  641.094    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10102   10.228    0.001  304.662    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.040    0.000   41.510    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.056    0.000   40.077    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.233    0.001   39.957    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.095    0.000   27.389    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.288    0.000   14.756    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.094    0.000    2.253    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.293    0.000    0.875    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.671    0.671 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.006    0.006    0.030    0.030 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
