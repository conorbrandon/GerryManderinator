         4843164708 function calls (4843042669 primitive calls) in 1745.539 seconds
        1   10.946   10.946 1744.823 1744.823 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.778    0.001 1733.848    0.172 GerrymanderingMCMC.py:235(recombination_of_districts)
   369225    2.635    0.000 1112.127    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1476900    1.748    0.000  781.414    0.001 GerrymanderingMCMC.py:190(__district_size)
278628526  159.854    0.000  638.187    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10103    9.876    0.001  302.587    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.040    0.000   40.752    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.054    0.000   39.353    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.225    0.001   39.239    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.091    0.000   26.883    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.176    0.000   14.328    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.088    0.000    2.198    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.283    0.000    0.845    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.684    0.684 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
