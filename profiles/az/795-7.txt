         4355779419 function calls (4355657380 primitive calls) in 1585.633 seconds
        1   11.668   11.668 1584.864 1584.864 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.224    0.001 1573.164    0.156 GerrymanderingMCMC.py:235(recombination_of_districts)
   319129    2.279    0.000  948.697    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1276516    1.534    0.000  665.992    0.001 GerrymanderingMCMC.py:190(__district_size)
237548390  133.828    0.000  544.958    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10101   10.097    0.001  303.810    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.042    0.000   40.371    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.059    0.000   38.950    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   12.847    0.001   38.825    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.098    0.000   26.645    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.230    0.000   14.380    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.094    0.000    2.302    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.274    0.000    0.836    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.736    0.736 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
