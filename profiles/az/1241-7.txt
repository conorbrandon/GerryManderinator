         4712117419 function calls (4711995380 primitive calls) in 1707.122 seconds
        1   11.750   11.750 1706.414 1706.414 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.731    0.001 1694.633    0.168 GerrymanderingMCMC.py:235(recombination_of_districts)
   355061    2.449    0.000 1068.689    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1420244    1.677    0.000  750.330    0.001 GerrymanderingMCMC.py:190(__district_size)
268173212  151.867    0.000  613.078    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10104   10.125    0.001  302.407    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.054    0.000   40.604    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.057    0.000   39.148    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.073    0.001   39.026    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.095    0.000   26.866    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.209    0.000   14.321    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.092    0.000    2.263    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.274    0.000    0.836    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.675    0.675 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
