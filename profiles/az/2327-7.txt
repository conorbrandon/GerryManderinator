         5239498985 function calls (5239376946 primitive calls) in 1887.598 seconds
        1   11.524   11.524 1886.874 1886.874 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    6.548    0.001 1875.319    0.186 GerrymanderingMCMC.py:235(recombination_of_districts)
   403938    2.732    0.000 1250.596    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1615752    1.971    0.000  880.525    0.001 GerrymanderingMCMC.py:190(__district_size)
312819868  179.956    0.000  721.652    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   10.011    0.001  303.067    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.041    0.000   40.895    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.057    0.000   39.467    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.340    0.001   39.345    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.096    0.000   27.028    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.187    0.000   14.414    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.091    0.000    2.253    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.285    0.000    0.877    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.691    0.691 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
