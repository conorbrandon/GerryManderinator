         5008676446 function calls (5008554407 primitive calls) in 1825.715 seconds
        1   11.870   11.870 1824.980 1824.980 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    6.123    0.001 1813.040    0.180 GerrymanderingMCMC.py:235(recombination_of_districts)
   383238    2.752    0.000 1180.818    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1532952    1.815    0.000  830.555    0.001 GerrymanderingMCMC.py:190(__district_size)
293114478  166.909    0.000  680.139    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10103   10.167    0.001  305.282    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.042    0.000   41.134    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.066    0.000   39.708    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.222    0.001   39.575    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.095    0.000   27.157    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.223    0.000   14.541    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.093    0.000    2.302    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.280    0.000    0.848    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.703    0.703 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
