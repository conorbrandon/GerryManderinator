         4666835278 function calls (4666713239 primitive calls) in 1686.299 seconds
        1   11.968   11.968 1685.566 1685.566 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.538    0.001 1673.563    0.166 GerrymanderingMCMC.py:235(recombination_of_districts)
   352736    2.393    0.000 1047.348    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1410944    1.655    0.000  738.219    0.001 GerrymanderingMCMC.py:190(__district_size)
263464254  148.451    0.000  605.852    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10101    9.956    0.001  303.387    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.043    0.000   40.925    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.058    0.000   39.458    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.474    0.001   39.326    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.094    0.000   27.005    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.217    0.000   14.390    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.117    0.000    2.299    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.284    0.000    0.854    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.700    0.700 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.006    0.006    0.030    0.030 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
