         4451645168 function calls (4451523129 primitive calls) in 1613.533 seconds
        1   11.220   11.220 1612.778 1612.778 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.284    0.001 1601.529    0.159 GerrymanderingMCMC.py:235(recombination_of_districts)
   331410    2.282    0.000  976.787    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1325640    1.572    0.000  686.246    0.001 GerrymanderingMCMC.py:190(__district_size)
245613524  138.774    0.000  561.812    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   10.078    0.001  303.243    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.041    0.000   40.596    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.057    0.000   39.194    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.062    0.001   39.070    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.092    0.000   26.904    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.184    0.000   14.390    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.093    0.000    2.289    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.293    0.000    0.856    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.722    0.722 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
