         5004789363 function calls (5004667324 primitive calls) in 1798.657 seconds
        1   11.150   11.150 1797.953 1797.953 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    6.276    0.001 1786.773    0.177 GerrymanderingMCMC.py:235(recombination_of_districts)
   390439    2.721    0.000 1162.536    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1561756    1.875    0.000  818.189    0.001 GerrymanderingMCMC.py:190(__district_size)
292876818  166.475    0.000  669.251    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10102    9.774    0.001  302.985    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.041    0.000   40.476    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.069    0.000   39.050    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.191    0.001   38.919    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.105    0.000   26.724    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.212    0.000   14.352    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.093    0.000    2.206    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.277    0.000    0.843    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.672    0.672 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
