         4636834833 function calls (4636712794 primitive calls) in 1683.598 seconds
        1   12.178   12.178 1682.849 1682.849 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.450    0.001 1670.642    0.165 GerrymanderingMCMC.py:235(recombination_of_districts)
   342608    2.363    0.000 1035.992    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1370432    1.652    0.000  728.517    0.001 GerrymanderingMCMC.py:190(__district_size)
260984812  146.818    0.000  597.572    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10101   10.070    0.001  304.687    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.042    0.000   41.859    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.059    0.000   40.390    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.393    0.001   40.263    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.095    0.000   27.443    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.220    0.000   14.522    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.096    0.000    2.268    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.282    0.000    0.861    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.717    0.717 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
