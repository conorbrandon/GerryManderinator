         4934102002 function calls (4933979963 primitive calls) in 1765.525 seconds
        1   10.979   10.979 1764.768 1764.768 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.976    0.001 1753.758    0.174 GerrymanderingMCMC.py:235(recombination_of_districts)
   379466    2.641    0.000 1135.007    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1517864    1.798    0.000  799.489    0.001 GerrymanderingMCMC.py:190(__district_size)
286696202  162.285    0.000  656.372    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10101   10.063    0.001  301.406    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.040    0.000   39.735    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.054    0.000   38.365    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   12.684    0.001   38.250    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.089    0.000   26.421    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.131    0.000   14.224    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.086    0.000    2.185    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.271    0.000    0.850    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.725    0.725 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
