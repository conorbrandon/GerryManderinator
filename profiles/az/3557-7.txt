         4585996930 function calls (4585874891 primitive calls) in 1660.391 seconds
        1   12.426   12.426 1659.685 1659.685 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.477    0.001 1647.231    0.163 GerrymanderingMCMC.py:235(recombination_of_districts)
   337027    2.320    0.000 1016.396    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1348108    1.596    0.000  714.431    0.001 GerrymanderingMCMC.py:190(__district_size)
256272220  143.440    0.000  585.682    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10102   10.289    0.001  307.699    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.042    0.000   40.416    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.059    0.000   38.983    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   12.950    0.001   38.857    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.095    0.000   26.739    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.222    0.000   14.425    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.097    0.000    2.266    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.280    0.000    0.846    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.673    0.673 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.006    0.006    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
