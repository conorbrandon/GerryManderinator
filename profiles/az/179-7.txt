         4506460893 function calls (4506338854 primitive calls) in 1637.281 seconds
        1   11.381   11.381 1636.559 1636.559 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.317    0.001 1625.148    0.161 GerrymanderingMCMC.py:235(recombination_of_districts)
   330739    2.302    0.000 1000.450    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1322956    1.572    0.000  704.572    0.001 GerrymanderingMCMC.py:190(__district_size)
249820136  143.866    0.000  577.407    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10104    9.960    0.001  304.970    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.039    0.000   40.334    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.060    0.000   38.935    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.196    0.001   38.809    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.096    0.000   26.583    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.238    0.000   14.394    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.095    0.000    2.261    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.308    0.000    0.864    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.690    0.690 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
