         5228429768 function calls (5228307729 primitive calls) in 1895.455 seconds
        1   11.483   11.483 1894.738 1894.738 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    6.477    0.001 1883.225    0.186 GerrymanderingMCMC.py:235(recombination_of_districts)
   394005    2.852    0.000 1245.733    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1576020    1.892    0.000  871.422    0.001 GerrymanderingMCMC.py:190(__district_size)
311158100  174.045    0.000  713.790    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   10.370    0.001  311.203    0.031 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.040    0.000   41.324    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.057    0.000   39.859    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.334    0.001   39.738    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.096    0.000   27.317    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.209    0.000   14.888    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.095    0.000    2.263    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.278    0.000    0.851    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.684    0.684 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.006    0.006    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
