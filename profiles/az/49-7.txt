         4936610074 function calls (4936488035 primitive calls) in 1790.709 seconds
        1   11.888   11.888 1790.006 1790.006 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    6.037    0.001 1778.073    0.176 GerrymanderingMCMC.py:235(recombination_of_districts)
   377175    2.562    0.000 1145.526    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1508700    1.872    0.000  806.116    0.001 GerrymanderingMCMC.py:190(__district_size)
286300508  163.685    0.000  661.779    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10102   10.334    0.001  307.973    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.040    0.000   40.944    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.058    0.000   39.473    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.309    0.001   39.351    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.099    0.000   27.052    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.249    0.000   14.672    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.091    0.000    2.237    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.299    0.000    0.865    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.672    0.672 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
