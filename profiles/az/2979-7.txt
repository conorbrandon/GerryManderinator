         4787301782 function calls (4787179743 primitive calls) in 1723.540 seconds
        1   12.337   12.337 1722.796 1722.796 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.854    0.001 1710.430    0.169 GerrymanderingMCMC.py:235(recombination_of_districts)
   355260    2.597    0.000 1084.336    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1421040    1.714    0.000  759.360    0.001 GerrymanderingMCMC.py:190(__district_size)
274121246  154.013    0.000  621.521    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   10.287    0.001  302.966    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.043    0.000   40.137    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.068    0.000   38.701    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   12.966    0.001   38.566    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.097    0.000   26.481    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.192    0.000   14.431    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.094    0.000    2.276    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.287    0.000    0.856    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.709    0.709 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.032    0.032 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.032    0.032 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.009    0.009 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
