         4919689217 function calls (4919567178 primitive calls) in 1770.579 seconds
        1   11.781   11.781 1769.827 1769.827 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    6.018    0.001 1758.011    0.174 GerrymanderingMCMC.py:235(recombination_of_districts)
   369241    2.546    0.000 1132.210    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1476964    1.765    0.000  797.599    0.001 GerrymanderingMCMC.py:190(__district_size)
285517346  160.249    0.000  652.007    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10102    9.889    0.001  303.525    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.041    0.000   40.363    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.059    0.000   38.939    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.018    0.001   38.814    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.094    0.000   26.671    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.170    0.000   14.318    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.093    0.000    2.262    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.280    0.000    0.859    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.719    0.719 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
