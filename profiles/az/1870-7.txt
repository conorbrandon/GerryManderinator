         4871145567 function calls (4871023528 primitive calls) in 1765.858 seconds
        1   11.738   11.738 1765.093 1765.093 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.906    0.001 1753.326    0.174 GerrymanderingMCMC.py:235(recombination_of_districts)
   363955    2.518    0.000 1122.336    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1455820    1.743    0.000  787.924    0.001 GerrymanderingMCMC.py:190(__district_size)
280957192  159.111    0.000  645.214    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100    9.897    0.001  306.778    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.040    0.000   40.383    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.059    0.000   38.953    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.188    0.001   38.826    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.096    0.000   26.988    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.178    0.000   14.517    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.095    0.000    2.340    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.294    0.000    0.858    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.733    0.733 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
