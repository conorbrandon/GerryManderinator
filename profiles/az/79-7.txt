         4737445063 function calls (4737323024 primitive calls) in 1723.076 seconds
        1   10.990   10.990 1722.310 1722.310 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.767    0.001 1711.290    0.169 GerrymanderingMCMC.py:235(recombination_of_districts)
   361576    2.492    0.000 1083.782    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1446304    1.716    0.000  761.451    0.001 GerrymanderingMCMC.py:190(__district_size)
269997282  154.987    0.000  624.770    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10102   10.061    0.001  305.858    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.041    0.000   40.970    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.055    0.000   39.573    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.146    0.001   39.455    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.091    0.000   27.112    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.130    0.000   14.373    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.090    0.000    2.207    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.277    0.000    0.842    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.733    0.733 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
