         4999919900 function calls (4999797861 primitive calls) in 1801.574 seconds
        1   11.265   11.265 1800.863 1800.863 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    6.117    0.001 1789.551    0.177 GerrymanderingMCMC.py:235(recombination_of_districts)
   382725    2.574    0.000 1163.012    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1530900    1.829    0.000  818.765    0.001 GerrymanderingMCMC.py:190(__district_size)
292225740  164.469    0.000  669.766    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   10.044    0.001  304.318    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.039    0.000   40.317    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.062    0.000   38.915    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.039    0.001   38.785    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.098    0.000   26.632    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.192    0.000   14.431    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.093    0.000    2.285    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.280    0.000    0.867    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.678    0.678 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
