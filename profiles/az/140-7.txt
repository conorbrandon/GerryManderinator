         4937753403 function calls (4937631364 primitive calls) in 1792.888 seconds
        1   11.323   11.323 1792.166 1792.166 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    6.042    0.001 1780.812    0.176 GerrymanderingMCMC.py:235(recombination_of_districts)
   375270    2.672    0.000 1157.479    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1501080    1.846    0.000  807.982    0.001 GerrymanderingMCMC.py:190(__district_size)
286913830  162.346    0.000  662.255    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10104    9.969    0.001  302.570    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.044    0.000   40.446    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.056    0.000   39.033    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.265    0.001   38.913    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.094    0.000   26.913    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.184    0.000   14.609    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.089    0.000    2.250    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.294    0.000    0.863    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.688    0.688 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
