         4738911383 function calls (4738789344 primitive calls) in 1700.728 seconds
        1   10.847   10.847 1699.999 1699.999 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.651    0.001 1689.121    0.167 GerrymanderingMCMC.py:235(recombination_of_districts)
   356829    2.486    0.000 1072.850    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1427316    1.703    0.000  756.442    0.001 GerrymanderingMCMC.py:190(__district_size)
270485086  151.690    0.000  621.290    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10101    9.896    0.001  299.478    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.045    0.000   40.573    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.054    0.000   39.171    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.022    0.001   39.056    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.091    0.000   26.762    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.129    0.000   14.325    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.099    0.000    2.155    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.282    0.000    0.851    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.701    0.701 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
