         4937387981 function calls (4937265942 primitive calls) in 1798.685 seconds
        1   11.805   11.805 1797.955 1797.955 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.962    0.001 1786.076    0.177 GerrymanderingMCMC.py:235(recombination_of_districts)
   370607    2.563    0.000 1160.560    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1482428    1.824    0.000  820.943    0.001 GerrymanderingMCMC.py:190(__district_size)
287665268  169.669    0.000  673.483    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   10.019    0.001  301.583    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.040    0.000   40.942    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.059    0.000   39.549    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.305    0.001   39.423    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.096    0.000   26.979    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.240    0.000   14.478    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.095    0.000    2.226    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.298    0.000    0.873    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.697    0.697 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
