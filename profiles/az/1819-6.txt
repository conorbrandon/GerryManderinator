         5029761062 function calls (5029639023 primitive calls) in 1804.215 seconds
        1   11.052   11.052 1803.483 1803.483 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    6.263    0.001 1792.400    0.177 GerrymanderingMCMC.py:235(recombination_of_districts)
   387663    2.650    0.000 1168.049    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1550652    1.862    0.000  819.209    0.001 GerrymanderingMCMC.py:190(__district_size)
294934768  165.104    0.000  671.580    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10101    9.849    0.001  303.238    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.039    0.000   40.398    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.056    0.000   38.958    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.129    0.001   38.840    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.092    0.000   26.825    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.191    0.000   14.443    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.087    0.000    2.270    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.280    0.000    0.849    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.700    0.700 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
