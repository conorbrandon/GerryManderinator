         4393991446 function calls (4393869407 primitive calls) in 1589.945 seconds
        1   10.967   10.967 1589.230 1589.230 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.090    0.001 1578.229    0.156 GerrymanderingMCMC.py:235(recombination_of_districts)
   322335    2.245    0.000  958.788    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1289340    1.515    0.000  672.947    0.001 GerrymanderingMCMC.py:190(__district_size)
240602310  134.589    0.000  551.895    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   10.076    0.001  302.205    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.038    0.000   40.335    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.054    0.000   38.968    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   12.958    0.001   38.853    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.102    0.000   26.624    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.183    0.000   14.303    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.105    0.000    2.176    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.294    0.000    0.859    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.682    0.682 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
