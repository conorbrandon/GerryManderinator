         5231371329 function calls (5231249290 primitive calls) in 1893.750 seconds
        1   12.111   12.111 1893.004 1893.004 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    6.594    0.001 1880.863    0.186 GerrymanderingMCMC.py:235(recombination_of_districts)
   408493    2.852    0.000 1249.057    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1633972    1.975    0.000  877.841    0.001 GerrymanderingMCMC.py:190(__district_size)
312187766  176.042    0.000  718.957    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10103    9.982    0.001  305.377    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.041    0.000   40.877    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.073    0.000   39.405    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.438    0.001   39.264    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.098    0.000   27.225    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.203    0.000   14.453    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.105    0.000    2.364    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.291    0.000    0.871    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.714    0.714 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
