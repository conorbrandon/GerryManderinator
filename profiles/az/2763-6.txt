         4533908383 function calls (4533786344 primitive calls) in 1655.619 seconds
        1   11.229   11.229 1654.888 1654.888 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.429    0.001 1643.630    0.163 GerrymanderingMCMC.py:235(recombination_of_districts)
   339248    2.351    0.000 1016.245    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1356992    1.672    0.000  714.274    0.001 GerrymanderingMCMC.py:190(__district_size)
252025860  145.500    0.000  583.417    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10101    9.965    0.001  304.188    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.039    0.000   40.786    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.058    0.000   39.377    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.187    0.001   39.252    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.100    0.000   26.943    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.223    0.000   14.621    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.095    0.000    2.310    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.280    0.000    0.853    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.698    0.698 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
