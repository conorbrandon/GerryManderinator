         5280274599 function calls (5280152560 primitive calls) in 1897.385 seconds
        1   12.089   12.089 1896.662 1896.662 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    6.578    0.001 1884.542    0.187 GerrymanderingMCMC.py:235(recombination_of_districts)
   405176    2.831    0.000 1256.643    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1620704    1.938    0.000  881.363    0.001 GerrymanderingMCMC.py:190(__district_size)
316857936  177.675    0.000  721.666    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100    9.961    0.001  302.355    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.042    0.000   40.090    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.059    0.000   38.638    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   12.938    0.001   38.512    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.097    0.000   26.499    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.184    0.000   14.248    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.097    0.000    2.301    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.277    0.000    0.868    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.690    0.690 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
