         4773530454 function calls (4773408415 primitive calls) in 1725.636 seconds
        1   11.011   11.011 1724.675 1724.675 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.805    0.001 1713.593    0.170 GerrymanderingMCMC.py:235(recombination_of_districts)
   359259    2.485    0.000 1087.913    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1437036    1.720    0.000  766.224    0.001 GerrymanderingMCMC.py:190(__district_size)
272841122  155.663    0.000  629.652    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10101   10.045    0.001  304.556    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.038    0.000   40.655    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.056    0.000   39.270    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.068    0.001   39.151    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.093    0.000   26.967    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.172    0.000   14.340    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.093    0.000    2.221    0.000 GerrymanderingMCMC.py:157(__random_district_label)
        1    0.000    0.000    0.922    0.922 GerrymanderingMCMC.py:1(<module>)
    10100    0.291    0.000    0.898    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.036    0.036 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.036    0.036 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
