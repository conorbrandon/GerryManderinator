         5786510103 function calls (5786388064 primitive calls) in 2086.925 seconds
        1   11.887   11.887 2086.178 2086.178 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    7.414    0.001 2074.254    0.205 GerrymanderingMCMC.py:235(recombination_of_districts)
   451530    3.125    0.000 1441.590    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1806120    2.174    0.000 1014.765    0.001 GerrymanderingMCMC.py:190(__district_size)
359848896  206.867    0.000  831.192    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10103   10.114    0.001  305.998    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.040    0.000   40.916    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.059    0.000   39.472    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.109    0.001   39.345    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.099    0.000   27.033    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.250    0.000   14.735    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.092    0.000    2.315    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.286    0.000    0.870    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.714    0.714 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
