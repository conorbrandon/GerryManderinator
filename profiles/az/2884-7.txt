         5149483888 function calls (5149361849 primitive calls) in 1867.032 seconds
        1   12.767   12.767 1866.264 1866.264 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    6.481    0.001 1853.468    0.184 GerrymanderingMCMC.py:235(recombination_of_districts)
   405376    2.814    0.000 1223.033    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1621504    1.924    0.000  862.357    0.001 GerrymanderingMCMC.py:190(__district_size)
305223152  173.246    0.000  707.824    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10103   10.164    0.001  305.060    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.042    0.000   40.910    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.061    0.000   39.478    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.434    0.001   39.347    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.098    0.000   27.009    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.203    0.000   14.562    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.098    0.000    2.316    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.283    0.000    0.850    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.735    0.735 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.030    0.030 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.007    0.007 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
