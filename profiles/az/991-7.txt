         4737568583 function calls (4737446544 primitive calls) in 1724.069 seconds
        1   11.291   11.291 1723.321 1723.321 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.737    0.001 1711.997    0.170 GerrymanderingMCMC.py:235(recombination_of_districts)
   348681    2.454    0.000 1082.211    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1394724    1.686    0.000  760.643    0.001 GerrymanderingMCMC.py:190(__district_size)
270014656  150.705    0.000  622.375    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10101   10.183    0.001  306.297    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.042    0.000   41.098    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.059    0.000   39.637    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.274    0.001   39.511    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.095    0.000   27.235    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.174    0.000   14.483    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.104    0.000    2.285    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.280    0.000    0.857    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.722    0.722 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
