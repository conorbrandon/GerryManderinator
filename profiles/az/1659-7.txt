         4851397895 function calls (4851275856 primitive calls) in 1754.964 seconds
        1   11.290   11.290 1754.151 1754.151 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.901    0.001 1742.832    0.173 GerrymanderingMCMC.py:235(recombination_of_districts)
   372166    2.585    0.000 1117.994    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1488664    1.790    0.000  784.466    0.001 GerrymanderingMCMC.py:190(__district_size)
279986884  155.803    0.000  640.132    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10103    9.851    0.001  300.987    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.040    0.000   40.698    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.058    0.000   39.252    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.116    0.001   39.128    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.095    0.000   26.793    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.192    0.000   14.312    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.096    0.000    2.279    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.282    0.000    0.856    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.781    0.781 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
