         5412743434 function calls (5412621395 primitive calls) in 1943.417 seconds
        1   11.799   11.799 1942.666 1942.666 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    6.878    0.001 1930.833    0.191 GerrymanderingMCMC.py:235(recombination_of_districts)
   422739    2.959    0.000 1305.455    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1690956    2.065    0.000  919.781    0.001 GerrymanderingMCMC.py:190(__district_size)
327817122  185.346    0.000  754.548    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   10.218    0.001  302.659    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.042    0.000   40.216    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.059    0.000   38.789    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   12.942    0.001   38.664    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.097    0.000   26.732    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.208    0.000   14.340    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.096    0.000    2.321    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.294    0.000    0.877    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.719    0.719 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
