         4763318962 function calls (4763196923 primitive calls) in 1697.480 seconds
        1   11.249   11.249 1696.774 1696.774 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.783    0.001 1685.497    0.167 GerrymanderingMCMC.py:235(recombination_of_districts)
   363416    2.522    0.000 1065.663    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1453664    1.709    0.000  747.188    0.001 GerrymanderingMCMC.py:190(__district_size)
272185458  149.581    0.000  611.319    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100    9.815    0.001  299.977    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.039    0.000   40.004    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.055    0.000   38.591    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.099    0.001   38.468    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.092    0.000   26.567    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.140    0.000   14.118    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.102    0.000    2.208    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.279    0.000    0.859    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.673    0.673 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
