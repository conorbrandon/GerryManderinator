         5280589421 function calls (5280467382 primitive calls) in 1875.163 seconds
        1   11.259   11.259 1874.429 1874.429 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    6.571    0.001 1863.141    0.184 GerrymanderingMCMC.py:235(recombination_of_districts)
   408306    2.872    0.000 1245.116    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1633224    1.875    0.000  874.510    0.001 GerrymanderingMCMC.py:190(__district_size)
317207140  177.198    0.000  716.924    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10101    9.980    0.001  299.684    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.039    0.000   39.712    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.054    0.000   38.323    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   12.735    0.001   38.207    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.091    0.000   26.199    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.145    0.000   14.158    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.091    0.000    2.227    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.279    0.000    0.851    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.702    0.702 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
