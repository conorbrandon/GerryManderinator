         4308681385 function calls (4308559346 primitive calls) in 1563.092 seconds
        1   11.755   11.755 1562.358 1562.358 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    4.991    0.000 1550.572    0.154 GerrymanderingMCMC.py:235(recombination_of_districts)
   315267    2.228    0.000  931.842    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1261068    1.522    0.000  653.930    0.001 GerrymanderingMCMC.py:190(__district_size)
233065092  130.894    0.000  534.174    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10101    9.846    0.001  299.485    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.042    0.000   40.198    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.056    0.000   38.789    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   12.850    0.001   38.669    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.094    0.000   26.737    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.146    0.000   14.319    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.106    0.000    2.261    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.276    0.000    0.870    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.702    0.702 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
