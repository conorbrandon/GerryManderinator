         4658880954 function calls (4658758915 primitive calls) in 1699.100 seconds
        1   11.735   11.735 1698.360 1698.360 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.587    0.001 1686.592    0.167 GerrymanderingMCMC.py:235(recombination_of_districts)
   352326    2.545    0.000 1061.170    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1409304    1.709    0.000  747.581    0.001 GerrymanderingMCMC.py:190(__district_size)
263189982  150.030    0.000  611.506    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10101   10.101    0.001  301.681    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.042    0.000   40.994    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.063    0.000   39.568    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.359    0.001   39.438    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.107    0.000   27.135    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.230    0.000   14.454    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.094    0.000    2.275    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.297    0.000    0.867    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.707    0.707 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.006    0.006    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
