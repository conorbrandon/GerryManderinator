         5123210640 function calls (5123088601 primitive calls) in 1840.936 seconds
        1   11.272   11.272 1840.178 1840.178 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    6.336    0.001 1828.877    0.181 GerrymanderingMCMC.py:235(recombination_of_districts)
   389764    2.773    0.000 1202.752    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1559056    1.864    0.000  846.812    0.001 GerrymanderingMCMC.py:190(__district_size)
302365552  167.998    0.000  691.602    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10101    9.833    0.001  303.217    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.041    0.000   40.160    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.059    0.000   38.744    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   12.996    0.001   38.622    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.092    0.000   26.678    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.183    0.000   14.436    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.092    0.000    2.257    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.276    0.000    0.838    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.725    0.725 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
