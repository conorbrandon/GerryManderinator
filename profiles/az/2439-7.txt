         4771202255 function calls (4771080216 primitive calls) in 1707.477 seconds
        1   11.196   11.196 1706.725 1706.725 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.685    0.001 1695.458    0.168 GerrymanderingMCMC.py:235(recombination_of_districts)
   354463    2.435    0.000 1080.210    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1417852    1.729    0.000  760.428    0.001 GerrymanderingMCMC.py:190(__district_size)
273006662  153.012    0.000  622.319    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100    9.622    0.001  297.514    0.029 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.040    0.000   40.252    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.055    0.000   38.844    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.145    0.001   38.726    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.090    0.000   26.593    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.165    0.000   14.164    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.091    0.000    2.183    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.272    0.000    0.828    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.720    0.720 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
