         5257100806 function calls (5256978767 primitive calls) in 1913.115 seconds
        1   11.689   11.689 1912.410 1912.410 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    6.620    0.001 1900.692    0.188 GerrymanderingMCMC.py:235(recombination_of_districts)
   401591    2.850    0.000 1261.796    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1606364    1.897    0.000  884.903    0.001 GerrymanderingMCMC.py:190(__district_size)
313933090  176.263    0.000  726.697    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10104   10.374    0.001  307.610    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.048    0.000   41.214    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.059    0.000   39.741    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.154    0.001   39.618    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.091    0.000   27.368    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.238    0.000   14.817    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.094    0.000    2.291    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.280    0.000    0.878    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.672    0.672 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.030    0.030 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
