         5182579311 function calls (5182457272 primitive calls) in 1859.211 seconds
        1   11.333   11.333 1858.472 1858.472 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    6.391    0.001 1847.107    0.183 GerrymanderingMCMC.py:235(recombination_of_districts)
   405984    2.794    0.000 1221.526    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1623936    1.926    0.000  860.548    0.001 GerrymanderingMCMC.py:190(__district_size)
308256372  170.706    0.000  704.054    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10104   10.195    0.001  304.131    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.040    0.000   40.539    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.056    0.000   39.127    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.113    0.001   39.006    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.092    0.000   26.656    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.148    0.000   14.289    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.090    0.000    2.266    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.279    0.000    0.841    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.707    0.707 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
