         4917641097 function calls (4917519058 primitive calls) in 1778.350 seconds
        1   11.210   11.210 1777.587 1777.587 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.922    0.001 1766.343    0.175 GerrymanderingMCMC.py:235(recombination_of_districts)
   375483    2.643    0.000 1144.070    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1501932    1.776    0.000  807.015    0.001 GerrymanderingMCMC.py:190(__district_size)
285698712  159.899    0.000  661.325    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10102    9.789    0.001  300.601    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.040    0.000   40.886    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.074    0.000   39.464    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   12.975    0.001   39.321    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.097    0.000   26.985    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.155    0.000   14.283    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.095    0.000    2.251    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.277    0.000    0.851    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.731    0.731 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
