         5197423572 function calls (5197301533 primitive calls) in 1886.322 seconds
        1   12.000   12.000 1885.599 1885.599 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    6.580    0.001 1873.567    0.186 GerrymanderingMCMC.py:235(recombination_of_districts)
   397769    2.737    0.000 1238.125    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1591076    1.902    0.000  872.336    0.001 GerrymanderingMCMC.py:190(__district_size)
309155670  175.285    0.000  714.640    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10102   10.150    0.001  309.501    0.031 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.042    0.000   41.307    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.061    0.000   39.845    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.394    0.001   39.716    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.095    0.000   27.229    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.180    0.000   14.649    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.110    0.000    2.350    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.283    0.000    0.863    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.691    0.691 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
