         4744490802 function calls (4744368763 primitive calls) in 1688.542 seconds
        1   10.882   10.882 1687.842 1687.842 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.649    0.001 1676.894    0.166 GerrymanderingMCMC.py:235(recombination_of_districts)
   352957    2.395    0.000 1060.281    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1411828    1.637    0.000  745.494    0.001 GerrymanderingMCMC.py:190(__district_size)
270756878  151.734    0.000  610.506    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10101    9.666    0.001  300.175    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.040    0.000   39.720    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.054    0.000   38.353    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   12.830    0.001   38.239    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.098    0.000   26.389    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.157    0.000   14.118    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.088    0.000    2.194    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.272    0.000    0.828    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.668    0.668 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
