         4713030026 function calls (4712907987 primitive calls) in 1710.371 seconds
        1   11.044   11.044 1706.690 1706.690 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.667    0.001 1695.612    0.168 GerrymanderingMCMC.py:235(recombination_of_districts)
   352708    2.433    0.000 1073.946    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1410832    1.699    0.000  754.150    0.001 GerrymanderingMCMC.py:190(__district_size)
268022934  150.651    0.000  616.580    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100    9.855    0.001  300.262    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.041    0.000   40.665    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.057    0.000   39.226    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.137    0.001   39.103    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.095    0.000   26.875    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.205    0.000   14.427    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
        1    0.000    0.000    3.616    3.616 GerrymanderingMCMC.py:1(<module>)
    30300    0.091    0.000    2.265    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.283    0.000    0.852    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.039    0.039 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.039    0.039 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.016    0.016 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
