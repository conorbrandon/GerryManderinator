         5306871472 function calls (5306749433 primitive calls) in 1926.663 seconds
        1   11.450   11.450 1925.967 1925.967 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    6.545    0.001 1914.487    0.190 GerrymanderingMCMC.py:235(recombination_of_districts)
   405678    2.862    0.000 1282.960    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1622712    1.958    0.000  903.456    0.001 GerrymanderingMCMC.py:190(__district_size)
318605612  179.910    0.000  738.942    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10104   10.000    0.001  306.209    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.048    0.000   41.321    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.061    0.000   39.896    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.257    0.001   39.766    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.095    0.000   27.324    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.181    0.000   14.594    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.095    0.000    2.341    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.282    0.000    0.870    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.664    0.664 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
