         4752170711 function calls (4752048672 primitive calls) in 1731.497 seconds
        1   11.142   11.142 1730.625 1730.625 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.744    0.001 1719.426    0.170 GerrymanderingMCMC.py:235(recombination_of_districts)
   352571    2.484    0.000 1092.162    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1410284    1.687    0.000  769.981    0.001 GerrymanderingMCMC.py:190(__district_size)
271217132  153.316    0.000  628.705    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10101    9.993    0.001  305.460    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.040    0.000   40.689    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.058    0.000   39.243    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.100    0.001   39.119    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.096    0.000   26.819    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.212    0.000   14.430    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.101    0.000    2.346    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.278    0.000    0.842    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.838    0.838 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.006    0.006    0.030    0.030 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
