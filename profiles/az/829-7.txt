         4370534966 function calls (4370412927 primitive calls) in 1594.286 seconds
        1   12.053   12.053 1593.531 1593.531 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.170    0.001 1581.450    0.157 GerrymanderingMCMC.py:235(recombination_of_districts)
   326404    2.255    0.000  953.895    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1305616    1.569    0.000  667.837    0.001 GerrymanderingMCMC.py:190(__district_size)
238846052  133.887    0.000  546.038    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   10.107    0.001  303.564    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.041    0.000   40.563    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.080    0.000   39.155    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.306    0.001   39.011    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.093    0.000   26.887    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.219    0.000   14.330    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.091    0.000    2.239    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.275    0.000    0.838    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.722    0.722 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.006    0.006    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
