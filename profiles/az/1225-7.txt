         4770985787 function calls (4770863748 primitive calls) in 1699.437 seconds
        1   11.008   11.008 1698.650 1698.650 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.765    0.001 1687.613    0.167 GerrymanderingMCMC.py:235(recombination_of_districts)
   355669    2.451    0.000 1070.215    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1422676    1.683    0.000  751.454    0.001 GerrymanderingMCMC.py:190(__district_size)
272329750  152.399    0.000  614.859    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10101    9.780    0.001  301.217    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.038    0.000   39.547    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.057    0.000   38.137    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   12.775    0.001   38.018    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.090    0.000   26.431    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.177    0.000   14.333    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.093    0.000    2.211    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.289    0.000    0.850    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.755    0.755 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
