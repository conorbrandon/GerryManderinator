         4787822472 function calls (4787700433 primitive calls) in 1729.269 seconds
        1   11.375   11.375 1728.520 1728.520 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.770    0.001 1717.116    0.170 GerrymanderingMCMC.py:235(recombination_of_districts)
   362115    2.580    0.000 1088.851    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1448460    1.716    0.000  766.230    0.001 GerrymanderingMCMC.py:190(__district_size)
274232384  154.201    0.000  628.470    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10101   10.224    0.001  306.761    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.053    0.000   40.363    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.057    0.000   38.937    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.081    0.001   38.816    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.109    0.000   26.663    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.151    0.000   14.439    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.099    0.000    2.244    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.289    0.000    0.866    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.716    0.716 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
