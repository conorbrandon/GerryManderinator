         4761590111 function calls (4761468072 primitive calls) in 1710.882 seconds
        1   11.286   11.286 1710.184 1710.184 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.674    0.001 1698.870    0.168 GerrymanderingMCMC.py:235(recombination_of_districts)
   361140    2.509    0.000 1081.015    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1444560    1.709    0.000  761.998    0.001 GerrymanderingMCMC.py:190(__district_size)
272219886  152.573    0.000  624.374    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100    9.802    0.001  299.090    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.040    0.000   40.675    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.059    0.000   39.278    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.239    0.001   39.156    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.105    0.000   26.783    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.169    0.000   14.197    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.091    0.000    2.199    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.284    0.000    0.855    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.665    0.665 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
