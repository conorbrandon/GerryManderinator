         4802230371 function calls (4802108332 primitive calls) in 1736.685 seconds
        1   11.943   11.943 1735.983 1735.983 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.842    0.001 1724.006    0.171 GerrymanderingMCMC.py:235(recombination_of_districts)
   361636    2.552    0.000 1100.922    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1446544    1.757    0.000  774.532    0.001 GerrymanderingMCMC.py:190(__district_size)
275656318  156.563    0.000  634.675    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10103   10.065    0.001  302.646    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.046    0.000   40.483    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.058    0.000   39.061    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.111    0.001   38.937    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.094    0.000   26.772    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.176    0.000   14.332    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.093    0.000    2.286    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.276    0.000    0.859    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.670    0.670 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
