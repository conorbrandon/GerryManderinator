         4465454386 function calls (4465332347 primitive calls) in 1634.260 seconds
        1   11.539   11.539 1633.529 1633.529 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.313    0.001 1621.960    0.161 GerrymanderingMCMC.py:235(recombination_of_districts)
   329334    2.382    0.000  993.375    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1317336    1.570    0.000  699.151    0.001 GerrymanderingMCMC.py:190(__district_size)
246671648  139.209    0.000  572.730    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10101    9.987    0.001  303.737    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.041    0.000   41.117    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.056    0.000   39.686    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.310    0.001   39.564    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.093    0.000   27.103    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.194    0.000   14.614    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.095    0.000    2.280    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.290    0.000    0.856    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.698    0.698 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.006    0.006    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
