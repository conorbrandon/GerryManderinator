         4761595890 function calls (4761473851 primitive calls) in 1711.570 seconds
        1   11.276   11.276 1710.842 1710.842 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.735    0.001 1699.537    0.168 GerrymanderingMCMC.py:235(recombination_of_districts)
   352386    2.425    0.000 1077.064    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1409544    1.624    0.000  757.359    0.001 GerrymanderingMCMC.py:190(__district_size)
271480920  149.783    0.000  622.369    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   10.029    0.001  302.987    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.049    0.000   40.209    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.055    0.000   38.780    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.026    0.001   38.663    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.093    0.000   26.680    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.186    0.000   14.399    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.088    0.000    2.210    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.278    0.000    0.854    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.696    0.696 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
