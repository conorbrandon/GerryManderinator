         4802765178 function calls (4802643139 primitive calls) in 1711.454 seconds
        1   10.838   10.838 1710.730 1710.730 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.744    0.001 1699.863    0.168 GerrymanderingMCMC.py:235(recombination_of_districts)
   370295    2.525    0.000 1083.163    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1481180    1.739    0.000  762.731    0.001 GerrymanderingMCMC.py:190(__district_size)
275693698  152.044    0.000  625.283    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10102    9.666    0.001  299.168    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.039    0.000   40.306    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.053    0.000   38.941    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   12.871    0.001   38.827    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.090    0.000   26.582    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.121    0.000   14.065    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.089    0.000    2.172    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.273    0.000    0.851    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.695    0.695 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
