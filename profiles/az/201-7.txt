         5077371489 function calls (5077249450 primitive calls) in 1839.306 seconds
        1   11.442   11.442 1838.561 1838.561 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    6.345    0.001 1827.053    0.181 GerrymanderingMCMC.py:235(recombination_of_districts)
   386936    2.678    0.000 1194.079    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1547744    1.925    0.000  842.276    0.001 GerrymanderingMCMC.py:190(__district_size)
298471400  172.459    0.000  689.692    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   10.005    0.001  309.450    0.031 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.042    0.000   40.353    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.057    0.000   38.918    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.125    0.001   38.799    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.094    0.000   26.829    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.256    0.000   14.578    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.091    0.000    2.292    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.285    0.000    0.873    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.712    0.712 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
