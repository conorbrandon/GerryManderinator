         4915861832 function calls (4915739793 primitive calls) in 1771.633 seconds
        1   11.477   11.477 1770.844 1770.844 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.985    0.001 1759.337    0.174 GerrymanderingMCMC.py:235(recombination_of_districts)
   370893    2.641    0.000 1137.152    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1483572    1.808    0.000  800.745    0.001 GerrymanderingMCMC.py:190(__district_size)
285022934  164.437    0.000  656.352    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10104   10.121    0.001  303.077    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.050    0.000   40.685    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.059    0.000   39.276    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.375    0.001   39.147    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.094    0.000   26.926    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.220    0.000   14.486    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.095    0.000    2.288    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.284    0.000    0.869    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.757    0.757 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.006    0.006    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
