         4742434998 function calls (4742312959 primitive calls) in 1732.991 seconds
        1   11.329   11.329 1732.265 1732.265 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.769    0.001 1720.869    0.170 GerrymanderingMCMC.py:235(recombination_of_districts)
   359447    2.547    0.000 1086.949    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1437788    1.732    0.000  765.470    0.001 GerrymanderingMCMC.py:190(__district_size)
269912102  154.843    0.000  627.596    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10101   10.215    0.001  309.545    0.031 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.041    0.000   40.970    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.057    0.000   39.551    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.286    0.001   39.430    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.093    0.000   27.238    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.220    0.000   14.531    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.089    0.000    2.216    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.282    0.000    0.867    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.693    0.693 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.006    0.006    0.030    0.030 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
