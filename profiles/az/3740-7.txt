         4904102176 function calls (4903980137 primitive calls) in 1754.612 seconds
        1   11.283   11.283 1753.863 1753.863 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.920    0.001 1742.548    0.173 GerrymanderingMCMC.py:235(recombination_of_districts)
   370781    2.541    0.000 1126.465    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1483124    1.740    0.000  792.201    0.001 GerrymanderingMCMC.py:190(__district_size)
284761954  159.078    0.000  648.091    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10102    9.852    0.001  297.821    0.029 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.041    0.000   40.202    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.057    0.000   38.773    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.001    0.001   38.649    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.117    0.000   26.653    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.163    0.000   14.179    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.102    0.000    2.313    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.279    0.000    0.863    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.725    0.725 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.006    0.006    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
