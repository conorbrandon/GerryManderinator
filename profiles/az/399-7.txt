         5431693520 function calls (5431571481 primitive calls) in 1952.542 seconds
        1   11.646   11.646 1951.794 1951.794 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    6.940    0.001 1940.117    0.192 GerrymanderingMCMC.py:235(recombination_of_districts)
   423840    3.014    0.000 1311.535    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1695360    2.096    0.000  922.851    0.001 GerrymanderingMCMC.py:190(__district_size)
329490090  187.077    0.000  757.194    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100    9.957    0.001  305.395    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.041    0.000   40.976    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.058    0.000   39.546    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.317    0.001   39.424    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.093    0.000   26.908    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.164    0.000   14.452    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.091    0.000    2.260    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.280    0.000    0.855    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.715    0.715 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
