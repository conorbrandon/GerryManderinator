         4713892086 function calls (4713770047 primitive calls) in 1704.416 seconds
        1   11.955   11.955 1703.717 1703.717 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.745    0.001 1691.732    0.167 GerrymanderingMCMC.py:235(recombination_of_districts)
   355484    2.532    0.000 1065.121    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1421936    1.730    0.000  745.493    0.001 GerrymanderingMCMC.py:190(__district_size)
267519720  146.184    0.000  609.727    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10101   10.038    0.001  302.366    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.041    0.000   40.397    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.059    0.000   38.973    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.214    0.001   38.848    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.095    0.000   26.832    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.192    0.000   14.454    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.095    0.000    2.239    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.312    0.000    0.872    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.666    0.666 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
