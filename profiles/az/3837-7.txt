         4652725121 function calls (4652603082 primitive calls) in 1682.649 seconds
        1   11.089   11.089 1681.926 1681.926 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    5.536    0.001 1670.807    0.165 GerrymanderingMCMC.py:235(recombination_of_districts)
   345675    2.428    0.000 1042.763    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1382700    1.651    0.000  730.591    0.001 GerrymanderingMCMC.py:190(__district_size)
262405530  146.362    0.000  596.820    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   10.011    0.001  305.055    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.041    0.000   40.246    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.055    0.000   38.835    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   12.950    0.001   38.717    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.092    0.000   26.633    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.160    0.000   14.482    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.091    0.000    2.252    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.276    0.000    0.842    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.690    0.690 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.006    0.006    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
