         5214919224 function calls (5214797185 primitive calls) in 1872.330 seconds
        1   11.315   11.315 1871.592 1871.592 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    6.557    0.001 1860.247    0.184 GerrymanderingMCMC.py:235(recombination_of_districts)
   400749    2.916    0.000 1238.162    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1602996    1.893    0.000  868.404    0.001 GerrymanderingMCMC.py:190(__district_size)
310710834  174.059    0.000  711.324    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10103    9.868    0.001  302.081    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.041    0.000   40.011    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.057    0.000   38.574    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   12.900    0.001   38.451    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.093    0.000   26.473    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.213    0.000   14.586    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.094    0.000    2.314    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.280    0.000    0.850    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.705    0.705 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
