         5425993705 function calls (5425871666 primitive calls) in 1952.434 seconds
        1   11.690   11.690 1951.622 1951.622 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    6.879    0.001 1939.903    0.192 GerrymanderingMCMC.py:235(recombination_of_districts)
   429187    2.909    0.000 1315.802    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1716748    2.029    0.000  929.091    0.001 GerrymanderingMCMC.py:190(__district_size)
329326700  189.159    0.000  760.610    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10101    9.851    0.001  300.399    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.041    0.000   40.521    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.057    0.000   39.112    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.242    0.001   38.990    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.095    0.000   26.882    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.268    0.000   14.347    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.097    0.000    2.312    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.283    0.000    0.862    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.780    0.780 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
