         5235194280 function calls (5235072241 primitive calls) in 1869.597 seconds
        1   11.152   11.152 1868.890 1868.890 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    6.434    0.001 1857.710    0.184 GerrymanderingMCMC.py:235(recombination_of_districts)
   404035    2.814    0.000 1234.839    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1616140    1.929    0.000  867.624    0.001 GerrymanderingMCMC.py:190(__district_size)
312686112  176.918    0.000  709.912    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10102   10.247    0.001  301.782    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.041    0.000   40.266    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.063    0.000   38.808    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   12.979    0.001   38.679    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.092    0.000   26.630    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.246    0.000   14.337    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.094    0.000    2.260    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.273    0.000    0.836    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.674    0.674 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.030    0.030 GerrymanderingMCMC.py:21(__init__)
        1    0.006    0.006    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
