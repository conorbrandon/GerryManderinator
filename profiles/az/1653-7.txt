         4971330831 function calls (4971208792 primitive calls) in 1783.450 seconds
        1   11.309   11.309 1782.717 1782.717 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    6.115    0.001 1771.377    0.175 GerrymanderingMCMC.py:235(recombination_of_districts)
   380990    2.616    0.000 1145.488    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1523960    1.808    0.000  806.863    0.001 GerrymanderingMCMC.py:190(__district_size)
289481000  161.361    0.000  660.906    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   10.140    0.001  305.070    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.041    0.000   40.756    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.057    0.000   39.313    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.161    0.001   39.175    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.108    0.000   26.893    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.171    0.000   14.373    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.090    0.000    2.285    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.283    0.000    0.864    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.701    0.701 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
