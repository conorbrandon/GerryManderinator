         5051833674 function calls (5051711635 primitive calls) in 1813.315 seconds
        1   11.605   11.605 1812.587 1812.587 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    6.311    0.001 1800.954    0.178 GerrymanderingMCMC.py:235(recombination_of_districts)
   385030    2.661    0.000 1174.244    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1540120    1.865    0.000  824.904    0.001 GerrymanderingMCMC.py:190(__district_size)
297018066  165.227    0.000  674.602    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100    9.970    0.001  303.433    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.040    0.000   40.347    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.058    0.000   38.908    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   12.985    0.001   38.785    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.094    0.000   26.712    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.198    0.000   14.464    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.093    0.000    2.289    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.276    0.000    0.840    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.695    0.695 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
