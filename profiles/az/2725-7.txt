         5163962518 function calls (5163840479 primitive calls) in 1890.392 seconds
        1   11.347   11.347 1889.686 1889.686 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100    6.437    0.001 1878.270    0.186 GerrymanderingMCMC.py:235(recombination_of_districts)
   397646    2.836    0.000 1251.080    0.003 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  1590584    1.889    0.000  889.046    0.001 GerrymanderingMCMC.py:190(__district_size)
306665780  173.575    0.000  732.409    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10103    9.936    0.001  302.858    0.030 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.041    0.000   40.849    0.002 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.062    0.000   39.411    0.002 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   13.063    0.001   39.282    0.002 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.094    0.000   26.917    0.003 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    2.166    0.000   14.364    0.001 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.094    0.000    2.284    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.292    0.000    0.881    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.673    0.673 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.029    0.029 GerrymanderingMCMC.py:21(__init__)
        1    0.005    0.005    0.029    0.029 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.006    0.006 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
