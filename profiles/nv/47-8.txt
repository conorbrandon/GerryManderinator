         26454618130 function calls (26454496091 primitive calls) in 9016.983 seconds
        1   15.162   15.162 9016.232 9016.232 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100   26.275    0.003 9001.032    0.891 GerrymanderingMCMC.py:235(recombination_of_districts)
   824573    7.318    0.000 7636.553    0.009 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  3298292    4.350    0.000 5582.165    0.002 GerrymanderingMCMC.py:190(__district_size)
1799649464 1048.196    0.000 4083.935    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   27.936    0.003  884.675    0.088 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.044    0.000   58.594    0.003 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.063    0.000   55.608    0.003 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   19.083    0.001   55.473    0.003 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.147    0.000   47.036    0.005 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    6.694    0.001   42.448    0.004 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.111    0.000    4.593    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.339    0.000    0.999    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.707    0.707 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.040    0.040 GerrymanderingMCMC.py:21(__init__)
        1    0.007    0.007    0.039    0.039 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.009    0.009 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
