         26937929521 function calls (26937807482 primitive calls) in 14685.359 seconds
        1   17.230   17.230 14684.303 14684.303 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100   42.297    0.004 14667.014    1.452 GerrymanderingMCMC.py:235(recombination_of_districts)
   854044   10.947    0.000 12510.758    0.015 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  3416176    7.047    0.000 9139.429    0.003 GerrymanderingMCMC.py:190(__district_size)
1842054666 1713.582    0.000 6734.960    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   43.773    0.004 1410.408    0.140 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.058    0.000   91.588    0.005 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.079    0.000   87.156    0.004 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   29.022    0.001   86.985    0.004 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.220    0.000   74.622    0.007 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100   10.085    0.001   67.833    0.007 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.137    0.000    6.905    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.518    0.000    1.571    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.989    0.989 GerrymanderingMCMC.py:1(<module>)
        1    0.001    0.001    0.062    0.062 GerrymanderingMCMC.py:21(__init__)
        1    0.012    0.012    0.062    0.062 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.014    0.014 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
