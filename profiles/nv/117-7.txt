         26291732862 function calls (26291610823 primitive calls) in 14547.986 seconds
        1   17.266   17.266 14546.872 14546.872 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100   41.265    0.004 14529.549    1.439 GerrymanderingMCMC.py:235(recombination_of_districts)
   813594   10.442    0.000 12350.023    0.015 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  3254376    6.978    0.000 9037.359    0.003 GerrymanderingMCMC.py:190(__district_size)
1781846990 1642.161    0.000 6590.128    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   44.195    0.004 1425.931    0.141 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.057    0.000   92.746    0.005 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.081    0.000   88.248    0.004 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   28.961    0.001   88.078    0.004 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.239    0.000   75.377    0.007 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100   10.270    0.001   68.761    0.007 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.142    0.000    7.035    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.521    0.000    1.583    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    1.046    1.046 GerrymanderingMCMC.py:1(<module>)
        1    0.001    0.001    0.063    0.063 GerrymanderingMCMC.py:21(__init__)
        1    0.012    0.012    0.063    0.063 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.014    0.014 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
