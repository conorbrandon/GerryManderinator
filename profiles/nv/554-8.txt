         24924976530 function calls (24924854491 primitive calls) in 8447.604 seconds
        1   14.905   14.905 8446.877 8446.877 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100   24.364    0.002 8431.936    0.835 GerrymanderingMCMC.py:235(recombination_of_districts)
   756480    6.487    0.000 7079.075    0.009 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  3025920    3.923    0.000 5173.342    0.002 GerrymanderingMCMC.py:190(__district_size)
1669862362  941.177    0.000 3762.750    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   27.708    0.003  879.456    0.087 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.042    0.000   58.485    0.003 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.059    0.000   55.575    0.003 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   19.161    0.001   55.450    0.003 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.143    0.000   47.334    0.005 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    6.587    0.001   42.450    0.004 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.106    0.000    4.444    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.330    0.000    0.980    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.686    0.686 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.039    0.039 GerrymanderingMCMC.py:21(__init__)
        1    0.007    0.007    0.038    0.038 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.009    0.009 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
