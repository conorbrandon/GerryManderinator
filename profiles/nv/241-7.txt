         25549794718 function calls (25549672679 primitive calls) in 13801.467 seconds
        1   16.699   16.699 13800.395 13800.395 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100   39.027    0.004 13746.397    1.361 GerrymanderingMCMC.py:235(recombination_of_districts)
   794436    9.921    0.000 11623.792    0.015 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  3177744    6.762    0.000 8512.073    0.003 GerrymanderingMCMC.py:190(__district_size)
1726134668 1565.114    0.000 6197.870    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   42.736    0.004 1384.825    0.137 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.056    0.000   90.289    0.004 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.077    0.000   85.898    0.004 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   28.194    0.001   85.735    0.004 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.229    0.000   73.247    0.007 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    9.811    0.001   66.263    0.007 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.135    0.000    6.808    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.504    0.000    1.538    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    1.004    1.004 GerrymanderingMCMC.py:1(<module>)
        1    0.001    0.001    0.063    0.063 GerrymanderingMCMC.py:21(__init__)
        1    0.012    0.012    0.062    0.062 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.014    0.014 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
