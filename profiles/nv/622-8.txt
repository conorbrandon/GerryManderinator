         25467025396 function calls (25466903357 primitive calls) in 8895.597 seconds
        1   15.296   15.296 8894.825 8894.825 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100   25.645    0.003 8879.489    0.879 GerrymanderingMCMC.py:235(recombination_of_districts)
   805714    7.121    0.000 7487.850    0.009 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  3222856    4.307    0.000 5454.810    0.002 GerrymanderingMCMC.py:190(__district_size)
1731187490 1033.385    0.000 4014.836    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   28.829    0.003  904.387    0.090 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.045    0.000   60.237    0.003 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.060    0.000   57.237    0.003 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   19.429    0.001   57.109    0.003 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.154    0.000   48.390    0.005 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    6.839    0.001   43.644    0.004 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.108    0.000    4.606    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.331    0.000    1.002    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.730    0.730 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.039    0.039 GerrymanderingMCMC.py:21(__init__)
        1    0.007    0.007    0.039    0.039 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.009    0.009 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
