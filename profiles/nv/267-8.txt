         24295533136 function calls (24295411097 primitive calls) in 8388.684 seconds
        1   15.335   15.335 8387.932 8387.932 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100   24.249    0.002 8372.558    0.829 GerrymanderingMCMC.py:235(recombination_of_districts)
   746532    6.910    0.000 7011.449    0.009 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  2986128    3.991    0.000 5143.735    0.002 GerrymanderingMCMC.py:190(__district_size)
1627762158  950.949    0.000 3750.838    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   27.983    0.003  883.948    0.088 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.043    0.000   59.099    0.003 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.062    0.000   56.112    0.003 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   19.272    0.001   55.977    0.003 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.161    0.000   47.550    0.005 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    6.562    0.001   42.446    0.004 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.111    0.000    4.533    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.330    0.000    0.989    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.709    0.709 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.040    0.040 GerrymanderingMCMC.py:21(__init__)
        1    0.008    0.008    0.040    0.040 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.009    0.009 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
