         25042956147 function calls (25042834108 primitive calls) in 8499.126 seconds
        1   14.865   14.865 8498.364 8498.364 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100   24.387    0.002 8483.461    0.840 GerrymanderingMCMC.py:235(recombination_of_districts)
   784901    6.770    0.000 7135.399    0.009 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  3139604    4.137    0.000 5226.471    0.002 GerrymanderingMCMC.py:190(__district_size)
1691096150  979.991    0.000 3832.715    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   27.840    0.003  874.427    0.087 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.042    0.000   57.951    0.003 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.059    0.000   55.012    0.003 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   18.940    0.001   54.885    0.003 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.144    0.000   46.534    0.005 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    6.564    0.001   41.995    0.004 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.106    0.000    4.430    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.327    0.000    0.981    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.720    0.720 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.039    0.039 GerrymanderingMCMC.py:21(__init__)
        1    0.007    0.007    0.038    0.038 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.009    0.009 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
