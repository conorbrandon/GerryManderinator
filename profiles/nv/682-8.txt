         26172550985 function calls (26172428946 primitive calls) in 9084.014 seconds
        1   15.191   15.191 9083.292 9083.292 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100   26.430    0.003 9068.064    0.898 GerrymanderingMCMC.py:235(recombination_of_districts)
   823975    7.550    0.000 7685.810    0.009 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  3295900    4.576    0.000 5621.601    0.002 GerrymanderingMCMC.py:190(__district_size)
1781923914 1056.036    0.000 4124.724    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   29.163    0.003  897.176    0.089 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.043    0.000   58.959    0.003 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.061    0.000   55.981    0.003 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   18.840    0.001   55.851    0.003 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.147    0.000   47.515    0.005 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    6.781    0.001   43.234    0.004 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.111    0.000    4.549    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.333    0.000    1.008    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.679    0.679 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.040    0.040 GerrymanderingMCMC.py:21(__init__)
        1    0.007    0.007    0.039    0.039 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.009    0.009 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
