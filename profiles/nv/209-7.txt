         24868800959 function calls (24868678920 primitive calls) in 13718.825 seconds
        1   17.134   17.134 13717.757 13717.757 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100   38.196    0.004 13700.563    1.356 GerrymanderingMCMC.py:235(recombination_of_districts)
   770744    9.899    0.000 11541.892    0.015 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  3082976    6.390    0.000 8484.980    0.003 GerrymanderingMCMC.py:190(__district_size)
1670863334 1571.163    0.000 6199.815    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   43.566    0.004 1411.173    0.140 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.061    0.000   92.050    0.005 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.081    0.000   87.585    0.004 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   28.776    0.001   87.412    0.004 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.231    0.000   74.711    0.007 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    9.844    0.001   67.261    0.007 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.141    0.000    6.937    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.511    0.000    1.563    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    1.004    1.004 GerrymanderingMCMC.py:1(<module>)
        1    0.001    0.001    0.060    0.060 GerrymanderingMCMC.py:21(__init__)
        1    0.011    0.011    0.059    0.059 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.013    0.013 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
