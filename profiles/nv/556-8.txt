         26512160663 function calls (26512038624 primitive calls) in 9187.493 seconds
        1   15.246   15.246 9186.718 9186.718 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100   27.560    0.003 9171.435    0.908 GerrymanderingMCMC.py:235(recombination_of_districts)
   821102    7.410    0.000 7788.664    0.009 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  3284408    4.436    0.000 5680.413    0.002 GerrymanderingMCMC.py:190(__district_size)
1803022804 1076.110    0.000 4159.258    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   28.264    0.003  895.427    0.089 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.051    0.000   58.486    0.003 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.062    0.000   55.481    0.003 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   18.993    0.001   55.346    0.003 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.150    0.000   47.416    0.005 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    6.682    0.001   43.217    0.004 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.111    0.000    4.613    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.336    0.000    0.990    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.731    0.731 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.040    0.040 GerrymanderingMCMC.py:21(__init__)
        1    0.008    0.008    0.040    0.040 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.009    0.009 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
