         26246062374 function calls (26245940335 primitive calls) in 14315.195 seconds
        1   17.251   17.251 14314.136 14314.136 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100   41.748    0.004 14296.826    1.416 GerrymanderingMCMC.py:235(recombination_of_districts)
   812079   10.503    0.000 12139.331    0.015 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  3248316    6.767    0.000 8916.194    0.003 GerrymanderingMCMC.py:190(__district_size)
1779716188 1667.196    0.000 6513.873    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   43.386    0.004 1410.019    0.140 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.056    0.000   91.352    0.005 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.079    0.000   86.903    0.004 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   28.545    0.001   86.737    0.004 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.221    0.000   74.290    0.007 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100   10.145    0.001   67.478    0.007 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.138    0.000    6.905    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.505    0.000    1.554    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.992    0.992 GerrymanderingMCMC.py:1(<module>)
        1    0.001    0.001    0.062    0.062 GerrymanderingMCMC.py:21(__init__)
        1    0.012    0.012    0.062    0.062 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.014    0.014 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
