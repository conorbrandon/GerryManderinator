         24838866382 function calls (24838744343 primitive calls) in 13653.075 seconds
        1   17.247   17.247 13652.016 13652.016 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100   38.718    0.004 13634.714    1.350 GerrymanderingMCMC.py:235(recombination_of_districts)
   772178    9.650    0.000 11464.472    0.015 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  3088712    6.478    0.000 8394.948    0.003 GerrymanderingMCMC.py:190(__district_size)
1674098968 1586.992    0.000 6173.714    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   43.933    0.004 1419.769    0.141 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.055    0.000   93.081    0.005 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.081    0.000   88.613    0.004 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   29.421    0.001   88.439    0.004 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.218    0.000   75.240    0.007 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100   10.113    0.001   68.138    0.007 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.143    0.000    6.970    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.525    0.000    1.601    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.995    0.995 GerrymanderingMCMC.py:1(<module>)
        1    0.001    0.001    0.060    0.060 GerrymanderingMCMC.py:21(__init__)
        1    0.011    0.011    0.059    0.059 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.013    0.013 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
