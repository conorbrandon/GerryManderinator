         26448431300 function calls (26448309261 primitive calls) in 9183.422 seconds
        1   15.473   15.473 9182.636 9182.636 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100   26.728    0.003 9167.125    0.908 GerrymanderingMCMC.py:235(recombination_of_districts)
   831387    7.299    0.000 7782.330    0.009 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  3325548    4.415    0.000 5681.597    0.002 GerrymanderingMCMC.py:190(__district_size)
1803665230 1062.371    0.000 4178.866    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10101   29.415    0.003  899.071    0.089 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.045    0.000   59.685    0.003 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.061    0.000   56.693    0.003 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   19.649    0.001   56.562    0.003 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.150    0.000   48.049    0.005 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    6.696    0.001   43.234    0.004 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.116    0.000    4.636    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.347    0.000    1.021    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.742    0.742 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.040    0.040 GerrymanderingMCMC.py:21(__init__)
        1    0.008    0.008    0.039    0.039 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.009    0.009 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
