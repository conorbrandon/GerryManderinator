         25931315543 function calls (25931193504 primitive calls) in 8866.940 seconds
        1   15.014   15.014 8866.187 8866.187 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100   25.616    0.003 8851.102    0.876 GerrymanderingMCMC.py:235(recombination_of_districts)
   796076    7.017    0.000 7486.424    0.009 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  3184304    4.269    0.000 5480.056    0.002 GerrymanderingMCMC.py:190(__district_size)
1752448218 1003.868    0.000 3997.426    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   28.241    0.003  888.339    0.088 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.042    0.000   58.850    0.003 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.060    0.000   55.896    0.003 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   19.153    0.001   55.770    0.003 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.145    0.000   47.356    0.005 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10099    6.447    0.001   42.515    0.004 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.108    0.000    4.483    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.333    0.000    0.987    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.710    0.710 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.039    0.039 GerrymanderingMCMC.py:21(__init__)
        1    0.007    0.007    0.039    0.039 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.009    0.009 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
