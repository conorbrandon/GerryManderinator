         26969401172 function calls (26969279133 primitive calls) in 14393.569 seconds
        1   17.092   17.092 14392.508 14392.508 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100   41.294    0.004 14375.360    1.423 GerrymanderingMCMC.py:235(recombination_of_districts)
   825071   10.473    0.000 12274.898    0.015 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  3300284    6.805    0.000 8995.311    0.003 GerrymanderingMCMC.py:190(__district_size)
1831152506 1667.009    0.000 6536.442    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   43.111    0.004 1372.796    0.136 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.056    0.000   89.223    0.004 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.079    0.000   84.866    0.004 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   28.203    0.001   84.699    0.004 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.216    0.000   72.455    0.007 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    9.835    0.001   66.056    0.007 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.140    0.000    6.828    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.494    0.000    1.503    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.994    0.994 GerrymanderingMCMC.py:1(<module>)
        1    0.001    0.001    0.063    0.063 GerrymanderingMCMC.py:21(__init__)
        1    0.012    0.012    0.062    0.062 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.014    0.014 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
