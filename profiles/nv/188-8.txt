         26940195154 function calls (26940073115 primitive calls) in 9297.124 seconds
        1   15.191   15.191 9296.193 9296.193 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100   27.104    0.003 9280.966    0.919 GerrymanderingMCMC.py:235(recombination_of_districts)
   853395    7.414    0.000 7909.700    0.009 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  3413580    4.495    0.000 5783.075    0.002 GerrymanderingMCMC.py:190(__district_size)
1843894992 1092.827    0.000 4258.361    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   28.181    0.003  889.951    0.088 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.043    0.000   58.074    0.003 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.061    0.000   55.095    0.003 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   19.077    0.001   54.964    0.003 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.151    0.000   47.256    0.005 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    6.644    0.001   42.890    0.004 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.107    0.000    4.529    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.335    0.000    0.986    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.889    0.889 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.039    0.039 GerrymanderingMCMC.py:21(__init__)
        1    0.007    0.007    0.039    0.039 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.009    0.009 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
