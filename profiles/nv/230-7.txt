         26792193045 function calls (26792071006 primitive calls) in 14564.532 seconds
        1   17.183   17.183 14563.443 14563.443 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100   42.016    0.004 14546.204    1.440 GerrymanderingMCMC.py:235(recombination_of_districts)
   836938   10.624    0.000 12398.846    0.015 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  3347752    7.022    0.000 9073.794    0.003 GerrymanderingMCMC.py:190(__district_size)
1829414364 1682.666    0.000 6649.264    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   42.936    0.004 1403.763    0.139 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.055    0.000   90.272    0.004 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.078    0.000   85.810    0.004 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   28.311    0.001   85.644    0.004 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.221    0.000   73.716    0.007 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    9.927    0.001   67.169    0.007 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.143    0.000    6.987    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.517    0.000    1.570    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    1.030    1.030 GerrymanderingMCMC.py:1(<module>)
        1    0.001    0.001    0.064    0.064 GerrymanderingMCMC.py:21(__init__)
        1    0.012    0.012    0.063    0.063 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.014    0.014 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
