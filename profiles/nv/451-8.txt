         25615224616 function calls (25615102577 primitive calls) in 8916.608 seconds
        1   15.384   15.384 8915.818 8915.818 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100   25.760    0.003 8900.395    0.881 GerrymanderingMCMC.py:235(recombination_of_districts)
   803579    7.167    0.000 7518.151    0.009 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  3214316    4.245    0.000 5470.242    0.002 GerrymanderingMCMC.py:190(__district_size)
1737594550 1018.076    0.000 4015.733    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   28.482    0.003  895.350    0.089 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.043    0.000   59.870    0.003 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.061    0.000   56.845    0.003 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   19.716    0.001   56.715    0.003 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.147    0.000   48.085    0.005 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    6.711    0.001   43.529    0.004 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.109    0.000    4.587    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.344    0.000    1.017    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.746    0.746 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.040    0.040 GerrymanderingMCMC.py:21(__init__)
        1    0.008    0.008    0.040    0.040 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.009    0.009 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
