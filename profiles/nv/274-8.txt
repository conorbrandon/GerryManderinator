         25912366280 function calls (25912244241 primitive calls) in 8842.146 seconds
        1   14.951   14.951 8841.385 8841.385 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100   25.797    0.003 8826.398    0.874 GerrymanderingMCMC.py:235(recombination_of_districts)
   790623    6.880    0.000 7465.312    0.009 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  3162492    4.067    0.000 5463.457    0.002 GerrymanderingMCMC.py:190(__district_size)
1751123198 1025.392    0.000 3985.691    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   28.145    0.003  883.600    0.087 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.042    0.000   58.563    0.003 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.059    0.000   55.623    0.003 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   19.035    0.001   55.494    0.003 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.143    0.000   47.107    0.005 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    6.646    0.001   42.557    0.004 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.105    0.000    4.427    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.328    0.000    0.983    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.720    0.720 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.039    0.039 GerrymanderingMCMC.py:21(__init__)
        1    0.007    0.007    0.039    0.039 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.009    0.009 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
