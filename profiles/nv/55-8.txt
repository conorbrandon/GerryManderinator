         24463642681 function calls (24463520642 primitive calls) in 8516.305 seconds
        1   15.286   15.286 8515.553 8515.553 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100   24.966    0.002 8500.228    0.842 GerrymanderingMCMC.py:235(recombination_of_districts)
   743652    6.989    0.000 7110.128    0.010 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  2974608    4.046    0.000 5200.297    0.002 GerrymanderingMCMC.py:190(__district_size)
1637332036  977.893    0.000 3790.978    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   28.818    0.003  899.875    0.089 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.046    0.000   59.910    0.003 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.066    0.000   56.887    0.003 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   19.653    0.001   56.747    0.003 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.154    0.000   48.220    0.005 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    6.731    0.001   43.266    0.004 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.118    0.000    4.669    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.334    0.000    0.993    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.709    0.709 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.040    0.040 GerrymanderingMCMC.py:21(__init__)
        1    0.008    0.008    0.039    0.039 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.009    0.009 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
