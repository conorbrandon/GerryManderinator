         26268931532 function calls (26268809493 primitive calls) in 14118.924 seconds
        1   17.211   17.211 14117.868 14117.868 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100   40.287    0.004 14100.579    1.396 GerrymanderingMCMC.py:235(recombination_of_districts)
   823896   10.350    0.000 11991.159    0.015 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  3295584    6.718    0.000 8808.860    0.003 GerrymanderingMCMC.py:190(__district_size)
1787410656 1648.188    0.000 6466.987    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   42.558    0.004 1380.658    0.137 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.055    0.000   89.350    0.004 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.078    0.000   84.970    0.004 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   27.786    0.001   84.803    0.004 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.213    0.000   72.705    0.007 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10099   10.012    0.001   66.463    0.007 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.138    0.000    6.858    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.501    0.000    1.540    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.988    0.988 GerrymanderingMCMC.py:1(<module>)
        1    0.001    0.001    0.063    0.063 GerrymanderingMCMC.py:21(__init__)
        1    0.012    0.012    0.063    0.063 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.014    0.014 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
