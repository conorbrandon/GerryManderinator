         26861223898 function calls (26861101859 primitive calls) in 14682.886 seconds
        1   17.488   17.488 14681.664 14681.664 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100   42.940    0.004 14664.119    1.452 GerrymanderingMCMC.py:235(recombination_of_districts)
   832891   11.023    0.000 12494.423    0.015 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  3331564    6.911    0.000 9156.702    0.003 GerrymanderingMCMC.py:190(__district_size)
1828781806 1676.373    0.000 6684.510    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   43.603    0.004 1418.478    0.140 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.059    0.000   91.836    0.005 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.079    0.000   87.360    0.004 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   29.005    0.001   87.177    0.004 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.226    0.000   74.915    0.007 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100   10.033    0.001   67.710    0.007 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.140    0.000    6.987    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.518    0.000    1.573    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    1.143    1.143 GerrymanderingMCMC.py:1(<module>)
        1    0.001    0.001    0.063    0.063 GerrymanderingMCMC.py:21(__init__)
        1    0.012    0.012    0.063    0.063 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.014    0.014 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
