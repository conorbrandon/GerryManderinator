         27038163122 function calls (27038041083 primitive calls) in 14814.242 seconds
        1   17.446   17.446 14812.523 14812.523 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100   42.842    0.004 14795.019    1.465 GerrymanderingMCMC.py:235(recombination_of_districts)
   846355   10.862    0.000 12621.366    0.015 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  3385420    7.335    0.000 9188.963    0.003 GerrymanderingMCMC.py:190(__district_size)
1845573336 1712.037    0.000 6718.508    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   44.130    0.004 1418.610    0.140 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.057    0.000   91.692    0.005 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.080    0.000   87.201    0.004 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   28.751    0.001   87.029    0.004 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.227    0.000   75.128    0.007 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10099   10.067    0.001   68.562    0.007 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.145    0.000    7.010    0.000 GerrymanderingMCMC.py:157(__random_district_label)
        1    0.000    0.000    1.630    1.630 GerrymanderingMCMC.py:1(<module>)
    10100    0.517    0.000    1.570    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.001    0.001    0.085    0.085 GerrymanderingMCMC.py:21(__init__)
        1    0.012    0.012    0.085    0.085 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.038    0.038 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
