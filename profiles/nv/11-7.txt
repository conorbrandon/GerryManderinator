         25307591937 function calls (25307469898 primitive calls) in 13513.160 seconds
        1   17.067   17.067 13511.413 13511.413 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100   38.518    0.004 13494.224    1.336 GerrymanderingMCMC.py:235(recombination_of_districts)
   784877    9.882    0.000 11393.536    0.015 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  3139508    6.320    0.000 8379.915    0.003 GerrymanderingMCMC.py:190(__district_size)
1709261840 1551.798    0.000 6135.083    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   42.354    0.004 1368.646    0.136 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.055    0.000   89.292    0.004 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.077    0.000   84.964    0.004 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   27.718    0.001   84.798    0.004 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.212    0.000   72.713    0.007 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    9.807    0.001   65.519    0.006 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.138    0.000    6.670    0.000 GerrymanderingMCMC.py:157(__random_district_label)
        1    0.000    0.000    1.680    1.680 GerrymanderingMCMC.py:1(<module>)
    10100    0.492    0.000    1.526    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.001    0.001    0.064    0.064 GerrymanderingMCMC.py:21(__init__)
        1    0.012    0.012    0.063    0.063 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.014    0.014 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
