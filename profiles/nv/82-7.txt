         25931616858 function calls (25931494819 primitive calls) in 14396.699 seconds
        1   16.920   16.920 14395.609 14395.609 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100   41.164    0.004 14378.633    1.424 GerrymanderingMCMC.py:235(recombination_of_districts)
   804907   10.429    0.000 12201.777    0.015 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  3219628    6.739    0.000 8977.980    0.003 GerrymanderingMCMC.py:190(__district_size)
1756731774 1636.401    0.000 6560.501    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   43.642    0.004 1423.520    0.141 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.056    0.000   91.975    0.005 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.077    0.000   87.470    0.004 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   28.791    0.001   87.307    0.004 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.222    0.000   74.886    0.007 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100   10.056    0.001   68.032    0.007 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.139    0.000    7.028    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.521    0.000    1.587    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    1.022    1.022 GerrymanderingMCMC.py:1(<module>)
        1    0.001    0.001    0.064    0.064 GerrymanderingMCMC.py:21(__init__)
        1    0.012    0.012    0.063    0.063 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.014    0.014 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
