         26275636499 function calls (26275514460 primitive calls) in 14135.769 seconds
        1   17.354   17.354 14134.714 14134.714 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100   39.766    0.004 14117.304    1.398 GerrymanderingMCMC.py:235(recombination_of_districts)
   807197   10.416    0.000 11990.161    0.015 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  3228788    6.680    0.000 8802.976    0.003 GerrymanderingMCMC.py:190(__district_size)
1777448054 1612.881    0.000 6386.091    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   42.922    0.004 1389.695    0.138 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.056    0.000   89.739    0.004 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.080    0.000   85.340    0.004 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   27.649    0.001   85.169    0.004 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.214    0.000   72.896    0.007 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    9.870    0.001   66.884    0.007 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.142    0.000    6.937    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.494    0.000    1.535    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.993    0.993 GerrymanderingMCMC.py:1(<module>)
        1    0.001    0.001    0.063    0.063 GerrymanderingMCMC.py:21(__init__)
        1    0.012    0.012    0.062    0.062 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.014    0.014 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
