         25848147413 function calls (25848025374 primitive calls) in 8847.393 seconds
        1   14.972   14.972 8846.442 8846.442 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100   25.694    0.003 8831.403    0.874 GerrymanderingMCMC.py:235(recombination_of_districts)
   807179    7.283    0.000 7474.931    0.009 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  3228716    4.217    0.000 5467.625    0.002 GerrymanderingMCMC.py:190(__district_size)
1755285962 1027.985    0.000 4014.011    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   28.305    0.003  882.281    0.087 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.043    0.000   58.376    0.003 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.063    0.000   55.432    0.003 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   19.185    0.001   55.297    0.003 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.146    0.000   46.904    0.005 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    6.671    0.001   42.587    0.004 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.110    0.000    4.554    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.324    0.000    0.964    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.909    0.909 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.039    0.039 GerrymanderingMCMC.py:21(__init__)
        1    0.007    0.007    0.038    0.038 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.009    0.009 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
