         24773035541 function calls (24772913502 primitive calls) in 13737.773 seconds
        1   17.284   17.284 13736.676 13736.676 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100   38.135    0.004 13719.335    1.358 GerrymanderingMCMC.py:235(recombination_of_districts)
   778599    9.802    0.000 11557.617    0.015 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  3114396    6.694    0.000 8468.218    0.003 GerrymanderingMCMC.py:190(__district_size)
1671155446 1568.684    0.000 6207.598    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   43.954    0.004 1412.464    0.140 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.056    0.000   92.600    0.005 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.081    0.000   88.067    0.004 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   29.892    0.001   87.895    0.004 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.218    0.000   75.438    0.007 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100   10.232    0.001   68.495    0.007 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.157    0.000    6.997    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.523    0.000    1.568    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    1.029    1.029 GerrymanderingMCMC.py:1(<module>)
        1    0.001    0.001    0.063    0.063 GerrymanderingMCMC.py:21(__init__)
        1    0.012    0.012    0.063    0.063 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.014    0.014 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
