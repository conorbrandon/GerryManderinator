         26160999310 function calls (26160877271 primitive calls) in 8849.085 seconds
        1   14.867   14.867 8848.372 8848.372 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100   25.733    0.003 8833.460    0.875 GerrymanderingMCMC.py:235(recombination_of_districts)
   818526    7.031    0.000 7481.354    0.009 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  3274104    4.254    0.000 5464.941    0.002 GerrymanderingMCMC.py:190(__district_size)
1776421164 1014.665    0.000 3994.711    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   28.066    0.003  877.653    0.087 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.042    0.000   57.736    0.003 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.059    0.000   54.812    0.003 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   18.757    0.001   54.686    0.003 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.142    0.000   46.502    0.005 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    6.538    0.001   42.246    0.004 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.104    0.000    4.463    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.328    0.000    0.982    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.671    0.671 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.039    0.039 GerrymanderingMCMC.py:21(__init__)
        1    0.007    0.007    0.038    0.038 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.009    0.009 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
