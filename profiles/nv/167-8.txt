         26005507580 function calls (26005385541 primitive calls) in 8796.420 seconds
        1   14.975   14.975 8795.625 8795.625 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100   25.293    0.003 8780.610    0.869 GerrymanderingMCMC.py:235(recombination_of_districts)
   823927    7.045    0.000 7426.022    0.009 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  3295708    4.236    0.000 5416.242    0.002 GerrymanderingMCMC.py:190(__district_size)
1770207034 1004.169    0.000 3975.810    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   28.468    0.003  877.367    0.087 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.046    0.000   57.902    0.003 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.061    0.000   54.929    0.003 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   18.656    0.001   54.802    0.003 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.142    0.000   46.777    0.005 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    6.329    0.001   41.971    0.004 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.106    0.000    4.457    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.328    0.000    0.977    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.750    0.750 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.041    0.041 GerrymanderingMCMC.py:21(__init__)
        1    0.010    0.010    0.041    0.041 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.009    0.009 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
