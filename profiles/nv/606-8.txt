         26469618227 function calls (26469496188 primitive calls) in 9200.664 seconds
        1   15.523   15.523 9199.891 9199.891 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100   26.841    0.003 9184.329    0.909 GerrymanderingMCMC.py:235(recombination_of_districts)
   826223    7.437    0.000 7794.841    0.009 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  3304892    4.387    0.000 5698.005    0.002 GerrymanderingMCMC.py:190(__district_size)
1800032388 1082.885    0.000 4171.293    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   29.322    0.003  901.675    0.089 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.044    0.000   59.437    0.003 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.062    0.000   56.429    0.003 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   19.253    0.001   56.295    0.003 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.148    0.000   47.757    0.005 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    6.797    0.001   43.449    0.004 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.113    0.000    4.618    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.332    0.000    0.994    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.730    0.730 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.040    0.040 GerrymanderingMCMC.py:21(__init__)
        1    0.008    0.008    0.039    0.039 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.009    0.009 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
