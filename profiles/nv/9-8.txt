         25646047788 function calls (25645925749 primitive calls) in 8713.546 seconds
        1   14.941   14.941 8712.118 8712.118 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100   24.991    0.002 8697.137    0.861 GerrymanderingMCMC.py:235(recombination_of_districts)
   806910    6.976    0.000 7344.065    0.009 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  3227640    4.163    0.000 5377.324    0.002 GerrymanderingMCMC.py:190(__district_size)
1737815486 1007.849    0.000 3939.566    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   27.905    0.003  878.495    0.087 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.043    0.000   57.582    0.003 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.063    0.000   54.651    0.003 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   18.501    0.001   54.522    0.003 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.143    0.000   46.412    0.005 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    6.490    0.001   42.139    0.004 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.103    0.000    4.491    0.000 GerrymanderingMCMC.py:157(__random_district_label)
        1    0.000    0.000    1.386    1.386 GerrymanderingMCMC.py:1(<module>)
    10100    0.326    0.000    0.977    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.038    0.038 GerrymanderingMCMC.py:21(__init__)
        1    0.007    0.007    0.037    0.037 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.009    0.009 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
