         27617581363 function calls (27617459324 primitive calls) in 9581.766 seconds
        1   15.275   15.275 9581.016 9581.016 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100   27.504    0.003 9565.702    0.947 GerrymanderingMCMC.py:235(recombination_of_districts)
   857834    7.863    0.000 8182.187    0.010 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  3431336    4.567    0.000 5966.296    0.002 GerrymanderingMCMC.py:190(__district_size)
1884585884 1118.345    0.000 4356.750    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   28.479    0.003  896.804    0.089 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.043    0.000   59.875    0.003 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.065    0.000   56.892    0.003 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   19.796    0.001   56.759    0.003 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.158    0.000   48.162    0.005 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    6.706    0.001   43.579    0.004 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.121    0.000    4.578    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.341    0.000    1.030    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.707    0.707 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.040    0.040 GerrymanderingMCMC.py:21(__init__)
        1    0.008    0.008    0.040    0.040 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.009    0.009 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
