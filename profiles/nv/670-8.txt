         27030054092 function calls (27029932053 primitive calls) in 9222.097 seconds
        1   15.273   15.273 9221.178 9221.178 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100   26.860    0.003 9205.867    0.911 GerrymanderingMCMC.py:235(recombination_of_districts)
   842282    7.609    0.000 7845.299    0.009 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  3369128    4.506    0.000 5731.068    0.002 GerrymanderingMCMC.py:190(__district_size)
1841562292 1077.644    0.000 4178.328    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   28.520    0.003  882.295    0.087 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.043    0.000   58.591    0.003 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.063    0.000   55.604    0.003 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   19.064    0.001   55.468    0.003 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.148    0.000   47.033    0.005 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    6.699    0.001   42.733    0.004 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.127    0.000    4.616    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.341    0.000    1.011    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.789    0.789 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.127    0.127 GerrymanderingMCMC.py:21(__init__)
        1    0.058    0.058    0.126    0.126 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.015    0.015 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
