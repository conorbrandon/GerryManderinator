         24890261004 function calls (24890138965 primitive calls) in 8726.049 seconds
        1   15.455   15.455 8725.341 8725.341 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100   25.159    0.002 8709.846    0.862 GerrymanderingMCMC.py:235(recombination_of_districts)
   771065    7.011    0.000 7315.120    0.009 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  3084260    4.127    0.000 5326.251    0.002 GerrymanderingMCMC.py:190(__district_size)
1677064650  981.532    0.000 3888.195    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   28.900    0.003  905.009    0.090 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.047    0.000   60.338    0.003 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.061    0.000   57.318    0.003 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   20.137    0.001   57.182    0.003 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.152    0.000   48.616    0.005 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    6.812    0.001   43.682    0.004 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.116    0.000    4.664    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.347    0.000    1.024    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.666    0.666 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.039    0.039 GerrymanderingMCMC.py:21(__init__)
        1    0.007    0.007    0.039    0.039 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.009    0.009 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
