         25091883313 function calls (25091761274 primitive calls) in 8646.437 seconds
        1   15.273   15.273 8645.685 8645.685 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100   25.208    0.002 8630.360    0.854 GerrymanderingMCMC.py:235(recombination_of_districts)
   772849    7.097    0.000 7254.877    0.009 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  3091396    4.170    0.000 5300.492    0.002 GerrymanderingMCMC.py:190(__district_size)
1689161648  990.515    0.000 3866.083    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   28.404    0.003  892.157    0.088 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.045    0.000   58.984    0.003 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.062    0.000   56.000    0.003 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   19.267    0.001   55.863    0.003 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.152    0.000   47.493    0.005 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10099    6.621    0.001   42.782    0.004 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.111    0.000    4.578    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.332    0.000    1.020    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.709    0.709 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.039    0.039 GerrymanderingMCMC.py:21(__init__)
        1    0.007    0.007    0.038    0.038 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.009    0.009 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
