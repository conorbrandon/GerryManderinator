         27613909110 function calls (27613787071 primitive calls) in 9343.483 seconds
        1   15.073   15.073 9342.748 9342.748 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100   27.591    0.003 9327.637    0.924 GerrymanderingMCMC.py:235(recombination_of_districts)
   879734    7.596    0.000 7966.879    0.009 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  3518936    4.596    0.000 5818.124    0.002 GerrymanderingMCMC.py:190(__district_size)
1895025922 1095.591    0.000 4262.672    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   28.094    0.003  883.005    0.087 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.044    0.000   57.476    0.003 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.061    0.000   54.515    0.003 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   18.434    0.001   54.385    0.003 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.145    0.000   46.515    0.005 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    6.567    0.001   42.239    0.004 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.108    0.000    4.545    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.328    0.000    0.987    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.689    0.689 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.043    0.043 GerrymanderingMCMC.py:21(__init__)
        1    0.008    0.008    0.042    0.042 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.009    0.009 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
