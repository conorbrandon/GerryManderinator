         26581273333 function calls (26581151294 primitive calls) in 9062.587 seconds
        1   15.027   15.027 9061.807 9061.807 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100   26.243    0.003 9046.741    0.896 GerrymanderingMCMC.py:235(recombination_of_districts)
   829834    7.394    0.000 7690.972    0.009 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  3319336    4.355    0.000 5627.620    0.002 GerrymanderingMCMC.py:190(__district_size)
1810262708 1055.462    0.000 4114.989    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   27.921    0.003  878.711    0.087 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.043    0.000   58.053    0.003 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.063    0.000   55.077    0.003 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   18.742    0.001   54.944    0.003 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.145    0.000   46.606    0.005 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    6.675    0.001   42.414    0.004 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.122    0.000    4.560    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.325    0.000    0.975    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.737    0.737 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.040    0.040 GerrymanderingMCMC.py:21(__init__)
        1    0.007    0.007    0.039    0.039 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.009    0.009 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
