         26198626045 function calls (26198504006 primitive calls) in 9076.036 seconds
        1   15.320   15.320 9075.322 9075.322 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100   26.451    0.003 9059.945    0.897 GerrymanderingMCMC.py:235(recombination_of_districts)
   802667    7.207    0.000 7679.286    0.010 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  3210668    4.266    0.000 5613.971    0.002 GerrymanderingMCMC.py:190(__district_size)
1772974930 1046.278    0.000 4086.270    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   28.971    0.003  898.132    0.089 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.045    0.000   59.092    0.003 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.061    0.000   56.062    0.003 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   19.201    0.001   55.929    0.003 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.148    0.000   47.589    0.005 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    6.756    0.001   43.378    0.004 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.113    0.000    4.655    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.334    0.000    0.996    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.671    0.671 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.039    0.039 GerrymanderingMCMC.py:21(__init__)
        1    0.007    0.007    0.038    0.038 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.009    0.009 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
