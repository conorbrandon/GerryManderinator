         25572521044 function calls (25572399005 primitive calls) in 8676.999 seconds
        1   14.925   14.925 8676.208 8676.208 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100   25.715    0.003 8661.229    0.858 GerrymanderingMCMC.py:235(recombination_of_districts)
   782906    6.806    0.000 7308.345    0.009 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  3131624    4.044    0.000 5348.683    0.002 GerrymanderingMCMC.py:190(__district_size)
1725732952  995.645    0.000 3900.699    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   28.075    0.003  879.563    0.087 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.043    0.000   57.623    0.003 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.061    0.000   54.701    0.003 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   18.943    0.001   54.572    0.003 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.148    0.000   46.466    0.005 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10099    6.572    0.001   42.066    0.004 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.117    0.000    4.511    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.329    0.000    0.979    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.749    0.749 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.039    0.039 GerrymanderingMCMC.py:21(__init__)
        1    0.007    0.007    0.039    0.039 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.009    0.009 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
