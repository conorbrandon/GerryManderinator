         26250527360 function calls (26250405321 primitive calls) in 8888.260 seconds
        1   14.856   14.856 8887.489 8887.489 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100   25.724    0.003 8872.596    0.878 GerrymanderingMCMC.py:235(recombination_of_districts)
   826526    6.983    0.000 7521.702    0.009 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  3306104    4.258    0.000 5495.619    0.002 GerrymanderingMCMC.py:190(__district_size)
1786530482 1024.688    0.000 4018.129    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   27.952    0.003  875.520    0.087 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.043    0.000   57.898    0.003 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.058    0.000   54.971    0.003 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   18.926    0.001   54.848    0.003 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.158    0.000   46.598    0.005 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    6.456    0.001   42.178    0.004 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.105    0.000    4.486    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.337    0.000    0.987    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.729    0.729 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.039    0.039 GerrymanderingMCMC.py:21(__init__)
        1    0.007    0.007    0.038    0.038 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.009    0.009 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
