         25999258725 function calls (25999136686 primitive calls) in 14230.688 seconds
        1   17.130   17.130 14229.625 14229.625 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100   40.124    0.004 14212.437    1.407 GerrymanderingMCMC.py:235(recombination_of_districts)
   817806   10.489    0.000 12047.451    0.015 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  3271224    6.809    0.000 8832.813    0.003 GerrymanderingMCMC.py:190(__district_size)
1766308242 1636.556    0.000 6493.279    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10101   43.677    0.004 1418.882    0.140 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.057    0.000   90.782    0.004 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.078    0.000   86.335    0.004 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   28.712    0.001   86.169    0.004 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.219    0.000   73.935    0.007 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    9.922    0.001   67.328    0.007 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.139    0.000    6.950    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.511    0.000    1.559    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.996    0.996 GerrymanderingMCMC.py:1(<module>)
        1    0.001    0.001    0.063    0.063 GerrymanderingMCMC.py:21(__init__)
        1    0.012    0.012    0.062    0.062 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.014    0.014 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
