         25076033985 function calls (25075911946 primitive calls) in 8526.948 seconds
        1   14.825   14.825 8526.153 8526.153 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100   24.560    0.002 8511.291    0.843 GerrymanderingMCMC.py:235(recombination_of_districts)
   780728    6.699    0.000 7153.669    0.009 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  3122912    4.166    0.000 5208.391    0.002 GerrymanderingMCMC.py:190(__district_size)
1691760966  978.422    0.000 3816.493    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   27.940    0.003  882.954    0.087 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.043    0.000   58.987    0.003 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.060    0.000   56.054    0.003 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   19.446    0.001   55.925    0.003 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.146    0.000   47.471    0.005 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10099    6.699    0.001   42.665    0.004 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.107    0.000    4.442    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.339    0.000    0.986    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.757    0.757 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.039    0.039 GerrymanderingMCMC.py:21(__init__)
        1    0.007    0.007    0.038    0.038 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.009    0.009 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
