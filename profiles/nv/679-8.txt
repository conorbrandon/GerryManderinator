         26405032300 function calls (26404910261 primitive calls) in 9094.751 seconds
        1   15.352   15.352 9093.997 9093.997 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100   26.487    0.003 9078.607    0.899 GerrymanderingMCMC.py:235(recombination_of_districts)
   831712    7.209    0.000 7705.997    0.009 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  3326848    4.340    0.000 5613.868    0.002 GerrymanderingMCMC.py:190(__district_size)
1801637146 1058.500    0.000 4119.183    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   28.409    0.003  888.708    0.088 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.044    0.000   58.474    0.003 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.061    0.000   55.448    0.003 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   19.048    0.001   55.316    0.003 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.146    0.000   47.138    0.005 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    6.679    0.001   42.985    0.004 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.110    0.000    4.599    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.336    0.000    0.997    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.711    0.711 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.040    0.040 GerrymanderingMCMC.py:21(__init__)
        1    0.008    0.008    0.039    0.039 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.009    0.009 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
