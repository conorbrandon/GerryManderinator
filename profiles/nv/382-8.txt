         27269599782 function calls (27269477743 primitive calls) in 9531.592 seconds
        1   15.355   15.355 9530.558 9530.558 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100   27.900    0.003 9515.164    0.942 GerrymanderingMCMC.py:235(recombination_of_districts)
   851798    7.784    0.000 8107.186    0.010 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  3407192    4.562    0.000 5930.987    0.002 GerrymanderingMCMC.py:190(__district_size)
1863750242 1108.722    0.000 4344.712    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10101   30.866    0.003  917.967    0.091 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.045    0.000   59.854    0.003 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.063    0.000   56.796    0.003 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   19.449    0.001   56.657    0.003 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.151    0.000   48.194    0.005 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    6.772    0.001   43.532    0.004 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.114    0.000    4.680    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.338    0.000    1.012    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.960    0.960 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.070    0.070 GerrymanderingMCMC.py:21(__init__)
        1    0.008    0.008    0.070    0.070 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.013    0.013 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
