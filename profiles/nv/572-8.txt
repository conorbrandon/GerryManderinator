         25789591963 function calls (25789469924 primitive calls) in 8850.569 seconds
        1   15.331   15.331 8849.801 8849.801 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100   26.120    0.003 8834.419    0.875 GerrymanderingMCMC.py:235(recombination_of_districts)
   799718    7.115    0.000 7463.050    0.009 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  3198872    4.218    0.000 5443.706    0.002 GerrymanderingMCMC.py:190(__district_size)
1748340112 1023.010    0.000 3986.466    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   28.069    0.003  891.337    0.088 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.044    0.000   58.917    0.003 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.064    0.000   55.935    0.003 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   19.335    0.001   55.799    0.003 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.147    0.000   47.482    0.005 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    6.651    0.001   42.946    0.004 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.112    0.000    4.610    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.337    0.000    0.988    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.725    0.725 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.040    0.040 GerrymanderingMCMC.py:21(__init__)
        1    0.008    0.008    0.040    0.040 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.009    0.009 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
