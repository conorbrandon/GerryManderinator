         25668141210 function calls (25668019171 primitive calls) in 8984.663 seconds
        1   15.215   15.215 8983.875 8983.875 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100   26.124    0.003 8968.604    0.888 GerrymanderingMCMC.py:235(recombination_of_districts)
   798128    7.110    0.000 7579.504    0.009 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  3192512    4.238    0.000 5542.131    0.002 GerrymanderingMCMC.py:190(__district_size)
1739072294 1044.910    0.000 4060.042    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   28.281    0.003  902.984    0.089 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.044    0.000   59.524    0.003 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.061    0.000   56.517    0.003 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   19.579    0.001   56.388    0.003 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.147    0.000   47.995    0.005 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    6.860    0.001   43.617    0.004 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.111    0.000    4.616    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.339    0.000    0.999    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.744    0.744 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.040    0.040 GerrymanderingMCMC.py:21(__init__)
        1    0.008    0.008    0.039    0.039 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.009    0.009 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
