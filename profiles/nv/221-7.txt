         26183720808 function calls (26183598769 primitive calls) in 14117.556 seconds
        1   17.092   17.092 14116.490 14116.490 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100   39.788    0.004 14099.344    1.396 GerrymanderingMCMC.py:235(recombination_of_districts)
   826187   10.474    0.000 11974.882    0.014 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  3304748    6.687    0.000 8764.138    0.003 GerrymanderingMCMC.py:190(__district_size)
1782042458 1625.887    0.000 6419.227    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   43.331    0.004 1390.892    0.138 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.055    0.000   90.512    0.004 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.079    0.000   86.097    0.004 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   28.521    0.001   85.928    0.004 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.221    0.000   73.514    0.007 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    9.853    0.001   66.661    0.007 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.140    0.000    6.804    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.507    0.000    1.574    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    1.001    1.001 GerrymanderingMCMC.py:1(<module>)
        1    0.001    0.001    0.060    0.060 GerrymanderingMCMC.py:21(__init__)
        1    0.011    0.011    0.060    0.060 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.013    0.013 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
