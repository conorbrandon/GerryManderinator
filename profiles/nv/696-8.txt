         26100120202 function calls (26099998163 primitive calls) in 8938.892 seconds
        1   15.258   15.258 8938.133 8938.133 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100   25.913    0.003 8922.835    0.883 GerrymanderingMCMC.py:235(recombination_of_districts)
   813347    7.171    0.000 7549.061    0.009 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  3253388    4.257    0.000 5520.693    0.002 GerrymanderingMCMC.py:190(__district_size)
1773582508 1031.789    0.000 4032.136    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   28.929    0.003  892.612    0.088 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.044    0.000   58.730    0.003 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.061    0.000   55.750    0.003 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   18.985    0.001   55.618    0.003 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.146    0.000   47.157    0.005 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    6.623    0.001   42.594    0.004 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.108    0.000    4.586    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.329    0.000    0.991    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.717    0.717 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.039    0.039 GerrymanderingMCMC.py:21(__init__)
        1    0.007    0.007    0.039    0.039 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.009    0.009 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
