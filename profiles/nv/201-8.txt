         26346841974 function calls (26346719935 primitive calls) in 9085.029 seconds
        1   15.442   15.442 9084.318 9084.318 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100   26.773    0.003 9068.836    0.898 GerrymanderingMCMC.py:235(recombination_of_districts)
   826844    7.209    0.000 7686.309    0.009 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  3307376    4.345    0.000 5587.986    0.002 GerrymanderingMCMC.py:190(__district_size)
1795230810 1053.779    0.000 4103.540    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   28.781    0.003  898.020    0.089 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.043    0.000   58.590    0.003 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.062    0.000   55.558    0.003 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   19.061    0.001   55.425    0.003 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.151    0.000   47.412    0.005 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    6.656    0.001   43.279    0.004 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.110    0.000    4.636    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.341    0.000    0.997    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.669    0.669 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.039    0.039 GerrymanderingMCMC.py:21(__init__)
        1    0.007    0.007    0.038    0.038 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.009    0.009 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
