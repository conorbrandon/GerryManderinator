         26229281757 function calls (26229159718 primitive calls) in 9215.635 seconds
        1   15.141   15.141 9214.831 9214.831 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100   26.022    0.003 9199.650    0.911 GerrymanderingMCMC.py:235(recombination_of_districts)
   807477    7.091    0.000 7825.928    0.010 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  3229908    4.308    0.000 5779.127    0.002 GerrymanderingMCMC.py:190(__district_size)
1776367022 1039.387    0.000 4238.578    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   28.317    0.003  895.399    0.089 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.042    0.000   58.548    0.003 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.057    0.000   55.557    0.003 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   19.374    0.001   55.432    0.003 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.143    0.000   47.158    0.005 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10098    6.622    0.001   42.889    0.004 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.104    0.000    4.510    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.331    0.000    0.979    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.761    0.761 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.039    0.039 GerrymanderingMCMC.py:21(__init__)
        1    0.007    0.007    0.038    0.038 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.009    0.009 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
