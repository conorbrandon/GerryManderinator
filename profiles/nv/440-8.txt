         26262369242 function calls (26262247203 primitive calls) in 9184.811 seconds
        1   15.349   15.349 9184.043 9184.043 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100   26.699    0.003 9168.656    0.908 GerrymanderingMCMC.py:235(recombination_of_districts)
   811095    7.199    0.000 7764.768    0.010 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  3244380    4.319    0.000 5679.977    0.002 GerrymanderingMCMC.py:190(__district_size)
1776636226 1048.961    0.000 4130.495    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   29.149    0.003  914.835    0.091 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.048    0.000   59.930    0.003 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.063    0.000   56.872    0.003 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   19.447    0.001   56.737    0.003 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.151    0.000   48.389    0.005 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    6.813    0.001   43.851    0.004 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.123    0.000    4.750    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.342    0.000    1.014    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.737    0.737 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.040    0.040 GerrymanderingMCMC.py:21(__init__)
        1    0.008    0.008    0.040    0.040 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.009    0.009 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
