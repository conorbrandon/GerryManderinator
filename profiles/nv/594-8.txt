         25784182520 function calls (25784060481 primitive calls) in 8915.325 seconds
        1   15.455   15.455 8914.579 8914.579 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100   25.668    0.003 8899.085    0.881 GerrymanderingMCMC.py:235(recombination_of_districts)
   807226    6.971    0.000 7515.310    0.009 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  3228904    4.267    0.000 5472.472    0.002 GerrymanderingMCMC.py:190(__district_size)
1748056018 1018.215    0.000 3994.399    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   28.931    0.003  899.789    0.089 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.043    0.000   58.785    0.003 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.061    0.000   55.758    0.003 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   19.191    0.001   55.626    0.003 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.149    0.000   47.596    0.005 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    6.672    0.001   43.312    0.004 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.110    0.000    4.647    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.335    0.000    0.993    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.704    0.704 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.039    0.039 GerrymanderingMCMC.py:21(__init__)
        1    0.007    0.007    0.038    0.038 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.009    0.009 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
