         26913273961 function calls (26913151922 primitive calls) in 9246.987 seconds
        1   15.031   15.031 9246.200 9246.200 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100   27.099    0.003 9231.133    0.914 GerrymanderingMCMC.py:235(recombination_of_districts)
   838313    7.269    0.000 7864.627    0.009 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  3353252    4.385    0.000 5759.850    0.002 GerrymanderingMCMC.py:190(__district_size)
1834798584 1066.055    0.000 4220.653    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   27.958    0.003  887.423    0.088 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.042    0.000   58.023    0.003 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.062    0.000   55.042    0.003 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   18.785    0.001   54.909    0.003 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.146    0.000   46.870    0.005 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    6.653    0.001   42.850    0.004 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.108    0.000    4.599    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.331    0.000    0.990    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.745    0.745 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.039    0.039 GerrymanderingMCMC.py:21(__init__)
        1    0.007    0.007    0.039    0.039 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.009    0.009 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
