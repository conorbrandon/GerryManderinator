         26713525792 function calls (26713403753 primitive calls) in 14462.862 seconds
        1   17.252   17.252 14461.848 14461.848 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100   41.480    0.004 14444.534    1.430 GerrymanderingMCMC.py:235(recombination_of_districts)
   842037   10.806    0.000 12298.761    0.015 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  3368148    6.917    0.000 8974.166    0.003 GerrymanderingMCMC.py:190(__district_size)
1822006492 1658.792    0.000 6575.594    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   43.216    0.004 1401.191    0.139 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.057    0.000   90.697    0.004 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.079    0.000   86.262    0.004 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   28.357    0.001   86.094    0.004 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.219    0.000   73.975    0.007 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    9.986    0.001   67.287    0.007 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.139    0.000    6.902    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.507    0.000    1.546    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.950    0.950 GerrymanderingMCMC.py:1(<module>)
        1    0.001    0.001    0.060    0.060 GerrymanderingMCMC.py:21(__init__)
        1    0.011    0.011    0.059    0.059 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.014    0.014 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
