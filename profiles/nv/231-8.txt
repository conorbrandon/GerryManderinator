         26039418065 function calls (26039296026 primitive calls) in 9100.249 seconds
        1   15.265   15.265 9099.494 9099.494 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100   25.932    0.003 9084.191    0.899 GerrymanderingMCMC.py:235(recombination_of_districts)
   817362    7.418    0.000 7702.346    0.009 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  3269448    4.445    0.000 5614.622    0.002 GerrymanderingMCMC.py:190(__district_size)
1768644328 1044.120    0.000 4119.686    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10101   28.277    0.003  896.284    0.089 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.045    0.000   59.741    0.003 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.062    0.000   56.743    0.003 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   19.477    0.001   56.612    0.003 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.149    0.000   48.318    0.005 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    6.726    0.001   43.464    0.004 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.109    0.000    4.549    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.341    0.000    1.008    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.688    0.688 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.063    0.063 GerrymanderingMCMC.py:21(__init__)
        1    0.019    0.019    0.063    0.063 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.009    0.009 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
