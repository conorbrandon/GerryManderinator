         24887913493 function calls (24887791454 primitive calls) in 8475.310 seconds
        1   15.094   15.094 8474.559 8474.559 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100   24.295    0.002 8459.427    0.838 GerrymanderingMCMC.py:235(recombination_of_districts)
   771770    6.835    0.000 7105.840    0.009 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  3087080    4.133    0.000 5187.443    0.002 GerrymanderingMCMC.py:190(__district_size)
1676136656  964.164    0.000 3801.840    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   27.937    0.003  879.336    0.087 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.044    0.000   58.546    0.003 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.059    0.000   55.618    0.003 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   19.159    0.001   55.482    0.003 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.149    0.000   47.049    0.005 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    6.719    0.001   42.640    0.004 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.106    0.000    4.445    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.327    0.000    0.974    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.718    0.718 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.039    0.039 GerrymanderingMCMC.py:21(__init__)
        1    0.007    0.007    0.039    0.039 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.009    0.009 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
