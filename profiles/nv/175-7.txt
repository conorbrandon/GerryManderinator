         26468865112 function calls (26468743073 primitive calls) in 14094.772 seconds
        1   17.078   17.078 14093.726 14093.726 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100   40.126    0.004 14076.576    1.394 GerrymanderingMCMC.py:235(recombination_of_districts)
   816760   10.113    0.000 11972.872    0.015 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  3267040    6.627    0.000 8789.558    0.003 GerrymanderingMCMC.py:190(__district_size)
1796738358 1614.660    0.000 6405.933    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   42.181    0.004 1378.868    0.137 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.055    0.000   89.191    0.004 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.077    0.000   84.848    0.004 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   27.934    0.001   84.684    0.004 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.215    0.000   72.315    0.007 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    9.766    0.001   65.916    0.007 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.136    0.000    6.696    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.496    0.000    1.515    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.981    0.981 GerrymanderingMCMC.py:1(<module>)
        1    0.001    0.001    0.060    0.060 GerrymanderingMCMC.py:21(__init__)
        1    0.012    0.012    0.060    0.060 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.013    0.013 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
