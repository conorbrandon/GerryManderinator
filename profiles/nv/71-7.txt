         25441184950 function calls (25441062911 primitive calls) in 14119.234 seconds
        1   17.174   17.174 14118.170 14118.170 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100   39.673    0.004 14100.916    1.396 GerrymanderingMCMC.py:235(recombination_of_districts)
   786353   10.099    0.000 11917.244    0.015 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  3145412    6.610    0.000 8709.875    0.003 GerrymanderingMCMC.py:190(__district_size)
1718741242 1594.882    0.000 6382.128    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   44.347    0.004 1432.176    0.142 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.060    0.000   91.635    0.005 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.078    0.000   87.198    0.004 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   28.820    0.001   87.031    0.004 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.221    0.000   75.019    0.007 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100   10.050    0.001   68.457    0.007 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.141    0.000    6.989    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.508    0.000    1.553    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.997    0.997 GerrymanderingMCMC.py:1(<module>)
        1    0.001    0.001    0.063    0.063 GerrymanderingMCMC.py:21(__init__)
        1    0.012    0.012    0.062    0.062 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.014    0.014 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
