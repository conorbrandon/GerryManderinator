         25058819410 function calls (25058697371 primitive calls) in 8534.916 seconds
        1   14.944   14.944 8534.179 8534.179 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100   24.418    0.002 8519.197    0.843 GerrymanderingMCMC.py:235(recombination_of_districts)
   772724    6.541    0.000 7162.900    0.009 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  3090896    4.098    0.000 5248.434    0.002 GerrymanderingMCMC.py:190(__district_size)
1686059674  979.864    0.000 3823.086    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   28.413    0.003  881.984    0.087 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.042    0.000   58.510    0.003 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.060    0.000   55.597    0.003 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   19.493    0.001   55.470    0.003 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.145    0.000   47.061    0.005 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    6.671    0.001   42.400    0.004 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.104    0.000    4.458    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.331    0.000    0.966    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.695    0.695 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.039    0.039 GerrymanderingMCMC.py:21(__init__)
        1    0.008    0.008    0.039    0.039 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.009    0.009 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
