         26204624873 function calls (26204502834 primitive calls) in 8877.424 seconds
        1   14.883   14.883 8876.696 8876.696 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100   25.902    0.003 8861.776    0.877 GerrymanderingMCMC.py:235(recombination_of_districts)
   813592    7.048    0.000 7503.379    0.009 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  3254368    4.216    0.000 5480.737    0.002 GerrymanderingMCMC.py:190(__district_size)
1777469512 1026.569    0.000 4000.070    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   27.908    0.003  881.629    0.087 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.043    0.000   58.266    0.003 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.059    0.000   55.316    0.003 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   18.954    0.001   55.191    0.003 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.145    0.000   47.001    0.005 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    6.610    0.001   42.413    0.004 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.105    0.000    4.458    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.337    0.000    0.991    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.689    0.689 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.039    0.039 GerrymanderingMCMC.py:21(__init__)
        1    0.007    0.007    0.039    0.039 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.009    0.009 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
