         26567138102 function calls (26567016063 primitive calls) in 14086.910 seconds
        1   16.404   16.404 14085.905 14085.905 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100   41.569    0.004 14069.449    1.393 GerrymanderingMCMC.py:235(recombination_of_districts)
   828720   10.369    0.000 11962.767    0.014 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  3314880    6.690    0.000 8749.923    0.003 GerrymanderingMCMC.py:190(__district_size)
1808656012 1620.659    0.000 6420.386    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   42.539    0.004 1380.643    0.137 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.053    0.000   90.184    0.004 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.075    0.000   85.820    0.004 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   28.412    0.001   85.661    0.004 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.212    0.000   72.582    0.007 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    9.680    0.001   65.602    0.006 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.132    0.000    6.726    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.499    0.000    1.529    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.949    0.949 GerrymanderingMCMC.py:1(<module>)
        1    0.001    0.001    0.060    0.060 GerrymanderingMCMC.py:21(__init__)
        1    0.012    0.012    0.059    0.059 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.013    0.013 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
