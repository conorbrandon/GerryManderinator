         25825637096 function calls (25825515057 primitive calls) in 8839.777 seconds
        1   15.319   15.319 8839.041 8839.041 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100   25.675    0.003 8823.684    0.874 GerrymanderingMCMC.py:235(recombination_of_districts)
   807569    7.282    0.000 7453.948    0.009 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  3230276    4.284    0.000 5448.071    0.002 GerrymanderingMCMC.py:190(__district_size)
1752721138 1024.119    0.000 3975.365    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   28.600    0.003  890.427    0.088 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.043    0.000   59.009    0.003 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.062    0.000   56.053    0.003 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   19.459    0.001   55.915    0.003 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.148    0.000   47.358    0.005 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10099    6.759    0.001   42.598    0.004 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.127    0.000    4.579    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.342    0.000    0.994    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.699    0.699 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.039    0.039 GerrymanderingMCMC.py:21(__init__)
        1    0.007    0.007    0.038    0.038 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.009    0.009 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
