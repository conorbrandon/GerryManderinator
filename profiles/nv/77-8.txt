         23970556700 function calls (23970434661 primitive calls) in 8327.747 seconds
        1   15.231   15.231 8327.040 8327.040 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100   23.623    0.002 8311.773    0.823 GerrymanderingMCMC.py:235(recombination_of_districts)
   728005    6.389    0.000 6936.034    0.010 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  2912020    3.910    0.000 5079.525    0.002 GerrymanderingMCMC.py:190(__district_size)
1598376834  952.397    0.000 3693.548    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   28.584    0.003  894.378    0.089 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.047    0.000   59.468    0.003 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.063    0.000   56.428    0.003 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   19.273    0.001   56.296    0.003 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.147    0.000   47.890    0.005 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10099    6.726    0.001   43.185    0.004 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.112    0.000    4.640    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.328    0.000    0.978    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.664    0.664 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.040    0.040 GerrymanderingMCMC.py:21(__init__)
        1    0.008    0.008    0.039    0.039 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.009    0.009 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
