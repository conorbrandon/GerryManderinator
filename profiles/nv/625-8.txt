         24235108482 function calls (24234986443 primitive calls) in 8487.814 seconds
        1   15.231   15.231 8487.021 8487.021 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100   24.025    0.002 8471.727    0.839 GerrymanderingMCMC.py:235(recombination_of_districts)
   742748    6.732    0.000 7082.949    0.010 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  2970992    4.003    0.000 5186.411    0.002 GerrymanderingMCMC.py:190(__district_size)
1621361382  969.355    0.000 3786.265    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   29.221    0.003  903.670    0.089 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.043    0.000   59.748    0.003 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.063    0.000   56.712    0.003 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   19.572    0.001   56.582    0.003 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.149    0.000   48.027    0.005 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    6.707    0.001   43.139    0.004 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.111    0.000    4.550    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.335    0.000    0.989    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.749    0.749 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.040    0.040 GerrymanderingMCMC.py:21(__init__)
        1    0.008    0.008    0.040    0.040 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.009    0.009 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
