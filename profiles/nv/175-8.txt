         25874113590 function calls (25873991551 primitive calls) in 9051.118 seconds
        1   15.463   15.463 9050.207 9050.207 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100   25.918    0.003 9034.708    0.895 GerrymanderingMCMC.py:235(recombination_of_districts)
   813773    7.196    0.000 7642.395    0.009 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  3255092    4.344    0.000 5578.319    0.002 GerrymanderingMCMC.py:190(__district_size)
1759445410 1049.393    0.000 4095.354    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   29.354    0.003  904.481    0.090 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.044    0.000   59.739    0.003 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.064    0.000   56.697    0.003 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   19.335    0.001   56.563    0.003 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.149    0.000   48.269    0.005 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10099    6.793    0.001   43.652    0.004 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.112    0.000    4.666    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.346    0.000    1.016    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.867    0.867 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.040    0.040 GerrymanderingMCMC.py:21(__init__)
        1    0.008    0.008    0.040    0.040 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.009    0.009 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
