         27229719358 function calls (27229597319 primitive calls) in 9207.328 seconds
        1   14.862   14.862 9206.591 9206.591 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100   27.113    0.003 9191.692    0.910 GerrymanderingMCMC.py:235(recombination_of_districts)
   869416    7.473    0.000 7829.862    0.009 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  3477664    4.419    0.000 5697.094    0.002 GerrymanderingMCMC.py:190(__district_size)
1870894886 1051.167    0.000 4191.955    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   28.055    0.003  885.221    0.088 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.044    0.000   59.003    0.003 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.058    0.000   56.088    0.003 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   19.286    0.001   55.963    0.003 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.143    0.000   47.295    0.005 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    6.511    0.001   42.553    0.004 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.111    0.000    4.493    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.335    0.000    0.999    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.695    0.695 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.039    0.039 GerrymanderingMCMC.py:21(__init__)
        1    0.007    0.007    0.039    0.039 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.009    0.009 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
