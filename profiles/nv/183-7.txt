         26965519130 function calls (26965397091 primitive calls) in 14915.645 seconds
        1   17.411   17.411 14914.528 14914.528 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100   42.424    0.004 14897.061    1.475 GerrymanderingMCMC.py:235(recombination_of_districts)
   841781   10.856    0.000 12687.114    0.015 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  3367124    7.068    0.000 9291.229    0.003 GerrymanderingMCMC.py:190(__district_size)
1839148792 1707.161    0.000 6794.641    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   44.483    0.004 1441.468    0.143 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.066    0.000   93.808    0.005 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.081    0.000   89.212    0.004 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   28.995    0.001   89.042    0.004 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.220    0.000   76.131    0.008 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100   10.073    0.001   68.835    0.007 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.141    0.000    7.033    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.527    0.000    1.620    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    1.049    1.049 GerrymanderingMCMC.py:1(<module>)
        1    0.001    0.001    0.064    0.064 GerrymanderingMCMC.py:21(__init__)
        1    0.012    0.012    0.064    0.064 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.014    0.014 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
