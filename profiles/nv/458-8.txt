         25094011478 function calls (25093889439 primitive calls) in 8456.423 seconds
        1   14.906   14.906 8455.686 8455.686 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100   24.311    0.002 8440.723    0.836 GerrymanderingMCMC.py:235(recombination_of_districts)
   788457    6.709    0.000 7096.412    0.009 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  3153828    4.087    0.000 5175.106    0.002 GerrymanderingMCMC.py:190(__district_size)
1696653154  961.925    0.000 3788.950    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   28.035    0.003  872.482    0.086 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.042    0.000   57.297    0.003 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.058    0.000   54.371    0.003 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   18.528    0.001   54.248    0.003 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.156    0.000   46.469    0.005 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    6.404    0.001   41.781    0.004 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.114    0.000    4.419    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.331    0.000    0.980    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.695    0.695 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.039    0.039 GerrymanderingMCMC.py:21(__init__)
        1    0.007    0.007    0.039    0.039 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.009    0.009 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
