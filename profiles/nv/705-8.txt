         27148408527 function calls (27148286488 primitive calls) in 9366.157 seconds
        1   15.153   15.153 9365.409 9365.409 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100   26.921    0.003 9350.216    0.926 GerrymanderingMCMC.py:235(recombination_of_districts)
   861544    7.422    0.000 7980.062    0.009 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  3446176    4.575    0.000 5816.932    0.002 GerrymanderingMCMC.py:190(__district_size)
1859941252 1090.494    0.000 4258.630    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   29.066    0.003  887.240    0.088 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.044    0.000   58.090    0.003 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.061    0.000   55.111    0.003 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   18.756    0.001   54.983    0.003 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.150    0.000   47.107    0.005 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10099    6.647    0.001   42.968    0.004 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.107    0.000    4.601    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.327    0.000    0.983    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.711    0.711 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.039    0.039 GerrymanderingMCMC.py:21(__init__)
        1    0.007    0.007    0.038    0.038 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.009    0.009 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
