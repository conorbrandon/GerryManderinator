         24909899412 function calls (24909777373 primitive calls) in 8561.412 seconds
        1   15.569   15.569 8560.617 8560.617 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100   25.033    0.002 8544.993    0.846 GerrymanderingMCMC.py:235(recombination_of_districts)
   749947    6.861    0.000 7178.970    0.010 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  2999788    3.963    0.000 5232.422    0.002 GerrymanderingMCMC.py:190(__district_size)
1669465082  968.184    0.000 3810.256    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   28.891    0.003  886.349    0.088 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.055    0.000   58.571    0.003 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.064    0.000   55.589    0.003 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   19.225    0.001   55.454    0.003 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.149    0.000   47.254    0.005 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10099    6.612    0.001   42.958    0.004 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.124    0.000    4.627    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.333    0.000    0.980    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.752    0.752 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.040    0.040 GerrymanderingMCMC.py:21(__init__)
        1    0.008    0.008    0.040    0.040 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.009    0.009 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
