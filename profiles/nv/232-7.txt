         26562881733 function calls (26562759694 primitive calls) in 14614.739 seconds
        1   17.179   17.179 14613.677 14613.677 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100   41.260    0.004 14596.369    1.445 GerrymanderingMCMC.py:235(recombination_of_districts)
   839583   10.745    0.000 12426.722    0.015 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  3358332    7.039    0.000 9111.203    0.003 GerrymanderingMCMC.py:190(__district_size)
1811697636 1688.097    0.000 6687.690    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   43.471    0.004 1414.383    0.140 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.057    0.000   91.695    0.005 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.078    0.000   87.233    0.004 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   28.603    0.001   87.067    0.004 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.220    0.000   74.754    0.007 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100   10.113    0.001   68.046    0.007 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.139    0.000    7.030    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.526    0.000    1.587    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.991    0.991 GerrymanderingMCMC.py:1(<module>)
        1    0.001    0.001    0.064    0.064 GerrymanderingMCMC.py:21(__init__)
        1    0.012    0.012    0.063    0.063 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.014    0.014 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
