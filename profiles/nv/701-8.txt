         25608186166 function calls (25608064127 primitive calls) in 8857.372 seconds
        1   14.908   14.908 8856.640 8856.640 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100   25.505    0.003 8841.683    0.875 GerrymanderingMCMC.py:235(recombination_of_districts)
   784800    6.905    0.000 7458.925    0.010 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  3139200    4.158    0.000 5453.766    0.002 GerrymanderingMCMC.py:190(__district_size)
1726173946 1018.836    0.000 3964.889    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   29.814    0.003  902.618    0.089 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.043    0.000   58.661    0.003 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.060    0.000   55.699    0.003 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   18.913    0.001   55.570    0.003 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.146    0.000   47.363    0.005 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    6.621    0.001   43.040    0.004 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.105    0.000    4.545    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.323    0.000    0.968    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.702    0.702 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.039    0.039 GerrymanderingMCMC.py:21(__init__)
        1    0.007    0.007    0.039    0.039 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.009    0.009 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
