         25890753299 function calls (25890631260 primitive calls) in 13922.751 seconds
        1   17.127   17.127 13921.690 13921.690 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100   39.065    0.004 13904.507    1.377 GerrymanderingMCMC.py:235(recombination_of_districts)
   807198    9.927    0.000 11779.116    0.015 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  3228792    6.585    0.000 8626.961    0.003 GerrymanderingMCMC.py:190(__district_size)
1753952148 1584.730    0.000 6310.889    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10101   42.717    0.004 1390.157    0.138 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.056    0.000   90.972    0.005 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.078    0.000   86.600    0.004 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   28.720    0.001   86.432    0.004 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.218    0.000   73.721    0.007 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    9.950    0.001   66.717    0.007 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.141    0.000    6.907    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.517    0.000    1.564    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.992    0.992 GerrymanderingMCMC.py:1(<module>)
        1    0.001    0.001    0.064    0.064 GerrymanderingMCMC.py:21(__init__)
        1    0.012    0.012    0.063    0.063 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.014    0.014 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
