         26317396726 function calls (26317274687 primitive calls) in 9199.521 seconds
        1   15.288   15.288 9198.566 9198.566 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100   26.857    0.003 9183.238    0.909 GerrymanderingMCMC.py:235(recombination_of_districts)
   834200    7.419    0.000 7790.120    0.009 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  3336800    4.630    0.000 5683.696    0.002 GerrymanderingMCMC.py:190(__district_size)
1795525218 1062.406    0.000 4156.993    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   28.684    0.003  905.205    0.090 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.045    0.000   59.608    0.003 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.063    0.000   56.547    0.003 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   19.286    0.001   56.412    0.003 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.149    0.000   48.079    0.005 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    6.726    0.001   43.480    0.004 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.114    0.000    4.718    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.335    0.000    1.003    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.912    0.912 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.039    0.039 GerrymanderingMCMC.py:21(__init__)
        1    0.007    0.007    0.039    0.039 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.009    0.009 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
