         26564909031 function calls (26564786992 primitive calls) in 9052.962 seconds
        1   14.970   14.970 9052.248 9052.248 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100   26.476    0.003 9037.224    0.895 GerrymanderingMCMC.py:235(recombination_of_districts)
   840737    7.139    0.000 7683.447    0.009 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  3362948    4.349    0.000 5600.658    0.002 GerrymanderingMCMC.py:190(__district_size)
1814652154 1053.550    0.000 4122.976    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   27.788    0.003  878.066    0.087 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.042    0.000   58.241    0.003 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.060    0.000   55.310    0.003 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   18.880    0.001   55.183    0.003 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.149    0.000   46.845    0.005 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10099    6.657    0.001   42.621    0.004 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.102    0.000    4.497    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.332    0.000    0.986    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.672    0.672 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.039    0.039 GerrymanderingMCMC.py:21(__init__)
        1    0.007    0.007    0.039    0.039 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.009    0.009 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
