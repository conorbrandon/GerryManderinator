         26308709462 function calls (26308587423 primitive calls) in 14656.939 seconds
        1   17.196   17.196 14655.839 14655.839 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100   42.580    0.004 14638.584    1.449 GerrymanderingMCMC.py:235(recombination_of_districts)
   819210   10.494    0.000 12441.940    0.015 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  3276840    6.937    0.000 9132.055    0.003 GerrymanderingMCMC.py:190(__district_size)
1789981240 1689.091    0.000 6674.597    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   43.329    0.004 1436.731    0.142 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.058    0.000   91.800    0.005 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.078    0.000   87.287    0.004 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   28.896    0.001   87.120    0.004 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.222    0.000   75.093    0.007 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100   10.218    0.001   68.523    0.007 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.138    0.000    7.095    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.533    0.000    1.583    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    1.032    1.032 GerrymanderingMCMC.py:1(<module>)
        1    0.001    0.001    0.063    0.063 GerrymanderingMCMC.py:21(__init__)
        1    0.012    0.012    0.062    0.062 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.014    0.014 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
