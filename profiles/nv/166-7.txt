         25191807890 function calls (25191685851 primitive calls) in 13568.512 seconds
        1   17.243   17.243 13567.453 13567.453 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100   37.183    0.004 13550.153    1.342 GerrymanderingMCMC.py:235(recombination_of_districts)
   788393   10.102    0.000 11438.221    0.015 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  3153572    6.411    0.000 8368.449    0.003 GerrymanderingMCMC.py:190(__district_size)
1701199154 1550.498    0.000 6123.042    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   42.515    0.004 1380.492    0.137 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.058    0.000   89.798    0.004 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.079    0.000   85.387    0.004 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   28.506    0.001   85.215    0.004 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.222    0.000   73.468    0.007 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    9.939    0.001   66.289    0.007 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.145    0.000    6.830    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.516    0.000    1.550    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.992    0.992 GerrymanderingMCMC.py:1(<module>)
        1    0.001    0.001    0.063    0.063 GerrymanderingMCMC.py:21(__init__)
        1    0.012    0.012    0.063    0.063 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.014    0.014 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
