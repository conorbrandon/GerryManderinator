         26440720896 function calls (26440598857 primitive calls) in 9050.991 seconds
        1   15.138   15.138 9050.192 9050.192 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100   26.292    0.003 9035.016    0.895 GerrymanderingMCMC.py:235(recombination_of_districts)
   822305    7.251    0.000 7662.031    0.009 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  3289220    4.349    0.000 5594.365    0.002 GerrymanderingMCMC.py:190(__district_size)
1795797112 1061.836    0.000 4089.457    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   28.573    0.003  891.628    0.088 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.044    0.000   58.720    0.003 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.062    0.000   55.731    0.003 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   19.238    0.001   55.599    0.003 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.149    0.000   47.564    0.005 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    6.708    0.001   43.119    0.004 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.111    0.000    4.567    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.333    0.000    0.994    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.756    0.756 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.040    0.040 GerrymanderingMCMC.py:21(__init__)
        1    0.008    0.008    0.040    0.040 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.009    0.009 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
