         25983157895 function calls (25983035856 primitive calls) in 8833.684 seconds
        1   15.095   15.095 8832.896 8832.896 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100   25.494    0.003 8817.762    0.873 GerrymanderingMCMC.py:235(recombination_of_districts)
   808468    7.054    0.000 7465.682    0.009 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  3233872    4.224    0.000 5466.728    0.002 GerrymanderingMCMC.py:190(__district_size)
1760918284 1027.849    0.000 3994.217    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   27.815    0.003  877.404    0.087 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.043    0.000   57.830    0.003 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.059    0.000   54.897    0.003 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   18.975    0.001   54.771    0.003 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.146    0.000   46.645    0.005 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    6.609    0.001   42.122    0.004 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.105    0.000    4.474    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.335    0.000    0.989    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.740    0.740 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.043    0.043 GerrymanderingMCMC.py:21(__init__)
        1    0.008    0.008    0.043    0.043 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.010    0.010 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
