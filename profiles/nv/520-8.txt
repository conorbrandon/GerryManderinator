         27620527852 function calls (27620405813 primitive calls) in 9548.037 seconds
        1   15.212   15.212 9547.244 9547.244 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100   27.642    0.003 9531.993    0.944 GerrymanderingMCMC.py:235(recombination_of_districts)
   865181    7.800    0.000 8158.700    0.009 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  3460724    4.585    0.000 5980.334    0.002 GerrymanderingMCMC.py:190(__district_size)
1889460322 1120.014    0.000 4376.436    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   28.095    0.003  889.800    0.088 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.044    0.000   59.287    0.003 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.062    0.000   56.297    0.003 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   19.206    0.001   56.164    0.003 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.147    0.000   47.612    0.005 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    6.699    0.001   42.969    0.004 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.109    0.000    4.563    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.340    0.000    1.019    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.748    0.748 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.040    0.040 GerrymanderingMCMC.py:21(__init__)
        1    0.008    0.008    0.040    0.040 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.009    0.009 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
