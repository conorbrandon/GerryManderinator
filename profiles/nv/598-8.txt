         26154897336 function calls (26154775297 primitive calls) in 8965.413 seconds
        1   15.254   15.254 8964.636 8964.636 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100   25.604    0.003 8949.345    0.886 GerrymanderingMCMC.py:235(recombination_of_districts)
   816527    7.058    0.000 7587.334    0.009 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  3266108    4.295    0.000 5535.231    0.002 GerrymanderingMCMC.py:190(__district_size)
1774018840 1054.756    0.000 4054.273    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   27.828    0.003  882.958    0.087 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.044    0.000   58.742    0.003 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.060    0.000   55.780    0.003 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   19.472    0.001   55.647    0.003 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.146    0.000   47.385    0.005 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    6.663    0.001   42.682    0.004 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.107    0.000    4.468    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.335    0.000    0.989    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.735    0.735 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.039    0.039 GerrymanderingMCMC.py:21(__init__)
        1    0.007    0.007    0.038    0.038 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.009    0.009 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
