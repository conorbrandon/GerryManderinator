         25606407102 function calls (25606285063 primitive calls) in 8682.366 seconds
        1   15.089   15.089 8681.649 8681.649 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100   25.224    0.002 8666.521    0.858 GerrymanderingMCMC.py:235(recombination_of_districts)
   795998    6.753    0.000 7306.081    0.009 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  3183992    4.127    0.000 5334.358    0.002 GerrymanderingMCMC.py:190(__district_size)
1733648864  994.949    0.000 3905.072    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   28.373    0.003  883.394    0.087 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.043    0.000   58.149    0.003 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.061    0.000   55.173    0.003 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   18.912    0.001   55.040    0.003 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.147    0.000   46.790    0.005 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10099    6.724    0.001   42.720    0.004 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.118    0.000    4.619    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.327    0.000    0.979    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.673    0.673 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.040    0.040 GerrymanderingMCMC.py:21(__init__)
        1    0.008    0.008    0.039    0.039 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.009    0.009 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
