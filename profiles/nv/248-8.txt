         25144628063 function calls (25144506024 primitive calls) in 8754.732 seconds
        1   15.196   15.196 8753.963 8753.963 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100   25.330    0.003 8738.728    0.865 GerrymanderingMCMC.py:235(recombination_of_districts)
   781849    7.312    0.000 7355.475    0.009 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  3127396    4.215    0.000 5358.212    0.002 GerrymanderingMCMC.py:190(__district_size)
1696252512  992.406    0.000 3916.416    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   29.252    0.003  897.056    0.089 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.046    0.000   59.418    0.003 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.060    0.000   56.409    0.003 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   19.214    0.001   56.279    0.003 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.149    0.000   48.090    0.005 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    6.699    0.001   43.418    0.004 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.112    0.000    4.548    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.346    0.000    1.017    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.726    0.726 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.040    0.040 GerrymanderingMCMC.py:21(__init__)
        1    0.008    0.008    0.039    0.039 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.009    0.009 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
