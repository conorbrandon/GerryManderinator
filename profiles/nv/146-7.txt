         26654644949 function calls (26654522910 primitive calls) in 14052.866 seconds
        1   16.927   16.927 14051.824 14051.824 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100   40.820    0.004 14034.811    1.390 GerrymanderingMCMC.py:235(recombination_of_districts)
   834615   10.246    0.000 11933.256    0.014 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  3338460    6.704    0.000 8733.886    0.003 GerrymanderingMCMC.py:190(__district_size)
1818381596 1608.478    0.000 6407.837    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   42.763    0.004 1368.771    0.136 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.054    0.000   87.854    0.004 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.075    0.000   83.508    0.004 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   27.693    0.001   83.350    0.004 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.210    0.000   71.742    0.007 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    9.689    0.001   65.606    0.006 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.132    0.000    6.633    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.494    0.000    1.519    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.963    0.963 GerrymanderingMCMC.py:1(<module>)
        1    0.001    0.001    0.061    0.061 GerrymanderingMCMC.py:21(__init__)
        1    0.012    0.012    0.061    0.061 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.013    0.013 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
