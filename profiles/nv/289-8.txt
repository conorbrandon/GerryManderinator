         25692923572 function calls (25692801533 primitive calls) in 8930.860 seconds
        1   15.462   15.462 8930.153 8930.153 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100   26.081    0.003 8914.651    0.883 GerrymanderingMCMC.py:235(recombination_of_districts)
   790923    7.033    0.000 7529.076    0.010 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  3163692    4.197    0.000 5493.689    0.002 GerrymanderingMCMC.py:190(__district_size)
1736796730 1026.167    0.000 4019.924    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10101   28.646    0.003  896.999    0.089 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.044    0.000   60.055    0.003 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.065    0.000   57.054    0.003 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   20.035    0.001   56.917    0.003 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.151    0.000   48.316    0.005 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    6.773    0.001   43.524    0.004 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.112    0.000    4.611    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.343    0.000    1.023    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.664    0.664 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.039    0.039 GerrymanderingMCMC.py:21(__init__)
        1    0.007    0.007    0.038    0.038 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.009    0.009 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
