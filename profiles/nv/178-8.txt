         24980034197 function calls (24979912158 primitive calls) in 8546.300 seconds
        1   15.041   15.041 8545.528 8545.528 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100   24.691    0.002 8530.451    0.845 GerrymanderingMCMC.py:235(recombination_of_districts)
   774473    6.711    0.000 7171.589    0.009 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  3097892    4.017    0.000 5248.365    0.002 GerrymanderingMCMC.py:190(__district_size)
1683501486  984.106    0.000 3847.694    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10101   27.788    0.003  883.310    0.087 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.043    0.000   58.574    0.003 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.060    0.000   55.640    0.003 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   18.971    0.001   55.513    0.003 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.144    0.000   47.230    0.005 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10099    6.609    0.001   42.449    0.004 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.106    0.000    4.425    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.329    0.000    0.996    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.729    0.729 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.039    0.039 GerrymanderingMCMC.py:21(__init__)
        1    0.007    0.007    0.039    0.039 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.009    0.009 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
