         25477360898 function calls (25477238859 primitive calls) in 8664.103 seconds
        1   15.235   15.235 8663.366 8663.366 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100   25.217    0.002 8648.094    0.856 GerrymanderingMCMC.py:235(recombination_of_districts)
   772048    6.732    0.000 7286.163    0.009 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  3088192    4.051    0.000 5325.327    0.002 GerrymanderingMCMC.py:190(__district_size)
1712196504  996.686    0.000 3872.466    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   28.412    0.003  884.467    0.088 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.046    0.000   58.359    0.003 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.063    0.000   55.382    0.003 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   18.942    0.001   55.251    0.003 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.147    0.000   46.941    0.005 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    6.542    0.001   42.480    0.004 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.107    0.000    4.494    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.325    0.000    0.970    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.696    0.696 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.039    0.039 GerrymanderingMCMC.py:21(__init__)
        1    0.007    0.007    0.038    0.038 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.009    0.009 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
