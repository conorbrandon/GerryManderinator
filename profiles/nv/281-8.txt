         26083679773 function calls (26083557734 primitive calls) in 8859.322 seconds
        1   15.325   15.325 8858.552 8858.552 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100   25.909    0.003 8843.189    0.876 GerrymanderingMCMC.py:235(recombination_of_districts)
   819687    7.217    0.000 7481.334    0.009 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  3278748    4.238    0.000 5440.470    0.002 GerrymanderingMCMC.py:190(__district_size)
1774457892 1007.856    0.000 3980.706    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   27.723    0.003  883.645    0.087 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.043    0.000   58.371    0.003 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.061    0.000   55.409    0.003 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   19.079    0.001   55.279    0.003 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.147    0.000   47.227    0.005 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    6.556    0.001   42.530    0.004 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.110    0.000    4.549    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.330    0.000    0.979    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.726    0.726 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.041    0.041 GerrymanderingMCMC.py:21(__init__)
        1    0.008    0.008    0.040    0.040 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.009    0.009 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
