         25245959576 function calls (25245837537 primitive calls) in 8777.069 seconds
        1   15.324   15.324 8776.356 8776.356 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100   25.438    0.003 8760.993    0.867 GerrymanderingMCMC.py:235(recombination_of_districts)
   778873    7.052    0.000 7379.389    0.009 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  3115492    4.129    0.000 5390.092    0.002 GerrymanderingMCMC.py:190(__district_size)
1702945806 1017.568    0.000 3942.900    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   28.416    0.003  897.454    0.089 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.052    0.000   59.610    0.003 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.063    0.000   56.550    0.003 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   19.389    0.001   56.414    0.003 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.151    0.000   48.090    0.005 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    6.730    0.001   43.366    0.004 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.113    0.000    4.652    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.337    0.000    1.006    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.671    0.671 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.039    0.039 GerrymanderingMCMC.py:21(__init__)
        1    0.007    0.007    0.038    0.038 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.009    0.009 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
