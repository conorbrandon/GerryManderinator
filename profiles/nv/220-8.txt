         25213181360 function calls (25213059321 primitive calls) in 8602.743 seconds
        1   15.232   15.232 8601.953 8601.953 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100   24.931    0.002 8586.673    0.850 GerrymanderingMCMC.py:235(recombination_of_districts)
   782479    6.912    0.000 7219.354    0.009 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  3129916    4.094    0.000 5261.676    0.002 GerrymanderingMCMC.py:190(__district_size)
1703985822  978.013    0.000 3853.416    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   28.451    0.003  889.129    0.088 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.045    0.000   58.622    0.003 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.061    0.000   55.640    0.003 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   19.149    0.001   55.511    0.003 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.146    0.000   47.271    0.005 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    6.585    0.001   42.672    0.004 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.107    0.000    4.518    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.336    0.000    0.995    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.745    0.745 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.040    0.040 GerrymanderingMCMC.py:21(__init__)
        1    0.008    0.008    0.040    0.040 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.009    0.009 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
