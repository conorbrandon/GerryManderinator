         25676848704 function calls (25676726665 primitive calls) in 8964.949 seconds
        1   15.178   15.178 8964.181 8964.181 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100   25.906    0.003 8948.965    0.886 GerrymanderingMCMC.py:235(recombination_of_districts)
   783409    7.207    0.000 7551.548    0.010 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  3133636    4.220    0.000 5523.187    0.002 GerrymanderingMCMC.py:190(__district_size)
1729539182 1032.143    0.000 3995.764    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   28.951    0.003  911.828    0.090 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.045    0.000   59.076    0.003 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.063    0.000   56.038    0.003 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   19.078    0.001   55.898    0.003 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.147    0.000   47.719    0.005 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    6.807    0.001   43.857    0.004 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.106    0.000    4.644    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.330    0.000    0.987    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.724    0.724 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.040    0.040 GerrymanderingMCMC.py:21(__init__)
        1    0.008    0.008    0.039    0.039 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.009    0.009 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
