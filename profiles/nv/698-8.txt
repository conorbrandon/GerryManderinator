         26718368502 function calls (26718246463 primitive calls) in 9292.940 seconds
        1   15.431   15.431 9292.165 9292.165 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100   27.498    0.003 9276.670    0.918 GerrymanderingMCMC.py:235(recombination_of_districts)
   830743    7.552    0.000 7888.529    0.009 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  3322972    4.462    0.000 5764.252    0.002 GerrymanderingMCMC.py:190(__district_size)
1818379746 1091.402    0.000 4214.948    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   28.727    0.003  899.852    0.089 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.045    0.000   59.431    0.003 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.062    0.000   56.407    0.003 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   19.119    0.001   56.271    0.003 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.151    0.000   48.024    0.005 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10099    6.675    0.001   43.335    0.004 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.114    0.000    4.686    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.335    0.000    1.009    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.732    0.732 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.039    0.039 GerrymanderingMCMC.py:21(__init__)
        1    0.007    0.007    0.038    0.038 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.009    0.009 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
