         25939126231 function calls (25939004192 primitive calls) in 8793.556 seconds
        1   14.963   14.963 8792.792 8792.792 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100   25.826    0.003 8777.791    0.869 GerrymanderingMCMC.py:235(recombination_of_districts)
   800436    6.895    0.000 7419.884    0.009 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  3201744    4.199    0.000 5419.161    0.002 GerrymanderingMCMC.py:190(__district_size)
1755182468 1020.687    0.000 3952.961    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   28.680    0.003  883.235    0.087 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.044    0.000   57.868    0.003 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.067    0.000   54.921    0.003 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   18.780    0.001   54.785    0.003 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.144    0.000   46.763    0.005 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    6.556    0.001   42.277    0.004 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.109    0.000    4.447    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.340    0.000    0.998    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.722    0.722 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.039    0.039 GerrymanderingMCMC.py:21(__init__)
        1    0.007    0.007    0.039    0.039 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.009    0.009 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
