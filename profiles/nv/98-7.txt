         24873713786 function calls (24873591747 primitive calls) in 13213.646 seconds
        1   16.896   16.896 13212.602 13212.602 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100   37.467    0.004 13195.648    1.306 GerrymanderingMCMC.py:235(recombination_of_districts)
   762806    9.491    0.000 11093.875    0.015 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  3051224    6.113    0.000 8146.039    0.003 GerrymanderingMCMC.py:190(__district_size)
1671024930 1489.136    0.000 5958.252    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   42.787    0.004 1374.487    0.136 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.058    0.000   89.069    0.004 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.076    0.000   84.734    0.004 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   27.720    0.001   84.571    0.004 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.211    0.000   72.215    0.007 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    9.709    0.001   65.807    0.007 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.135    0.000    6.754    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.488    0.000    1.508    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.977    0.977 GerrymanderingMCMC.py:1(<module>)
        1    0.001    0.001    0.063    0.063 GerrymanderingMCMC.py:21(__init__)
        1    0.011    0.011    0.062    0.062 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.013    0.013 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
