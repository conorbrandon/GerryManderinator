         28010135022 function calls (28010012983 primitive calls) in 9577.834 seconds
        1   15.413   15.413 9577.124 9577.124 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100   28.425    0.003 9561.671    0.947 GerrymanderingMCMC.py:235(recombination_of_districts)
   881073    7.656    0.000 8182.339    0.009 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  3524292    4.549    0.000 5975.185    0.002 GerrymanderingMCMC.py:190(__district_size)
1922725104 1107.087    0.000 4371.156    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   28.600    0.003  896.685    0.089 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.043    0.000   58.308    0.003 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.063    0.000   55.316    0.003 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   18.807    0.001   55.183    0.003 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.148    0.000   47.169    0.005 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    6.630    0.001   42.925    0.004 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.110    0.000    4.581    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.328    0.000    0.983    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.668    0.668 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.039    0.039 GerrymanderingMCMC.py:21(__init__)
        1    0.008    0.008    0.039    0.039 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.009    0.009 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
