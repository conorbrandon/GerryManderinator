         25074494516 function calls (25074372477 primitive calls) in 13465.921 seconds
        1   16.984   16.984 13464.309 13464.309 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100   38.344    0.004 13447.251    1.331 GerrymanderingMCMC.py:235(recombination_of_districts)
   786223    9.645    0.000 11338.149    0.014 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  3144892    6.364    0.000 8300.852    0.003 GerrymanderingMCMC.py:190(__district_size)
1694562292 1531.656    0.000 6065.306    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   42.274    0.004 1380.898    0.137 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.055    0.000   89.575    0.004 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.078    0.000   85.192    0.004 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   27.861    0.001   85.026    0.004 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.215    0.000   72.863    0.007 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    9.770    0.001   66.487    0.007 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.145    0.000    6.830    0.000 GerrymanderingMCMC.py:157(__random_district_label)
        1    0.000    0.000    1.631    1.631 GerrymanderingMCMC.py:1(<module>)
    10100    0.496    0.000    1.523    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.001    0.001    0.062    0.062 GerrymanderingMCMC.py:21(__init__)
        1    0.012    0.012    0.061    0.061 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.013    0.013 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
