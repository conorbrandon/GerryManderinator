         25748439333 function calls (25748317294 primitive calls) in 9016.188 seconds
        1   15.650   15.650 9015.407 9015.407 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100   26.184    0.003 8999.720    0.891 GerrymanderingMCMC.py:235(recombination_of_districts)
   807202    7.423    0.000 7611.165    0.009 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  3228808    4.343    0.000 5561.110    0.002 GerrymanderingMCMC.py:190(__district_size)
1748260166 1042.555    0.000 4078.295    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   28.613    0.003  899.621    0.089 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.044    0.000   60.204    0.003 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.063    0.000   57.183    0.003 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   19.664    0.001   57.045    0.003 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.156    0.000   48.288    0.005 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10099    6.813    0.001   43.488    0.004 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.114    0.000    4.660    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.346    0.000    1.017    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.738    0.738 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.039    0.039 GerrymanderingMCMC.py:21(__init__)
        1    0.007    0.007    0.039    0.039 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.009    0.009 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
