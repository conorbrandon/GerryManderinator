         27739178038 function calls (27739055999 primitive calls) in 9546.105 seconds
        1   15.450   15.450 9545.338 9545.338 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100   28.398    0.003 9529.798    0.944 GerrymanderingMCMC.py:235(recombination_of_districts)
   880593    7.662    0.000 8148.960    0.009 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  3522372    4.581    0.000 5941.974    0.002 GerrymanderingMCMC.py:190(__district_size)
1907901394 1104.327    0.000 4363.534    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   28.471    0.003  894.388    0.089 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.045    0.000   58.942    0.003 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.063    0.000   55.930    0.003 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   18.999    0.001   55.794    0.003 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.147    0.000   47.518    0.005 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    6.658    0.001   42.900    0.004 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.118    0.000    4.590    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.328    0.000    0.997    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.725    0.725 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.039    0.039 GerrymanderingMCMC.py:21(__init__)
        1    0.007    0.007    0.038    0.038 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.009    0.009 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
