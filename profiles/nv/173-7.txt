         26473465827 function calls (26473343788 primitive calls) in 14392.545 seconds
        1   17.458   17.458 14391.462 14391.462 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100   41.613    0.004 14373.946    1.423 GerrymanderingMCMC.py:235(recombination_of_districts)
   818091   10.522    0.000 12226.878    0.015 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  3272364    6.743    0.000 8970.824    0.003 GerrymanderingMCMC.py:190(__district_size)
1796965440 1648.876    0.000 6564.720    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   43.796    0.004 1402.618    0.139 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.058    0.000   90.898    0.004 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.080    0.000   86.390    0.004 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   28.253    0.001   86.219    0.004 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.221    0.000   73.943    0.007 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100   10.036    0.001   67.117    0.007 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.141    0.000    6.824    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.531    0.000    1.585    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    1.016    1.016 GerrymanderingMCMC.py:1(<module>)
        1    0.001    0.001    0.063    0.063 GerrymanderingMCMC.py:21(__init__)
        1    0.012    0.012    0.062    0.062 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.014    0.014 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
