         26836530888 function calls (26836408849 primitive calls) in 9346.758 seconds
        1   15.382   15.382 9346.041 9346.041 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100   27.287    0.003 9330.597    0.924 GerrymanderingMCMC.py:235(recombination_of_districts)
   842048    7.641    0.000 7944.124    0.009 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  3368192    4.524    0.000 5825.455    0.002 GerrymanderingMCMC.py:190(__district_size)
1830408070 1082.390    0.000 4268.542    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   28.538    0.003  900.908    0.089 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.046    0.000   59.098    0.003 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.061    0.000   56.092    0.003 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   19.161    0.001   55.959    0.003 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.149    0.000   47.535    0.005 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10099    6.684    0.001   43.187    0.004 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.113    0.000    4.643    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.337    0.000    1.014    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.675    0.675 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.039    0.039 GerrymanderingMCMC.py:21(__init__)
        1    0.007    0.007    0.038    0.038 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.009    0.009 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
