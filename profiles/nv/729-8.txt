         26065040290 function calls (26064918251 primitive calls) in 8897.879 seconds
        1   15.104   15.104 8897.117 8897.117 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100   26.234    0.003 8881.975    0.879 GerrymanderingMCMC.py:235(recombination_of_districts)
   803336    7.124    0.000 7512.773    0.009 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  3213344    4.222    0.000 5482.972    0.002 GerrymanderingMCMC.py:190(__district_size)
1764567960 1008.449    0.000 4000.822    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   28.235    0.003  889.684    0.088 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.042    0.000   59.029    0.003 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.062    0.000   56.069    0.003 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   19.416    0.001   55.938    0.003 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.152    0.000   47.369    0.005 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    6.692    0.001   42.916    0.004 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.112    0.000    4.605    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.336    0.000    0.992    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.719    0.719 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.040    0.040 GerrymanderingMCMC.py:21(__init__)
        1    0.008    0.008    0.040    0.040 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.009    0.009 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
