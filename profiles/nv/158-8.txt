         25054516737 function calls (25054394698 primitive calls) in 8738.000 seconds
        1   15.269   15.269 8737.277 8737.277 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100   24.944    0.002 8721.951    0.864 GerrymanderingMCMC.py:235(recombination_of_districts)
   784793    6.940    0.000 7339.413    0.009 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  3139172    4.203    0.000 5367.924    0.002 GerrymanderingMCMC.py:190(__district_size)
1694128068 1004.103    0.000 3938.113    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   28.542    0.003  896.386    0.089 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.043    0.000   59.571    0.003 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.062    0.000   56.548    0.003 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   19.508    0.001   56.418    0.003 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.146    0.000   47.905    0.005 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    6.721    0.001   43.278    0.004 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.109    0.000    4.589    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.342    0.000    1.009    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.680    0.680 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.040    0.040 GerrymanderingMCMC.py:21(__init__)
        1    0.008    0.008    0.039    0.039 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.009    0.009 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
