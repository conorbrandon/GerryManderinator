         26880541030 function calls (26880418991 primitive calls) in 14555.609 seconds
        1   17.162   17.162 14554.543 14554.543 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100   42.140    0.004 14537.325    1.439 GerrymanderingMCMC.py:235(recombination_of_districts)
   844952   10.523    0.000 12396.722    0.015 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  3379808    6.943    0.000 9091.035    0.003 GerrymanderingMCMC.py:190(__district_size)
1834045444 1691.013    0.000 6662.274    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   43.122    0.004 1398.459    0.138 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.060    0.000   89.988    0.004 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.078    0.000   85.572    0.004 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   28.075    0.001   85.404    0.004 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.214    0.000   73.373    0.007 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    9.945    0.001   66.807    0.007 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.139    0.000    6.825    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.503    0.000    1.565    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.999    0.999 GerrymanderingMCMC.py:1(<module>)
        1    0.001    0.001    0.063    0.063 GerrymanderingMCMC.py:21(__init__)
        1    0.012    0.012    0.063    0.063 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.014    0.014 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
