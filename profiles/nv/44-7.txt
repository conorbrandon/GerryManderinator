         26243333383 function calls (26243211344 primitive calls) in 14284.799 seconds
        1   17.454   17.454 14283.686 14283.686 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100   41.079    0.004 14266.158    1.412 GerrymanderingMCMC.py:235(recombination_of_districts)
   833728   10.563    0.000 12125.372    0.015 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  3334912    6.838    0.000 8895.460    0.003 GerrymanderingMCMC.py:190(__district_size)
1792616760 1647.138    0.000 6551.369    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   44.221    0.004 1398.827    0.138 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.056    0.000   89.807    0.004 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.079    0.000   85.388    0.004 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   28.078    0.001   85.219    0.004 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.218    0.000   73.115    0.007 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10099    9.909    0.001   66.749    0.007 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.139    0.000    6.836    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.514    0.000    1.573    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    1.046    1.046 GerrymanderingMCMC.py:1(<module>)
        1    0.001    0.001    0.063    0.063 GerrymanderingMCMC.py:21(__init__)
        1    0.012    0.012    0.063    0.063 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.014    0.014 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
