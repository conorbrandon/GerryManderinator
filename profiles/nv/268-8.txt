         26242795567 function calls (26242673528 primitive calls) in 9031.625 seconds
        1   15.227   15.227 9030.865 9030.865 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100   26.273    0.003 9015.598    0.893 GerrymanderingMCMC.py:235(recombination_of_districts)
   821838    7.495    0.000 7639.002    0.009 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  3287352    4.358    0.000 5573.316    0.002 GerrymanderingMCMC.py:190(__district_size)
1785584374 1050.851    0.000 4072.011    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   28.601    0.003  895.172    0.089 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.045    0.000   58.099    0.003 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.060    0.000   55.100    0.003 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   18.823    0.001   54.969    0.003 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.150    0.000   46.978    0.005 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10098    6.717    0.001   42.945    0.004 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.110    0.000    4.593    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.330    0.000    0.984    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.717    0.717 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.040    0.040 GerrymanderingMCMC.py:21(__init__)
        1    0.008    0.008    0.040    0.040 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.009    0.009 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
