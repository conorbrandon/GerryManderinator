         25884405406 function calls (25884283367 primitive calls) in 8854.847 seconds
        1   14.992   14.992 8854.125 8854.125 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100   25.528    0.003 8839.096    0.875 GerrymanderingMCMC.py:235(recombination_of_districts)
   823533    6.998    0.000 7480.637    0.009 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  3294132    4.201    0.000 5474.464    0.002 GerrymanderingMCMC.py:190(__district_size)
1763735862 1022.790    0.000 4036.099    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   28.809    0.003  881.713    0.087 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.042    0.000   58.418    0.003 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.059    0.000   55.477    0.003 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   18.840    0.001   55.352    0.003 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.148    0.000   46.974    0.005 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    6.492    0.001   42.282    0.004 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.104    0.000    4.471    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.329    0.000    0.997    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.679    0.679 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.039    0.039 GerrymanderingMCMC.py:21(__init__)
        1    0.007    0.007    0.038    0.038 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.009    0.009 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
