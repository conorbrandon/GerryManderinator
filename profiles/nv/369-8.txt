         25255023912 function calls (25254901873 primitive calls) in 8780.668 seconds
        1   15.612   15.612 8779.939 8779.939 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100   25.918    0.003 8764.286    0.868 GerrymanderingMCMC.py:235(recombination_of_districts)
   781593    7.247    0.000 7376.406    0.009 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  3126372    4.260    0.000 5396.135    0.002 GerrymanderingMCMC.py:190(__district_size)
1706600596 1003.466    0.000 3944.324    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   28.781    0.003  898.023    0.089 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.045    0.000   59.561    0.003 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.064    0.000   56.541    0.003 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   19.453    0.001   56.404    0.003 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.151    0.000   47.955    0.005 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    6.660    0.001   43.014    0.004 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.115    0.000    4.674    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.340    0.000    0.997    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.687    0.687 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.039    0.039 GerrymanderingMCMC.py:21(__init__)
        1    0.007    0.007    0.038    0.038 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.009    0.009 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
