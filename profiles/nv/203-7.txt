         26192021435 function calls (26191899396 primitive calls) in 14436.339 seconds
        1   17.047   17.047 14435.329 14435.329 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100   40.812    0.004 14418.226    1.428 GerrymanderingMCMC.py:235(recombination_of_districts)
   834733   10.725    0.000 12244.966    0.015 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  3338932    6.992    0.000 8968.743    0.003 GerrymanderingMCMC.py:190(__district_size)
1787480518 1637.227    0.000 6587.669    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   43.226    0.004 1420.221    0.141 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.056    0.000   92.575    0.005 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.081    0.000   88.087    0.004 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   28.651    0.001   87.914    0.004 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.224    0.000   75.330    0.007 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    9.926    0.001   67.979    0.007 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.140    0.000    7.024    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.517    0.000    1.582    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.946    0.946 GerrymanderingMCMC.py:1(<module>)
        1    0.001    0.001    0.060    0.060 GerrymanderingMCMC.py:21(__init__)
        1    0.012    0.012    0.059    0.059 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.013    0.013 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
