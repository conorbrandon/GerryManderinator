         25974601992 function calls (25974479953 primitive calls) in 8970.956 seconds
        1   15.282   15.282 8970.193 8970.193 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100   25.689    0.003 8954.873    0.887 GerrymanderingMCMC.py:235(recombination_of_districts)
   811544    7.035    0.000 7584.605    0.009 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  3246176    4.294    0.000 5538.426    0.002 GerrymanderingMCMC.py:190(__district_size)
1764318694 1049.930    0.000 4055.092    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   28.368    0.003  888.758    0.088 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.043    0.000   58.922    0.003 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.063    0.000   55.951    0.003 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   19.318    0.001   55.819    0.003 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.148    0.000   47.415    0.005 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    6.657    0.001   42.955    0.004 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.116    0.000    4.583    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.340    0.000    1.013    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.719    0.719 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.040    0.040 GerrymanderingMCMC.py:21(__init__)
        1    0.008    0.008    0.040    0.040 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.009    0.009 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
