         25550192247 function calls (25550070208 primitive calls) in 8846.202 seconds
        1   15.396   15.396 8845.490 8845.490 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100   24.892    0.002 8830.053    0.874 GerrymanderingMCMC.py:235(recombination_of_districts)
   783447    6.999    0.000 7465.190    0.010 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  3133788    4.150    0.000 5469.234    0.002 GerrymanderingMCMC.py:190(__district_size)
1719326356 1019.749    0.000 3967.543    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   28.271    0.003  885.928    0.088 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.050    0.000   58.586    0.003 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.064    0.000   55.590    0.003 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   19.243    0.001   55.456    0.003 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.148    0.000   47.162    0.005 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    6.813    0.001   43.147    0.004 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.116    0.000    4.555    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.326    0.000    0.978    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.669    0.669 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.039    0.039 GerrymanderingMCMC.py:21(__init__)
        1    0.007    0.007    0.039    0.039 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.009    0.009 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
