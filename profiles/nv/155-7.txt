         26137244668 function calls (26137122629 primitive calls) in 14450.472 seconds
        1   17.506   17.506 14449.412 14449.412 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100   41.890    0.004 14431.846    1.429 GerrymanderingMCMC.py:235(recombination_of_districts)
   824976   10.297    0.000 12253.533    0.015 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  3299904    6.859    0.000 8983.961    0.003 GerrymanderingMCMC.py:190(__district_size)
1781511394 1661.469    0.000 6610.242    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   44.002    0.004 1421.884    0.141 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.055    0.000   93.353    0.005 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.088    0.000   88.871    0.004 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   29.150    0.001   88.694    0.004 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.222    0.000   75.164    0.007 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10099    9.956    0.001   68.089    0.007 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.144    0.000    7.010    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.522    0.000    1.603    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.992    0.992 GerrymanderingMCMC.py:1(<module>)
        1    0.001    0.001    0.063    0.063 GerrymanderingMCMC.py:21(__init__)
        1    0.012    0.012    0.062    0.062 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.014    0.014 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
