         26081431972 function calls (26081309933 primitive calls) in 14517.568 seconds
        1   17.277   17.277 14516.509 14516.509 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100   41.532    0.004 14499.150    1.436 GerrymanderingMCMC.py:235(recombination_of_districts)
   810844   10.586    0.000 12309.883    0.015 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  3243376    6.920    0.000 9034.761    0.003 GerrymanderingMCMC.py:190(__district_size)
1768144966 1664.806    0.000 6606.015    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   44.401    0.004 1432.944    0.142 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.057    0.000   92.211    0.005 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.078    0.000   87.657    0.004 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   29.188    0.001   87.491    0.004 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.218    0.000   75.333    0.007 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100   10.263    0.001   68.943    0.007 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.142    0.000    7.053    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.511    0.000    1.562    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.991    0.991 GerrymanderingMCMC.py:1(<module>)
        1    0.001    0.001    0.063    0.063 GerrymanderingMCMC.py:21(__init__)
        1    0.012    0.012    0.062    0.062 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.014    0.014 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
