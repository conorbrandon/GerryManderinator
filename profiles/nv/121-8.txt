         27135209329 function calls (27135087290 primitive calls) in 9094.182 seconds
        1   14.938   14.938 9093.437 9093.437 GerrymanderingMCMC.py:379(generate_alternative_plans)
    10100   26.810    0.003 9078.462    0.899 GerrymanderingMCMC.py:235(recombination_of_districts)
   868078    7.159    0.000 7730.234    0.009 GerrymanderingMCMC.py:197(__is_valid_district_plan)
  3472312    4.412    0.000 5641.921    0.002 GerrymanderingMCMC.py:190(__district_size)
1861014470 1058.837    0.000 4144.721    0.000 GerrymanderingMCMC.py:195(<lambda>)
    10100   27.747    0.003  874.773    0.087 GerrymanderingMCMC.py:301(__random_spanning_tree)
    20200    0.043    0.000   57.507    0.003 GerrymanderingMCMC.py:182(__get_district_subgraph)
    20200    0.059    0.000   54.598    0.003 GerrymanderingMCMC.py:175(__get_district_nodes)
    20200   18.578    0.001   54.473    0.003 GerrymanderingMCMC.py:180(<listcomp>)
    10100    0.147    0.000   46.435    0.005 GerrymanderingMCMC.py:163(__find_neighboring_district)
    10100    6.466    0.001   41.758    0.004 GerrymanderingMCMC.py:220(__update_new_districts_with_cut)
    30300    0.107    0.000    4.443    0.000 GerrymanderingMCMC.py:157(__random_district_label)
    10100    0.326    0.000    0.981    0.000 GerrymanderingMCMC.py:170(<listcomp>)
        1    0.000    0.000    0.703    0.703 GerrymanderingMCMC.py:1(<module>)
        1    0.000    0.000    0.039    0.039 GerrymanderingMCMC.py:21(__init__)
        1    0.007    0.007    0.039    0.039 GerrymanderingMCMC.py:74(read_graph)
        1    0.000    0.000    0.009    0.009 GerrymanderingMCMC.py:96(__load_json)
        1    0.000    0.000    0.000    0.000 GerrymanderingMCMC.py:15(GerrymanderingMCMC)
